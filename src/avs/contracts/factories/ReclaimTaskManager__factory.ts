/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReclaimTaskManager,
  ReclaimTaskManagerInterface,
} from "../ReclaimTaskManager";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_stakeRegistry",
        type: "address",
        internalType: "contract IStakeRegistry",
      },
      {
        name: "_rewardsCoordinator",
        type: "address",
        internalType: "contract IRewardsCoordinator",
      },
      {
        name: "_pauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allTaskHashes",
    inputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createNewTask",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct IReclaimTaskManager.ClaimRequest",
        components: [
          {
            name: "provider",
            type: "string",
            internalType: "string",
          },
          {
            name: "claimUserId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "claimHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "requestedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "requestSignature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "defaultStrategy",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "encodeClaimRequest",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct IReclaimTaskManager.ClaimRequest",
        components: [
          {
            name: "provider",
            type: "string",
            internalType: "string",
          },
          {
            name: "claimUserId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "claimHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "requestedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getBatchOperatorFromId",
    inputs: [
      {
        name: "registryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "operatorIds",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    outputs: [
      {
        name: "operators",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBatchOperatorId",
    inputs: [
      {
        name: "registryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "operators",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [
      {
        name: "operatorIds",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCheckSignaturesIndices",
    inputs: [
      {
        name: "registryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "referenceBlockNumber",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "quorumNumbers",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "nonSignerOperatorIds",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct OperatorStateRetriever.CheckSignaturesIndices",
        components: [
          {
            name: "nonSignerQuorumBitmapIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "quorumApkIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "totalStakeIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "nonSignerStakeIndices",
            type: "uint32[][]",
            internalType: "uint32[][]",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLatestTaskNum",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorState",
    inputs: [
      {
        name: "registryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "quorumNumbers",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "blockNumber",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[][]",
        internalType: "struct OperatorStateRetriever.Operator[][]",
        components: [
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
          {
            name: "operatorId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "stake",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorState",
    inputs: [
      {
        name: "registryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "operatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "blockNumber",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "tuple[][]",
        internalType: "struct OperatorStateRetriever.Operator[][]",
        components: [
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
          {
            name: "operatorId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "stake",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuorumBitmapsAtBlockNumber",
    inputs: [
      {
        name: "registryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "operatorIds",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "blockNumber",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTaskCreationMetadata",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IReclaimTaskManager.TaskCreationMetadata",
        components: [
          {
            name: "maxTaskLifetimeS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minSignaturesPerTask",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "maxTaskCreationDelayS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "strategy",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "latestTaskNum",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "operatorHasMinimumWeight",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsCoordinator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRewardsCoordinator",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setRewardsCoordinator",
    inputs: [
      {
        name: "_rewardsCoordinator",
        type: "address",
        internalType: "contract IRewardsCoordinator",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setStakeRegistry",
    inputs: [
      {
        name: "_stakeRegistry",
        type: "address",
        internalType: "contract IStakeRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStakeRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "taskCompleted",
    inputs: [
      {
        name: "completedTask",
        type: "tuple",
        internalType: "struct IReclaimTaskManager.CompletedTask",
        components: [
          {
            name: "task",
            type: "tuple",
            internalType: "struct IReclaimTaskManager.Task",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct IReclaimTaskManager.ClaimRequest",
                components: [
                  {
                    name: "provider",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "claimUserId",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "claimHash",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "requestedAt",
                    type: "uint32",
                    internalType: "uint32",
                  },
                  {
                    name: "owner",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "fee",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "createdAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "expiresAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "minimumSignatures",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "operators",
                type: "tuple[]",
                internalType: "struct IReclaimTaskManager.ReclaimOperator[]",
                components: [
                  {
                    name: "addr",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "url",
                    type: "string",
                    internalType: "string",
                  },
                ],
              },
              {
                name: "feePaid",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "signatures",
            type: "bytes[]",
            internalType: "bytes[]",
          },
        ],
      },
      {
        name: "referenceTaskIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "taskCreationMetadata",
    inputs: [],
    outputs: [
      {
        name: "maxTaskLifetimeS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "minSignaturesPerTask",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "maxTaskCreationDelayS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "minFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateTaskCreationMetadata",
    inputs: [
      {
        name: "newMetadata",
        type: "tuple",
        internalType: "struct IReclaimTaskManager.TaskCreationMetadata",
        components: [
          {
            name: "maxTaskLifetimeS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minSignaturesPerTask",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "maxTaskCreationDelayS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewTaskCreated",
    inputs: [
      {
        name: "taskIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "task",
        type: "tuple",
        indexed: false,
        internalType: "struct IReclaimTaskManager.Task",
        components: [
          {
            name: "request",
            type: "tuple",
            internalType: "struct IReclaimTaskManager.ClaimRequest",
            components: [
              {
                name: "provider",
                type: "string",
                internalType: "string",
              },
              {
                name: "claimUserId",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "claimHash",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "requestedAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "owner",
                type: "address",
                internalType: "address",
              },
              {
                name: "fee",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "createdAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "expiresAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minimumSignatures",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "operators",
            type: "tuple[]",
            internalType: "struct IReclaimTaskManager.ReclaimOperator[]",
            components: [
              {
                name: "addr",
                type: "address",
                internalType: "address",
              },
              {
                name: "url",
                type: "string",
                internalType: "string",
              },
            ],
          },
          {
            name: "feePaid",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TaskCompleted",
    inputs: [
      {
        name: "taskIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "task",
        type: "tuple",
        indexed: false,
        internalType: "struct IReclaimTaskManager.CompletedTask",
        components: [
          {
            name: "task",
            type: "tuple",
            internalType: "struct IReclaimTaskManager.Task",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct IReclaimTaskManager.ClaimRequest",
                components: [
                  {
                    name: "provider",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "claimUserId",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "claimHash",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "requestedAt",
                    type: "uint32",
                    internalType: "uint32",
                  },
                  {
                    name: "owner",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "fee",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "createdAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "expiresAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "minimumSignatures",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "operators",
                type: "tuple[]",
                internalType: "struct IReclaimTaskManager.ReclaimOperator[]",
                components: [
                  {
                    name: "addr",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "url",
                    type: "string",
                    internalType: "string",
                  },
                ],
              },
              {
                name: "feePaid",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "signatures",
            type: "bytes[]",
            internalType: "bytes[]",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CurrentlyPaused",
    inputs: [],
  },
  {
    type: "error",
    name: "InputAddressZero",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidNewPausedStatus",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyPauser",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyUnpauser",
    inputs: [],
  },
  {
    type: "error",
    name: "OperatorNotRegistered",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0806040523461015357604051601f6141c238819003918201601f19168301916001600160401b0383118484101761013f578084926060946040528339810103126100ef5780516001600160a01b03811691908290036100eb5760208101516001600160a01b03811691908290036100eb57604001516001600160a01b0381168082036100eb57156100dc5760805260018060a01b0319609754161760975560018060a01b0319609854161760985560405161402190816101a182396080518181816102240152818161180101528181611fb40152612c4d0152f35b6339b190bb60e11b5f5260045ffd5b5f80fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fdfe60806040526004361015610071575b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b5f5f3560e01c8063136439dd14612c3757806321df0da714612c0b5780632a982e7414612b7d5780632d89f6fc14612b4857806331b36bd9146129f45780633563b0d114612993578063485cc9551461280c5780634d2b57fe146126ed5780634f739f7414612077578063595c6a6714611fa25780635ac86ab714611f6f5780635c15566214611db15780635c975abb14611d9457806367ab980914611ca55780636830483514611c7d578063715018a614611c22578063762655e91461189357806384681e4614611830578063886f1195146117ec5780638a2fc4e3146117c45780638b00ce7c1461179e5780638da5cb5b14611776578063964c586d1461075a578063a3789c3814610734578063bef4b8bd146106ef578063cefdc1d41461049f578063d5dba76d1461047a578063e3b05f2f14610431578063f289a7fb146103ef578063f2fde38b14610326578063fabc1cbc1461020d5763fac5bb9b146101dc575061000e565b3461020857366003190112610203576096546040516001600160a01b039091168152602090f35b612d69565b612d19565b5034610208576020366003190112610203576004357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103215760206004916040519283809263755b36bd60e11b82525afa9081156103165783916102e7575b506001600160a01b031633036102d8576001541981198116036102c957806001556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a280f35b63c61dca5d60e01b8252600482fd5b63794821ff60e01b8252600482fd5b610309915060203d60201161030f575b6103018183612f42565b8101906134f3565b5f610279565b503d6102f7565b6040513d85823e3d90fd5b6133a6565b503461020857602036600319011261020357610340612e53565b610348613c02565b6001600160a01b0316801561039b57606480546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461020857366003190112610203576080609954609a5463ffffffff60405192818116845260ff8160201c16602085015260281c1660408301526060820152f35b5034610208576020366003190112610203576004356001600160a01b0381169081900361047657610460613c02565b6001600160601b0360a01b609854161760985580f35b5080fd5b3461020857602036600319011261020357610493612e53565b50602060405160018152f35b5034610208576060366003190112610203576104b9612e53565b602435916104c5612e1c565b6040938451906104d58683612f42565b60018252601f198601366020840137806104ee836134be565b526001600160a01b03851691823b156103215784610520918851809381926361c8a12f60e11b83528860048401613aac565b0381865afa9081156106e55763ffffffff916105439187916106c3575b506134be565b5116823b15610321576064602092885194859384926304ec635160e01b8452600484015263ffffffff8816602484015260448301525afa9081156106b957839161068a575b506001600160c01b038116908382805b61063b575061ffff6105aa9116613d04565b918493855b8451861080610630575b15610607576001811b84166001600160c01b03166105e0575b6105db90613a9e565b6105af565b9460016105db9160ff60f81b8860f81b16891a6105fd828961352e565b53019590506105d2565b888361062c61061785898d61353f565b835193849384528060208501528301906130ce565b0390f35b5061010081106105b9565b5f19810190808211610676579061ffff9116911661ffff8114610662576001019080610598565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b87526011600452602487fd5b6106ac915060203d6020116106b2575b6106a48183612f42565b810190613a73565b5f610588565b503d61069a565b85513d85823e3d90fd5b6106df91503d8089833e6106d78183612f42565b8101906139c2565b5f61053d565b87513d87823e3d90fd5b5034610208576020366003190112610203576004356001600160a01b038116908190036104765761071e613c02565b6001600160601b0360a01b609754161760975580f35b50346102085736600319011261020357602063ffffffff60985460a01c16604051908152f35b503461020857604036600319011261020357600435906001600160401b0382116117715760406003198336030112611768576040519161079983612f0c565b80600401356001600160401b0381116116f257810160c0600319823603011261176857604051906107c982612ef1565b60048101356001600160401b0381116116f2576107ec9060043691840101613306565b82526107fa60248201612e42565b602083015261080b60448201612e42565b6040830152606481013560ff8116810361176d57606083015260848101356001600160401b0381116116f25760049082010136601f820112156116e857803561085381612f63565b916108616040519384612f42565b81835260208084019260051b820101903682116116ed5760208101925b8284106116f75750505050608083015260a4013560a082015283526024810135906001600160401b0382116116f2570191366023840112156116e85760048301356108c881612f63565b936108d66040519586612f42565b818552602060048187019360051b83010101903682116116ed5760248101925b8284106116b7575050505060208101928352610910612e2f565b9063ffffffff8151604051610943816109356020820194602086526040830190613b3b565b03601f198101835282612f42565b519020921691825f52609b60205260405f20540361164c5763ffffffff6040825101511663ffffffff4216809111156116145781519384519463ffffffff6020604088015197608060018060a01b03910151169201511690604051966109a888612ec2565b87526020870152604086015260016060860152855190604051956109cb87612f0c565b8652602086019182526109e36080855101515161348c565b945f5b8651811015610a1b57600190818060a01b03610a078260808a5101516134df565b515116610a14828a6134df565b52016109e6565b5090919295835151156115df5751938451976040519860208a015260208952610a4560408a612f42565b88518060011b9080820460021490151715610b3f57610a6390613d04565b96604091825197610a74848a612f42565b601089526f181899199a1a9b1b9c1cb0b131b232b360811b60208a01525f5b8c51811015610b6757610aa6818e61352e565b518a516001600160f81b031991610ac991610ac39160f81c613cfa565b8c61352e565b5116908060011b9181830460021482151715610b3f57818f8e610af286610af8955f1a9261352e565b5361352e565b5160f81c8b518015610b53576001600160f81b031991610b1a9190068d61352e565b51169160018101809111610b3f57610b388d916001945f1a9261352e565b5301610a93565b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52601260045260245ffd5b508998508a845180602081019b61060f60f31b8d5280516020819201602284015e8101602281015f905203602201601f1981018252610ba69082612f42565b600160a01b600190036020840151166060938751610bc48682612f42565b602881526020810192601f1987013685375f5b6014811061151757505088518093602082019261060f60f31b8452518091602284015e8101602281015f905203602201601f1981018452610c189084612f42565b858983015163ffffffff16610c2c90613d2c565b920151610c3890613d2c565b9289519e8f95518091602088015e850190600560f91b6020830152518092602183015e01602001600560f91b600182015281516020819301600283015e01600101600560f91b600182015281516020819301600283015e01600101600181015f905203600101601f1981018b52610caf908b612f42565b885151610cbb9061348c565b975f5b8a518051821015610cfb5790610ce18d610cda836001956134df565b5190613c5a565b610ceb828d6134df565b90838060a01b0316905201610cbe565b5050959096919288935f985b86518a1015610dc9575f985f5b8751811015610db9576001600160a01b03610d2f828a6134df565b51166001600160a01b03610d438e8c6134df565b511614610d5257600101610d14565b5092959850929860019491945b15610d7557600101989297949197939093610d07565b875162461bcd60e51b815260206004820152601a60248201527f4d697373696e67206174746573746f72207369676e61747572650000000000006044820152606490fd5b5092959899909399949194610d5f565b938693929188958a835f52609b6020525f8881205560a086510151935f965b8851881015610e885760018801808911610b3f575b8951811015610e7c576001906001600160a01b03610e1b8b8d6134df565b51168b610e2e83858060a01b03926134df565b511610610e3c575b01610dfd565b818060a01b03610e4c8b8d6134df565b51168b610e6b8c858060a01b03610e6386856134df565b5116926134df565b52610e76828d6134df565b52610e36565b50600190970196610de8565b89899495969760018060a01b036097541697610ea2613411565b99835199610eb0858c612f42565b60018b52601f198501915f5b8381106114f457506096546001600160a01b0316610ed98d6134be565b5152610ee48c6134be565b516020016001905289519c610ef88e612f63565b87519e8f91610f079083612f42565b808252601f1990610f1790612f63565b01905f5b8281106114d057505050610f308b5183613cfa565b9b5f5b8c51811015610f76578f908e60208f83600195610f6d92610f5a83898060a01b03926134df565b5116610f6683836134df565b51526134df565b51015201610f33565b508e8e895196610f868b89612f42565b600188525f5b818110611497575050610f9e876134be565b5152610fa8613411565b6020610fb3886134be565b516001600160a01b0390921691015288610fcc876134be565b510152833b15610321578751639d45c28160e01b8152602081600481885afa90811561148d575f91611453575b50843b15610321578851634d18cc3560e01b8152602081600481895afa90811561140f575f91611419575b5063ffffffff8116611373575063ffffffff16908115610b535761104a91810690613ce0565b63ffffffff86611059876134be565b5101911690525b5f608061106c866134be565b51015260a061107a856134be565b51018751906110898983612f42565b6015825274436c61696d206372656174696f6e206f6e2041565360581b6020830152526001600160a01b031690813b15610321575f9160446020928951948593849263095ea7b360e01b845288600485015260248401525af180156113695761133c575b50803b156103215784518092634e5cd2fd60e11b82526044820130600484015287602484015281518091526064830190602060648260051b8601019301915f905b828210611212575050505091815f81819503925af18015611208576111f1575b5061116a90835194602086525190846020870152850190613b3b565b905191601f198483030190840152815180825260208201916020808360051b83010194019287915b8383106111c45788887fb89b185f8ff547f2adc139e96d9ffe3ce49fac1d57931be0788b58aa670850cb8989038aa280f35b90919293946020806111e2600193601f198682030187528951613382565b97019301930191939290611192565b6111fe9196505f90612f42565b5f9461116a61114e565b84513d5f823e3d90fd5b91939092945060631987820301825284519060c081019180519260c0835283518091528c602060e085019501915f915b81831061130657505050506020818101516001600160a01b0316838201528c8201518385038e8501528051808652948201948c9291909101905f908f5b8183106112d6575050505060019360209360a0848463ffffffff6112c69689980151169084015263ffffffff608082015116608084015201519060a0818403910152613382565b960192019201869493919261112e565b835180516001600160a01b03168952602090810151818a01529701968e945090920191600191909101908f61127f565b835180516001600160a01b031688526020908101516001600160601b03168189015296019590920191600191909101908e611242565b61135d9060203d602011611362575b6113558183612f42565b8101906133f9565b6110ed565b503d61134b565b86513d5f823e3d90fd5b9150843b15610321578851635f90d45560e11b8152602081600481895afa90811561140f575f916113cc575b506113ad906113b293613ce0565b613b21565b63ffffffff866113c1876134be565b510191169052611060565b90506020813d602011611407575b816113e760209383612f42565b81010312610203576113b2926113ff6113ad926139b1565b91509261139f565b3d91506113da565b8a513d5f823e3d90fd5b90506020813d60201161144b575b8161143460209383612f42565b8101031261020357611445906139b1565b8d611024565b3d9150611427565b90506020813d602011611485575b8161146e60209383612f42565b810103126102035761147f906139b1565b8c610ff9565b3d9150611461565b89513d5f823e3d90fd5b6020908c8b8151916114a883612ef1565b8183525f858401528201525f8c8201525f60808201528b60a082015282828c01015201610f8c565b60209182828c51926114e184612f0c565b5f84525f83850152010152018f90610f1b565b6020908d82828a519261150684612f0c565b5f84525f8385015201015201610ebc565b8060130360138111610b3f57600381901b906001600160fd1b03811603610b3f5760ff8111610b3f5760ff611550600182931b85613cfa565b161660f481901b600f60f81b16919060f081169060ff16039160ff8311610b3f57611584906001600160f81b031916613fa9565b600182901b926001600160ff1b0383168303610b3f576115bd915f1a6115aa858861352e565b5360f81b6001600160f81b031916613fa9565b9160018101809111610b3f576115d86001935f1a918661352e565b5301610bd7565b60405162461bcd60e51b815260206004820152600d60248201526c4e6f207369676e61747572657360981b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f15185cdac81a185cc8195e1c1a5c995960821b6044820152606490fd5b60405162461bcd60e51b815260206004820152603d60248201527f737570706c696564207461736b20646f6573206e6f74206d617463682074686560448201527f206f6e65207265636f7264656420696e2074686520636f6e74726163740000006064820152608490fd5b83356001600160401b0381116116e8576020916116dd8392836004369288010101613035565b8152019301926108f6565b612e69565b612f7a565b6132b5565b83356001600160401b0381116116e85782016040601f198236030112611768576040519161172483612f0c565b61173060208301612fd3565b83526040820135926001600160401b0384116116f2576117596020949385809536920101613035565b8382015281520193019261087e565b613264565b5f80fd5b612db9565b34610208575f366003190112610203576064546040516001600160a01b039091168152602090f35b34610208575f36600319011261020357602063ffffffff60985460a01c16604051908152f35b34610208575f366003190112610203576097546040516001600160a01b039091168152602090f35b34610208575f366003190112610203576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610208576020366003190112610203576004356001600160401b0381116117715761093561187f61186961062c933690600401613306565b6040519283916020808401526040830190613acc565b604051918291602083526020830190613382565b34610208576040366003190112610203576004356001600160401b038111611771576118c3903690600401613306565b6024356001600160401b038111611771576118e2903690600401613035565b609a549060a0830191825110611bef576080830180519091906001600160a01b03163303611b54575b505063ffffffff60608301511663ffffffff421690818082115f14611b455761193391613ce0565b63ffffffff8060995460281c16911611611b00576001600160a01b03611957613411565b168251813b15610321575f91606460209260405194859384926323b872dd60e01b845233600485015230602485015260448401525af1908115611af5575f91611ad6575b5015611a9857611a5192611a4392604051926119b684612ef1565b5f60a06040516119c581612ef1565b60608152826020820152826040820152826060820152826080820152015260ff60408501915f835260608601925f84526060608088015260a08701955f8752875281602088015263ffffffff611a216099549382851690613b21565b16905260201c1690525190526040519182916020808401526040830190613b3b565b0390601f1982018152612f42565b5f604051611a60602082612f42565b5260405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b5c1b195b595b9d1959608a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754661696c656420746f207472616e736665722066656560501b6044820152606490fd5b611aef915060203d602011611362576113558183612f42565b8461199b565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152601e60248201527f526571756573742074696d657374616d7020746f6f20666172206177617900006044820152606490fd5b90611b4f91613ce0565b611933565b611b7790604051602080820152611b72816109356040820189613acc565b613c5a565b90516001600160a01b03908116911603611b9257828061190b565b60405162461bcd60e51b815260206004820152602f60248201527f5369676e6572206f6620726571756573745369676e6174757265206973206e6f60448201526e3a103932b8bab2b9ba1737bbb732b960891b6064820152608490fd5b60405162461bcd60e51b815260206004820152600b60248201526a46656520746f6f206c6f7760a81b6044820152606490fd5b34610208575f36600319011261020357611c3a613c02565b606480546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610208575f366003190112610203576098546040516001600160a01b039091168152602090f35b3461020857608036600319011261020357604051611cc281612ec2565b611cca612e09565b815260243560ff8116810361176d5760208201908152611ce8612e1c565b906040830191825263ffffffff60608401936064358552611d07613c02565b511680611d80575b505160ff8116611d5f575b505163ffffffff8116611d36575b505180611d3157005b609a55005b68ffffffff00000000006099549160281b169068ffffffff000000000019161760995581611d28565b64ff000000006099549160201b169064ff0000000019161760995582611d1a565b63ffffffff19609954161760995583611d0f565b34610208575f366003190112610203576020600154604051908152f35b3461020857606036600319011261020357611dca612e53565b6024356001600160401b03811161177157611de9903690600401613175565b611df1612e1c565b916001600160a01b0316803b15610321576040516361c8a12f60e11b81525f8180611e20868860048401613aac565b0381855afa908115611af5575f91611f55575b50825191611e59611e4384612f63565b93611e516040519586612f42565b808552612f63565b602084019490601f19013686375f5b8151811015611f1157611e7b81836134df565b519063ffffffff611e8c82876134df565b511691843b15610321576040516304ec635160e01b8152600481019190915263ffffffff8981166024830152929092166044830152602082606481875afa8015611af5576001925f91611ef3575b50828060c01b0316611eec82886134df565b5201611e68565b611f0b915060203d81116106b2576106a48183612f42565b89611eda565b8585604051918291602083019060208452518091526040830191905f5b818110611f3c575050500390f35b8251845285945060209384019390920191600101611f2e565b611f6991503d805f833e6106d78183612f42565b84611e33565b346102085760203660031901126102035760043560ff811680910361176d5760016020911b806001541614604051908152f35b34610208575f366003190112610203577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103215760206024916040519283809263237dfb4760e11b82523360048301525afa908115611af5575f91612058575b5015612049575f196001556040515f1981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b631d77d47760e21b5f5260045ffd5b612071915060203d602011611362576113558183612f42565b8161200f565b3461020857608036600319011261020357612090612e53565b612098612e2f565b6044356001600160401b03811161177157366023820112156116e8578060040135926001600160401b0384116126e857602482019160248536920101116116ed57606435926001600160401b03841161177157366023850112156116e8578360040135946001600160401b0386116126e85760248501928660051b9560248736920101116116ed5761212861398d565b506001600160a01b031693843b1561032157604051636830483560e01b815292602084600481895afa938415611af5575f946126c7575b5061216861398d565b93863b15610321576040516361c8a12f60e11b815263ffffffff831698896004830152604060248301528a604483015260018060fb1b038b116126785781606481835f948c8484013781010301818b5afa908115611af5575f9161265e575b5085526001600160a01b031692833b1561032157604051986340e03a8160e11b8a528860048b0152604060248b01525f8a80612207604482018689613a43565b0381885afa998a15611af5575f9a612642575b5060408601998a5261222b82612f63565b966122396040519889612f42565b828852612255601f1961224b85612f63565b0160208a01613512565b606087019788525f5b60ff8116848110156124be575f61228b826122788761348c565b8d519061228583836134df565b526134df565b505f5b858110612304575061229f8161348c565b905f5b8c8282106122d45760ff959492506122c2939150519061228583836134df565b501660ff8114610b3f5760010161225e565b9063ffffffff6122f1826122eb88600196516134df565b516134df565b51166122fd82866134df565b52016122a2565b8c8b63ffffffff6123228461231a818c8c613a63565b3593516134df565b5116913b15610321576040516304ec635160e01b8152600481019190915263ffffffff808b16602483015290911660448201526020818f81806064810103915afa908115611af5575f916124a0575b506001600160c01b031680156124915760018091612390868b8e613a92565b3560f81c1c16146123a4575b60010161228e565b906123b0828787613a63565b356123bc84898c613a92565b3560f81c908b3b156103215760405163dd9846b960e01b8152600481019190915260ff91909116602482015263ffffffff891660448201526020816064818e5afa908115611af5578d85915f9361243b575b509163ffffffff61242a856122eb6001979561243397516134df565b91169052613a9e565b91905061239c565b925050506020813d8211612489575b8161245760209383612f42565b8101031261020357818d63ffffffff61242a6001956122eb8961247c612433986139b1565b975095505095505061240e565b3d915061244a565b6325ec6c1f60e01b5f5260045ffd5b6124b8915060203d81116106b2576106a48183612f42565b5f612371565b5087898c8e89888f803b1561032157602060049160405192838092632efa2ca360e11b82525afa908115611af5575f91612623575b506001600160a01b0316803b15610321575f9261252f926040519687948593849363354952a360e21b8552604060048601526044850191613a43565b90602483015203915afa918215611af5576125a29261258f915f91612609575b50908594939291602061257c970190815260405196879660208852516080602089015260a088019061322b565b9051868203601f1901604088015261322b565b9051848203601f1901606086015261322b565b905190601f19838203016080840152815180825260208201916020808360051b8301019401925f915b8383106125d85786860387f35b9193955091936020806125f7600193601f19868203018752895161322b565b970193019301909286959492936125cb565b61261d91503d805f833e6106d78183612f42565b8661254f565b61263c915060203d60201161030f576103018183612f42565b876124f3565b612657919a503d805f833e6106d78183612f42565b988a61221a565b61267291503d805f833e6106d78183612f42565b8a6121c7565b60405162461bcd60e51b815260206004820152602160248201527f41424920656e636f64696e673a206172726179206461746120746f6f206c6f6e6044820152606760f81b6064820152608490fd5b6126e191945060203d60201161030f576103018183612f42565b928861215f565b6131d2565b3461020857604036600319011261020357612706612e53565b6024356001600160401b03811161177157612725903690600401613175565b61272f815161348c565b6001600160a01b03909216915f5b82518110156127be5761275081846134df565b5190843b156103215760405191630a5aec1960e21b83526004830152602082602481885afa8015611af5576001925f916127a0575b5061279082856134df565b90838060a01b031690520161273d565b6127b8915060203d811161030f576103018183612f42565b86612785565b506040518091602082016020835281518091526020604084019201905f5b8181106127ea575050500390f35b82516001600160a01b03168452859450602093840193909201916001016127dc565b3461020857604036600319011261020357612825612e53565b506024356001600160a01b0381169081900361176d575f549060ff8260081c161591828093612986575b801561296f575b156129135760ff1981166001175f5582612902575b506002606060405161287c81612ec2565b61070881526001602082015261012c604082015201526099805468ffffffffffffffffff191666012c01000007081790556002609a55609680546001600160a01b0319169190911790556128cc57005b61ff00195f54165f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b61ffff1916610101175f558261286b565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156128565750600160ff821614612856565b50600160ff82161061284f565b34610208576060366003190112610203576129ac612e53565b6024356001600160401b0381116117715761062c916129d26129e0923690600401613035565b6129da612e1c565b9161353f565b6040519182916020835260208301906130ce565b3461020857604036600319011261020357612a0d612e53565b602435906001600160401b03821161177157366023830112156116e857816004013591612a3983612f63565b92612a476040519485612f42565b8084526024602085019160051b830101913683116116ed57602401905b828210612b30578385612a77815161348c565b6001600160a01b03909216915f5b8251811015612b1a576001600160a01b03612aa082856134df565b511690843b1561032157604051916309aa152760e11b83526004830152602082602481885afa8015611af5575f90612ae8575b60019250612ae182856134df565b5201612a85565b506020823d8211612b12575b81612b0160209383612f42565b810103126102035760019151612ad3565b3d9150612af4565b6040516020808252819061062c90820185612fe7565b60208091612b3d84612fd3565b815201910190612a64565b346102085760203660031901126102035763ffffffff612b66612e09565b165f52609b602052602060405f2054604051908152f35b34610208575f366003190112610203575f6060604051612b9c81612ec2565b82815282602082015282604082015201526080604051612bbb81612ec2565b6099549063ffffffff8083169283835260ff60208401818360201c16815283604086019360281c1683526060609a5495019485526040519586525116602085015251166040830152516060820152f35b34610208575f366003190112610203576020612c25613411565b6040516001600160a01b039091168152f35b34612d19576020366003190112610203576004357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103215760206024916040519283809263237dfb4760e11b82523360048301525afa908115611af5575f91612cfa575b50156120495760015481811603612ceb57806001556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2005b63c61dca5d60e01b5f5260045ffd5b612d13915060203d602011611362576113558183612f42565b82612ca8565b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b6004359063ffffffff8216820361176d57565b6044359063ffffffff8216820361176d57565b6024359063ffffffff8216820361176d57565b359063ffffffff8216820361176d57565b600435906001600160a01b038216820361176d57565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b608081019081106001600160401b03821117612edd57604052565b634e487b7160e01b5f52604160045260245ffd5b60c081019081106001600160401b03821117612edd57604052565b604081019081106001600160401b03821117612edd57604052565b606081019081106001600160401b03821117612edd57604052565b90601f801991011681019081106001600160401b03821117612edd57604052565b6001600160401b038111612edd5760051b60200190565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b35906001600160a01b038216820361176d57565b90602080835192838152019201905f5b8181106130045750505090565b8251845260209384019390920191600101612ff7565b6001600160401b038111612edd57601f01601f191660200190565b81601f820112156116e85760208135910161304f8261301a565b9261305d6040519485612f42565b8284528282011161307957815f92602092838601378301015290565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b9080602083519182815201916020808360051b8301019401925f915b8383106130f957505050505090565b9091929394601f19828203018352855190602080835192838152019201905f905b80821061313957505050602080600192970193019301919392906130ea565b909192602060606001926001600160601b0360408851868060a01b0381511684528581015186850152015116604082015201940192019061311a565b9080601f830112156116e857813561318c81612f63565b9261319a6040519485612f42565b81845260208085019260051b8201019283116116ed57602001905b8282106131c25750505090565b81358152602091820191016131b5565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b90602080835192838152019201905f5b8181106132485750505090565b825163ffffffff1684526020938401939092019160010161323b565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b91909160c081840312611768576040519061332082612ef1565b81938135916001600160401b0383116116f25761334360a0939284938301613035565b8452602081013560208501526040810135604085015261336560608201612e42565b606085015261337660808201612fd3565b60808501520135910152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b908160209103126102035751801515810361176d5790565b6096546001600160a01b0316803b1561032157602060049160405192838092632495a59960e01b82525afa908115611af5575f9161344d575090565b90506020813d602011613484575b8161346860209383612f42565b8101031261020357516001600160a01b038116810361176d5790565b3d915061345b565b9061349682612f63565b6134a36040519182612f42565b82815280926134b4601f1991612f63565b0190602036910137565b8051156134cb5760200190565b634e487b7160e01b5f52603260045260245ffd5b80518210156134cb5760209160051b010190565b9081602091031261020357516001600160a01b038116810361176d5790565b5f5b82811061352057505050565b606082820152602001613514565b9081518110156134cb570160200190565b6001600160a01b03169190823b1561032157604051636830483560e01b8152602081600481875afa908115611af5575f9161396e575b50833b1561032157604051634f4c91e160e11b815290602082600481885afa918215611af5575f9261392a575b50843b1561032157602060049560405196878092632efa2ca360e11b82525afa948515611af5575f95613909575b5082519295916136096135e285612f63565b946135f06040519687612f42565b8086526135ff601f1991612f63565b0160208601613512565b5f965b80518810156138fe5761361f888261352e565b5160f81c936001600160a01b03831692833b15610321575f60449460405195868092638902624560e01b82528a600483015263ffffffff8d1660248301525afa938415611af5575f9461386c575b50835161367981612f63565b906136876040519283612f42565b808252613696601f1991612f63565b015f5b8181106138435750506136ac8b896134df565b526136b78a886134df565b505f5b8451811015613832576001600160a01b038a16906136d881876134df565b51823b15610321576020906024604051809581936308f6629d60e31b835260048301525afa918215611af5575f92613812575b5061371681876134df565b516001600160a01b0388169061372c83896134df565b5191803b156103215760405163fa28c62760e01b8152600481019390935260ff8b16602484015263ffffffff8d166044840152602090839060649082905afa908115611af5578e925f926137cb575b50936137b86137c4936001600160601b0386946001986040519561379e87612f27565b8a8060a01b0316865260208601521660408401528d6134df565b519061228583836134df565b50016136ba565b915091506020813d821161380a575b816137e760209383612f42565b8101031261020357516001600160601b038116810361176d578d916137b861377b565b3d91506137da565b61382b91925060203d811161030f576103018183612f42565b905f61370b565b50600190990198909450915061360c565b60209060405161385281612f27565b5f81525f838201525f604082015282828601015201613699565b9093503d805f833e61387e8183612f42565b810190602081830312610203578051906001600160401b03821161177157019080601f830112156116e85781516138b481612f63565b926138c26040519485612f42565b81845260208085019260051b8201019283116116ed57602001905b8282106138ee57505050925f61366d565b81518152602091820191016138dd565b505050935091505090565b61392391955060203d60201161030f576103018183612f42565b935f6135d0565b9091506020813d602011613966575b8161394660209383612f42565b8101031261020357516001600160a01b038116810361176d57905f6135a2565b3d9150613939565b613987915060203d60201161030f576103018183612f42565b5f613575565b6040519061399a82612ec2565b606080838181528160208201528160408201520152565b519063ffffffff8216820361176d57565b602081830312610203578051906001600160401b03821161177157019080601f830112156116e85781516139f581612f63565b92613a036040519485612f42565b81845260208085019260051b8201019283116116ed57602001905b828210613a2b5750505090565b60208091613a38846139b1565b815201910190613a1e565b908060209392818452848401375f828201840152601f01601f1916010190565b91908110156134cb5760051b0190565b9081602091031261020357516001600160c01b038116810361176d5790565b908210156134cb570190565b5f198114610b3f5760010190565b60409063ffffffff613ac994931681528160208201520190612fe7565b90565b9060a080613ae3845160c0855260c0850190613382565b93602081015160208501526040810151604085015263ffffffff6060820151166060850152600180831b036080820151166080850152015191015290565b9063ffffffff8091169116019063ffffffff8211610b3f57565b90613b4f825160c0835260c0830190613acc565b9163ffffffff602082015116602083015263ffffffff604082015116604083015260ff60608201511660608301526080810151928281036080840152835180825260208201916020808360051b8301019601925f915b838310613bbd57505050505060a08091015191015290565b9091929396602080613bf3600193601f198682030187526040838d51878060a01b03815116845201519181858201520190613382565b99019301930191939290613ba5565b6064546001600160a01b03163303613c1657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b613ac991613cd8916020613cd0613c718351613d2c565b92603a60405193849281808501977f19457468657265756d205369676e6564204d6573736167653a0a00000000000089528051918291018587015e8401908382015f8152815193849201905e01015f815203601f198101835282612f42565b519020613de1565b919091613e16565b9063ffffffff8091169116039063ffffffff8211610b3f57565b8115610b53570490565b90613d0e8261301a565b613d1b6040519182612f42565b82815280926134b4601f199161301a565b8015613dc15780815f925b613dad575080613d4683613d04565b92915b613d5257505090565b5f198201918211610b3f5781600a820491600a8302838104600a1484151715610b3f578103908111610b3f5760ff1660300160ff8111610b3f5760f81b6001600160f81b0319165f1a90613da6908561352e565b5380613d49565b91613db9600a91613a9e565b920480613d37565b50604051613dd0604082612f42565b60018152600360fc1b602082015290565b9060418151145f14613e0d57613e0991602082015190606060408401519301515f1a90613f2e565b9091565b50505f90600290565b6005811015613f1a5780613e275750565b60018103613e745760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103613ec15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314613eca57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b5f52602160045260245ffd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411613f9e576020935f9360ff60809460405194855216868401526040830152606082015282805260015afa15611af5575f516001600160a01b03811615613f9657905f90565b505f90600190565b505050505f90600390565b60f81c600a811015613fd05760300160ff8111610b3f5760f81b6001600160f81b03191690565b60570160ff8111610b3f5760f81b6001600160f81b0319169056fea2646970667358221220767446be26988bd16086a8a99963c9c659a9a9b12d8f181e7f6fbdcd4370bc6d64736f6c634300081c0033";

type ReclaimTaskManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReclaimTaskManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReclaimTaskManager__factory extends ContractFactory {
  constructor(...args: ReclaimTaskManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakeRegistry: string,
    _rewardsCoordinator: string,
    _pauserRegistry: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ReclaimTaskManager> {
    return super.deploy(
      _stakeRegistry,
      _rewardsCoordinator,
      _pauserRegistry,
      overrides || {}
    ) as Promise<ReclaimTaskManager>;
  }
  override getDeployTransaction(
    _stakeRegistry: string,
    _rewardsCoordinator: string,
    _pauserRegistry: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakeRegistry,
      _rewardsCoordinator,
      _pauserRegistry,
      overrides || {}
    );
  }
  override attach(address: string): ReclaimTaskManager {
    return super.attach(address) as ReclaimTaskManager;
  }
  override connect(signer: Signer): ReclaimTaskManager__factory {
    return super.connect(signer) as ReclaimTaskManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReclaimTaskManagerInterface {
    return new utils.Interface(_abi) as ReclaimTaskManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReclaimTaskManager {
    return new Contract(address, _abi, signerOrProvider) as ReclaimTaskManager;
  }
}
