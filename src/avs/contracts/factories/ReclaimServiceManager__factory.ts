/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReclaimServiceManager,
  ReclaimServiceManagerInterface,
} from "../ReclaimServiceManager";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_avsDirectory",
        type: "address",
        internalType: "address",
      },
      {
        name: "_stakeRegistry",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rewardsCoordinator",
        type: "address",
        internalType: "address",
      },
      {
        name: "_delegationManager",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "admins",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allTaskHashes",
    inputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "avsDirectory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createNewTask",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.ClaimRequest",
        components: [
          {
            name: "provider",
            type: "string",
            internalType: "string",
          },
          {
            name: "claimUserId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "claimHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "requestedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "requestSignature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "defaultStrategy",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deregisterOperatorFromAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "encodeClaimRequest",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.ClaimRequest",
        components: [
          {
            name: "provider",
            type: "string",
            internalType: "string",
          },
          {
            name: "claimUserId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "claimHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "requestedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getMetadataForOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.OperatorMetadata",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "url",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorRestakedStrategies",
    inputs: [
      {
        name: "_operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRestakeableStrategies",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rewardsInitiator",
        type: "address",
        internalType: "address",
      },
      {
        name: "deployer",
        type: "address",
        internalType: "address",
      },
      {
        name: "strategy",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorWhitelisted",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestTaskNum",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "operatorHasMinimumWeight",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerOperatorToAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSignature",
        type: "tuple",
        internalType: "struct ISignatureUtils.SignatureWithSaltAndExpiry",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "salt",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "expiry",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registeredOperators",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
      {
        name: "url",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsInitiator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPauserRegistry",
    inputs: [
      {
        name: "newPauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsInitiator",
    inputs: [
      {
        name: "newRewardsInitiator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "taskCompleted",
    inputs: [
      {
        name: "completedTask",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.CompletedTask",
        components: [
          {
            name: "task",
            type: "tuple",
            internalType: "struct IReclaimServiceManager.Task",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct IReclaimServiceManager.ClaimRequest",
                components: [
                  {
                    name: "provider",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "claimUserId",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "claimHash",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "requestedAt",
                    type: "uint32",
                    internalType: "uint32",
                  },
                  {
                    name: "owner",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "fee",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "createdAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "expiresAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "minimumSignatures",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "operators",
                type: "tuple[]",
                internalType: "struct IReclaimServiceManager.Operator[]",
                components: [
                  {
                    name: "addr",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "url",
                    type: "string",
                    internalType: "string",
                  },
                ],
              },
              {
                name: "feePaid",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "signatures",
            type: "bytes[]",
            internalType: "bytes[]",
          },
        ],
      },
      {
        name: "referenceTaskIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "taskCreationMetadata",
    inputs: [],
    outputs: [
      {
        name: "maxTaskLifetimeS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "minSignaturesPerTask",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "maxTaskCreationDelayS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "minFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateAVSMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOperatorMetadata",
    inputs: [
      {
        name: "metadata",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.OperatorMetadata",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "url",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateTaskCreationMetadata",
    inputs: [
      {
        name: "newMetadata",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.TaskCreationMetadata",
        components: [
          {
            name: "maxTaskLifetimeS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minSignaturesPerTask",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "maxTaskCreationDelayS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "whitelistAddressAsOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "isWhitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "whitelistedOperators",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewTaskCreated",
    inputs: [
      {
        name: "taskIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "task",
        type: "tuple",
        indexed: false,
        internalType: "struct IReclaimServiceManager.Task",
        components: [
          {
            name: "request",
            type: "tuple",
            internalType: "struct IReclaimServiceManager.ClaimRequest",
            components: [
              {
                name: "provider",
                type: "string",
                internalType: "string",
              },
              {
                name: "claimUserId",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "claimHash",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "requestedAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "owner",
                type: "address",
                internalType: "address",
              },
              {
                name: "fee",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "createdAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "expiresAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minimumSignatures",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "operators",
            type: "tuple[]",
            internalType: "struct IReclaimServiceManager.Operator[]",
            components: [
              {
                name: "addr",
                type: "address",
                internalType: "address",
              },
              {
                name: "url",
                type: "string",
                internalType: "string",
              },
            ],
          },
          {
            name: "feePaid",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PauserRegistrySet",
    inputs: [
      {
        name: "pauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
      {
        name: "newPauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsInitiatorUpdated",
    inputs: [
      {
        name: "prevRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TaskCompleted",
    inputs: [
      {
        name: "taskIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "task",
        type: "tuple",
        indexed: false,
        internalType: "struct IReclaimServiceManager.CompletedTask",
        components: [
          {
            name: "task",
            type: "tuple",
            internalType: "struct IReclaimServiceManager.Task",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct IReclaimServiceManager.ClaimRequest",
                components: [
                  {
                    name: "provider",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "claimUserId",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "claimHash",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "requestedAt",
                    type: "uint32",
                    internalType: "uint32",
                  },
                  {
                    name: "owner",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "fee",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "createdAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "expiresAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "minimumSignatures",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "operators",
                type: "tuple[]",
                internalType: "struct IReclaimServiceManager.Operator[]",
                components: [
                  {
                    name: "addr",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "url",
                    type: "string",
                    internalType: "string",
                  },
                ],
              },
              {
                name: "feePaid",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "signatures",
            type: "bytes[]",
            internalType: "bytes[]",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "";

type ReclaimServiceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReclaimServiceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReclaimServiceManager__factory extends ContractFactory {
  constructor(...args: ReclaimServiceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _avsDirectory: string,
    _stakeRegistry: string,
    _rewardsCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ReclaimServiceManager> {
    return super.deploy(
      _avsDirectory,
      _stakeRegistry,
      _rewardsCoordinator,
      _delegationManager,
      overrides || {}
    ) as Promise<ReclaimServiceManager>;
  }
  override getDeployTransaction(
    _avsDirectory: string,
    _stakeRegistry: string,
    _rewardsCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _avsDirectory,
      _stakeRegistry,
      _rewardsCoordinator,
      _delegationManager,
      overrides || {}
    );
  }
  override attach(address: string): ReclaimServiceManager {
    return super.attach(address) as ReclaimServiceManager;
  }
  override connect(signer: Signer): ReclaimServiceManager__factory {
    return super.connect(signer) as ReclaimServiceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReclaimServiceManagerInterface {
    return new utils.Interface(_abi) as ReclaimServiceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReclaimServiceManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReclaimServiceManager;
  }
}
