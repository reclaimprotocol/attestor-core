/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReclaimServiceManager,
  ReclaimServiceManagerInterface,
} from "../ReclaimServiceManager";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_avsDirectory",
        type: "address",
        internalType: "address",
      },
      {
        name: "_stakeRegistry",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rewardsCoordinator",
        type: "address",
        internalType: "address",
      },
      {
        name: "_delegationManager",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "admins",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allTaskHashes",
    inputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "avsDirectory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createNewTask",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.ClaimRequest",
        components: [
          {
            name: "provider",
            type: "string",
            internalType: "string",
          },
          {
            name: "claimUserId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "claimHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "requestedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "requestSignature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "defaultStrategy",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deregisterOperatorFromAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "encodeClaimRequest",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.ClaimRequest",
        components: [
          {
            name: "provider",
            type: "string",
            internalType: "string",
          },
          {
            name: "claimUserId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "claimHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "requestedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "fee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getMetadataForOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.OperatorMetadata",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "url",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorRestakedStrategies",
    inputs: [
      {
        name: "_operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRestakeableStrategies",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rewardsInitiator",
        type: "address",
        internalType: "address",
      },
      {
        name: "deployer",
        type: "address",
        internalType: "address",
      },
      {
        name: "strategy",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorWhitelisted",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "latestTaskNum",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "operatorHasMinimumWeight",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerOperatorToAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSignature",
        type: "tuple",
        internalType: "struct ISignatureUtils.SignatureWithSaltAndExpiry",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "salt",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "expiry",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registeredOperators",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
      {
        name: "url",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsInitiator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPauserRegistry",
    inputs: [
      {
        name: "newPauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsInitiator",
    inputs: [
      {
        name: "newRewardsInitiator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "stakeRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "taskCompleted",
    inputs: [
      {
        name: "completedTask",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.CompletedTask",
        components: [
          {
            name: "task",
            type: "tuple",
            internalType: "struct IReclaimServiceManager.Task",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct IReclaimServiceManager.ClaimRequest",
                components: [
                  {
                    name: "provider",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "claimUserId",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "claimHash",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "requestedAt",
                    type: "uint32",
                    internalType: "uint32",
                  },
                  {
                    name: "owner",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "fee",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "createdAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "expiresAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "minimumSignatures",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "operators",
                type: "tuple[]",
                internalType: "struct IReclaimServiceManager.Operator[]",
                components: [
                  {
                    name: "addr",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "url",
                    type: "string",
                    internalType: "string",
                  },
                ],
              },
              {
                name: "feePaid",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "signatures",
            type: "bytes[]",
            internalType: "bytes[]",
          },
        ],
      },
      {
        name: "referenceTaskIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "taskCreationMetadata",
    inputs: [],
    outputs: [
      {
        name: "maxTaskLifetimeS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "minSignaturesPerTask",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "maxTaskCreationDelayS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "minFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateAVSMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOperatorMetadata",
    inputs: [
      {
        name: "metadata",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.OperatorMetadata",
        components: [
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "url",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateTaskCreationMetadata",
    inputs: [
      {
        name: "newMetadata",
        type: "tuple",
        internalType: "struct IReclaimServiceManager.TaskCreationMetadata",
        components: [
          {
            name: "maxTaskLifetimeS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minSignaturesPerTask",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "maxTaskCreationDelayS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minFee",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "whitelistAddressAsOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "isWhitelisted",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "whitelistedOperators",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewTaskCreated",
    inputs: [
      {
        name: "taskIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "task",
        type: "tuple",
        indexed: false,
        internalType: "struct IReclaimServiceManager.Task",
        components: [
          {
            name: "request",
            type: "tuple",
            internalType: "struct IReclaimServiceManager.ClaimRequest",
            components: [
              {
                name: "provider",
                type: "string",
                internalType: "string",
              },
              {
                name: "claimUserId",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "claimHash",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "requestedAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "owner",
                type: "address",
                internalType: "address",
              },
              {
                name: "fee",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "createdAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "expiresAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "minimumSignatures",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "operators",
            type: "tuple[]",
            internalType: "struct IReclaimServiceManager.Operator[]",
            components: [
              {
                name: "addr",
                type: "address",
                internalType: "address",
              },
              {
                name: "url",
                type: "string",
                internalType: "string",
              },
            ],
          },
          {
            name: "feePaid",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PauserRegistrySet",
    inputs: [
      {
        name: "pauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
      {
        name: "newPauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsInitiatorUpdated",
    inputs: [
      {
        name: "prevRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TaskCompleted",
    inputs: [
      {
        name: "taskIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "task",
        type: "tuple",
        indexed: false,
        internalType: "struct IReclaimServiceManager.CompletedTask",
        components: [
          {
            name: "task",
            type: "tuple",
            internalType: "struct IReclaimServiceManager.Task",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct IReclaimServiceManager.ClaimRequest",
                components: [
                  {
                    name: "provider",
                    type: "string",
                    internalType: "string",
                  },
                  {
                    name: "claimUserId",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "claimHash",
                    type: "bytes32",
                    internalType: "bytes32",
                  },
                  {
                    name: "requestedAt",
                    type: "uint32",
                    internalType: "uint32",
                  },
                  {
                    name: "owner",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "fee",
                    type: "uint256",
                    internalType: "uint256",
                  },
                ],
              },
              {
                name: "createdAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "expiresAt",
                type: "uint32",
                internalType: "uint32",
              },
              {
                name: "minimumSignatures",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "operators",
                type: "tuple[]",
                internalType: "struct IReclaimServiceManager.Operator[]",
                components: [
                  {
                    name: "addr",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "url",
                    type: "string",
                    internalType: "string",
                  },
                ],
              },
              {
                name: "feePaid",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "signatures",
            type: "bytes[]",
            internalType: "bytes[]",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x610100806040523461024f57604051601f61555038819003918201601f19168301916001600160401b03831184841017610239578084926080946040528339810103126101e95761004f8161029c565b9061005c6020820161029c565b610074606061006d6040850161029c565b930161029c565b9260a05260805260c05260e05260005460ff8160081c166101945760ff80821610610159575b60405161529a90816102b6823960805181818161093f01528181610b6c0152818161100b01528181612a2f01528181612cda015281816130b90152614491015260a051818181610a7d01528181610b9c0152818161104201526129eb015260c05181818161027c01528181610c4301528181610f04015281816118d80152818161191a015281816119550152818161199801528181611a8201528181611ad301528181611b4f01528181611dc50152611e07015260e05181612d700152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a18061009a565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b51906001600160a01b03821682036102b057565b600080fdfe60806040526004361015610071575b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b6000803560e01c806310d67a2f146132bc578063136439dd146131b657806314bfd6d01461318b57806316bd83c3146130865780631be785ac1461304b57806321df0da71461301f57806324d7806c14612ffc5780632d89f6fc14612fc75780632e8da82914612fa457806333cfb7b714612cbd5780633bc28c8c14612c93578063595c6a6714612be45780635ac86ab714612baf5780635c975abb14612b92578063630868dc14612b4b57806367ab980914612a5e5780636830483514612a1a5780636b3aa72e146129d6578063715018a614612979578063762655e9146122e757806384681e4614612284578063886f11951461225c5780638b00ce7c146122365780638da5cb5b1461220e57806394bb371b146121d6578063964c586d146111215780639926ee7d14610f6d578063a0169ddd14610ee0578063a20b99bf14610c05578063a364f4da14610b4c578063a551c1b814610aea578063a98fb35514610a39578063d5dba76d14610a0c578063e481af9d1461092c578063f289a7fb146108ea578063f2fde38b14610859578063f8c8765e146105d7578063fabc1cbc1461048f578063fac5bb9b14610467578063fc299dee1461043f5763fce36c7d14610240575061000e565b3461043a57602036600319011261031f576004356001600160401b038111610435576102709036906004016139dd565b919061027a614897565b7f0000000000000000000000000000000000000000000000000000000000000000825b8481106103d157506001600160a01b031690813b156103cc576040519363fce36c7d60e01b855280602486016020600488015252604485019060448160051b8701019280928690609e1983360301905b84831061032f5788808b8181808c0381838f5af180156103245761030e5750f35b8161031891613609565b61031f5780f35b61344d565b6040513d84823e3d90fd5b9091929394956043198a8203018252863590838212156103c75760208091876001940190608063ffffffff6103b38261037961036b8780614b3e565b60a0885260a0880191614b72565b95898060a01b0361038b8983016136ac565b168887015260408101356040870152836103a76060830161382d565b1660608701520161382d565b1691015298019201930191909493926102ed565b614af9565b613b63565b806104066103ed60206103e76001958a89614bd2565b01614a5b565b60406103fa848a89614bd2565b01359030903390614ce5565b61042f61041960206103e7848a89614bd2565b846040610427858b8a614bd2565b013591614d36565b0161029d565b61349d565b6133fd565b503461043a5736600319011261031f576065546040516001600160a01b039091168152602090f35b503461043a5736600319011261031f5760c9546040516001600160a01b039091168152602090f35b503461043a57602036600319011261031f57609754600435906001600160a01b0316803b156103cc5760206004916040519283809263755b36bd60e11b82525afa80156105cc576104f291849161059d575b506001600160a01b03163314613bd5565b60985419811981160361053257806098556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a280f35b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b6105bf915060203d6020116105c5575b6105b78183613609565b810190613bb6565b386104e1565b503d6105ad565b6040513d85823e3d90fd5b503461043a57608036600319011261031f576105f161367b565b6105f9613696565b506044356001600160a01b0381168103610855576064356001600160a01b03811691908290036108515783549260ff8460081c161593848095610844575b801561082d575b156107d15760ff1981166001178655846107c0575b5060ff855460081c16156107675761066a90614753565b610673306146f5565b60016060604051610683816135a2565b61070881526020810183905261012c6040820152015260ca805468ffffffffffffffffff191666012c0100000708179055600160cb5560ce54600160401b81101561075357906106de826001610702940160ce5560ce613539565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b6001600160601b0360a01b60c954161760c95561071c5780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b634e487b7160e01b85526041600452602485fd5b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b61ffff191661010117855538610653565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561063e5750600160ff82161461063e565b50600160ff821610610637565b8380fd5b8280fd5b503461043a57602036600319011261031f5761087361367b565b61087b61469d565b6001600160a01b038116156108965761089390614753565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461043a5736600319011261031f57608060ca5460cb5463ffffffff60405192818116845260ff8160201c16602085015260281c1660408301526060820152f35b503461043a578060031936011261031f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103cc5781600491604051928380926302e0740360e31b82525afa9081156103245782916109ea575b5061099f8151516143b7565b915b815180518210156109d857600191906001600160a01b03906109c49083906143f6565b5151166109d182866143f6565b52016109a1565b604051806109e6868261383e565b0390f35b610a0691503d8084833e6109fe8183613609565b810190614591565b38610993565b3461043a57602036600319011261031f576020610a2f610a2a61367b565b61448f565b6040519015158152f35b503461043a57602036600319011261031f576004356001600160401b03811161043557610a6a903690600401613734565b610a7b610a76336140fe565b613fb1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156103cc5782610ad98193829360405194858094819363a98fb35560e01b8352602060048401526024830190613920565b03925af180156103245761030e5750f35b503461043a57602036600319011261031f5760043560cf54811015610b4857610b1290613a66565b5080546001600160a01b031690610b2b90600101613abf565b906109e66040519283928352604060208401526040830190613920565b5080fd5b503461043a57602036600319011261031f57610b6661367b565b610b9a337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161461440a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103cc576040516351b27a6d60e11b81526001600160a01b03909216600483015282919082908290602490829084905af180156103245761030e5750f35b503461043a57602036600319011261031f576004356001600160401b03811161043557610c369036906004016139dd565b610c41929192614897565b7f0000000000000000000000000000000000000000000000000000000000000000825b828110610e2b57506001600160a01b0316803b156103cc5760405191634e5cd2fd60e11b835280604484013060048601526040602486015252606483019460648260051b8501019181869060be19813603015b838310610cd8578880898181808b0381838e5af180156103245761030e5750f35b9091929394606319888203018a528535828112156103c757830190610d0e610d008380614b3e565b60c0845260c0840191614b72565b916001600160a01b03610d23602083016136ac565b1660208301526020610d386040830183614b3e565b848603604086015280865294909101938c905b808210610dfb5750505063ffffffff610d666060830161382d565b16606083015263ffffffff610d7d6080830161382d565b16608083015260a0810135601e19823603018112156103c75701906020823592016001600160401b038311610df6578236038113610df15783836020948594938460a0879660019a03910152818452848401378d838284010152601f8019910116010197019a019301919098939298610cb7565b614ab4565b614a6f565b909194604080600192838060a01b03610e138a6136ac565b16815260208901356020820152019601920190610d4b565b909291829483955b610e4b610e41858585614975565b604081019061499c565b9050871015610e9b57610e62610e41858585614975565b881015610e87576001916020610e7f928a60061b01013590614844565b960195610e33565b634e487b7160e01b86526032600452602486fd5b600192949593919650610eda90610ec481308a610ebf60206103e7898d3395614975565b614ce5565b84610ed560206103e7868a8d614975565b614d36565b01610c64565b503461043a57602036600319011261031f57610efa61367b565b610f0261469d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103cc5760405163a0169ddd60e01b81526001600160a01b03909216600483015282919082908290602490829084905af180156103245761030e5750f35b503461043a57604036600319011261031f57610f8761367b565b6024356001600160401b038111610435576060600319823603011261111c5760405191606083018381106001600160401b038211176107535760405281600401356001600160401b03811161111757610fe69060043691850101613734565b8352602083019060248301358252604460408501930135835261103260018060a01b037f000000000000000000000000000000000000000000000000000000000000000016331461440a565b61103b81614161565b156110d2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103cc578594856110b493819560405197889687958694639926ee7d60e01b865260018060a01b0316600486015260406024860152516060604486015260a4850190613920565b9151606484015251608483015203925af180156103245761030e5750f35b60405162461bcd60e51b815260206004820152601860248201527f4f70657261746f72206e6f742077686974656c697374656400000000000000006044820152606490fd5b61362a565b613551565b503461043a57604036600319011261031f576004356001600160401b038111610435576040600319823603011261111c576040519061115f826135ee565b80600401356001600160401b03811161111757810160c0600319823603011261111c576040519061118f826135d3565b60048101356001600160401b038111611117576111b29060043691840101613881565b82526111c06024820161382d565b60208301526111d16044820161382d565b6040830152606481013560ff811681036121d257606083015260848101356001600160401b0381116111175760049082010136601f8201121561219a5780356112198161396d565b916112276040519384613609565b81835260208084019260051b8201019036821161219f5760208101925b8284106121a45750505050608083015260a4013560a082015282526024810135906001600160401b03821161111757013660238201121561219a57600481013561128d8161396d565b9161129b6040519384613609565b818352602060048185019360051b830101019036821161219f5760248101925b8284106121695750505050602082015260243563ffffffff81168103610855578151604051611308816112fa6020820194602086526040830190614236565b03601f198101835282613609565b51902063ffffffff8216845260cc6020526040842054036120fe5763ffffffff6040835101511663ffffffff421610156120c65781519182519263ffffffff6020604086015195608060018060a01b039101511692015116906040519461136e866135a2565b8552602085015260408401526001606084015260208101519160405193611394856135ee565b8452602084019283526113ac608083510151516143b7565b92855b84518110156113e457600190818060a01b036113d0826080885101516143f6565b5151166113dd82886143f6565b52016113af565b50909293815151156120915751908151926040519360208501526020845261140d604085613609565b83518060011b908082046002149015171561207d5761142b90614bf4565b9460409384519461143c8187613609565b601086526f181899199a1a9b1b9c1cb0b131b232b360811b6020870152895b87518110156115195761146e8189614c1c565b5187516001600160f81b0319916114919161148b9160f81c614871565b89614c1c565b51168160011b9082820460021483151715611505578c1a6114b2828c614c1c565b536114bd828a614c1c565b5188516001600160f81b0319916114e0916114da9160f81c614851565b8a614c1c565b51166001820180921161150557906114fe600193928e1a918c614c1c565b530161145b565b634e487b7160e01b8d52601160045260248dfd5b508795508990898151611559602282602081019b61060f60f31b8d5261154881518092602086860191016138fd565b81010301601f198101835282613609565b60018060a01b0360208601511660609584516115758882613609565b602881526020810192601f198901368537875b60148110611f7757505085518093602082019261060f60f31b8452519081602284016115b3926138fd565b810103602201601f19810184526115ca9084613609565b878683015163ffffffff166115de90614c2d565b9201516115ea90614c2d565b9286519c8d9551908160208801611600926138fd565b850190600560f91b60208301525191826021830161161d926138fd565b01602001600560f91b600182015281519182600283019160200191611641926138fd565b01600101600560f91b600182015281519182600283019160200191611665926138fd565b0160010103600101601f198101895261167e9089613609565b86515161168a906143b7565b95835b885180518210156116c957906116af6116a8826001946143f6565b518c61479c565b6116b9828b6143f6565b90838060a01b031690520161168d565b50509293858791865b8451881015611787578096815b855181101561177c576001600160a01b036116fa82886143f6565b51166001600160a01b0361170e8c8a6143f6565b51161461171d576001016116df565b5092919790965060015b1561173857600101969091956116d2565b855162461bcd60e51b815260206004820152601a60248201527f4d697373696e67206174746573746f72207369676e61747572650000000000006044820152606490fd5b509291979096611727565b91949093925063ffffffff8516825260cc602052818181205560a086510151936117af614076565b958251976117bd848a613609565b60018952845b601f1985018110611f55575060c9546001600160a01b03166117e48a6143e9565b5152600160206117f38b6143e9565b5101528551986118028a61396d565b9961180f86519b8c613609565b808b5261181e601f199161396d565b01865b818110611f32575050611835875189614871565b97865b885181101561187a57808a60206118718f946001958e61185e83898060a01b03926143f6565b511661186a83836143f6565b51526143f6565b51015201611838565b50898b87519361188a8986613609565b60018552895b601f198a018110611efa57506118a5856143e9565b51526118af614076565b60206118ba866143e9565b516001600160a01b03909216910152876118d3856143e9565b5101527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156103cc578651639d45c28160e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611ef0578991611ed1575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156103cc578751634d18cc3560e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215611ec7578a92611ea6575b5063ffffffff8216611dc35763ffffffff9150168015611daf57611a029063ffffffff42160663ffffffff421661482a565b63ffffffff87611a11866143e9565b5101911690525b876080611a24856143e9565b51015260a0611a32846143e9565b5101875190611a418983613609565b6015825274436c61696d206372656174696f6e206f6e2041565360581b6020830152526001600160a01b0316803b156103cc57865163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201526024810192909252602090829060449082908b905af18015611da557611d78575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156103cc578585518092634e5cd2fd60e11b82526044820130600484015288602484015281518091526064830190602060648260051b86010193019185905b828210611c4c5750505090829003905081837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015611c4257611c2e575b506020611ba08551948286528351908784880152860190614236565b91015193601f198483030190840152835180825260208201916020808360051b83010196019287915b838310611c01578863ffffffff87167fb89b185f8ff547f2adc139e96d9ffe3ce49fac1d57931be0788b58aa670850cb898b038aa280f35b9091929396602080611c1f600193601f198682030187528b51613920565b99019301930191939290611bc9565b85611c3b91969296613609565b9385611b84565b85513d88823e3d90fd5b9295509290935060631986820301825284519060c08101918c8c82519460c085528551809152602060e08601960192915b818310611d4257505050506020818101516001600160a01b0316838201528c8201518385038e8501528051808652948201948d9291909101908f908f5b818310611d12575050505060019360209360a0848463ffffffff611d019689980151169084015263ffffffff608082015116608084015201519060a0818403910152613920565b9601920192019285938b9593611b3b565b835180516001600160a01b03168952602090810151818a01529701968f945090920191600191909101908f611cba565b835180516001600160a01b031688526020908101516001600160601b03168189015296019590920191600191909101908e611c7d565b611d999060203d602011611d9e575b611d918183613609565b810190613c34565b611ad0565b503d611d87565b86513d89823e3d90fd5b634e487b7160e01b89526012600452602489fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b156103cc578851635f90d45560e11b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015611e9c57611e5193611e4c928d92611e6b575b5061482a565b614206565b63ffffffff87611e60866143e9565b510191169052611a18565b611e8e91925060203d602011611e95575b611e868183613609565b81019061487b565b908d611e46565b503d611e7c565b8a513d8d823e3d90fd5b611ec091925060203d602011611e9557611e868183613609565b908a6119d0565b89513d8c823e3d90fd5b611eea915060203d602011611e9557611e868183613609565b89611952565b88513d8b823e3d90fd5b6020908a51611f08816135d3565b8a81528c838201528a8c8201528c8b8201528c60808201528a60a082015282828901015201611890565b6020908c82828a5192611f44846135ee565b8c84528c8385015201015201611821565b6020908551611f63816135ee565b878152878382015282828d010152016117c3565b806013036013811161206957600381901b906001600160fd1b038116036120695760ff81116120695760ff611fb0600182931b85614871565b161660f481901b600f60f81b169060f081169060ff16039060ff821161204157611fe3906001600160f81b0319166151e2565b600183901b91906001600160ff1b0384168403612055579061201e918c1a61200b8488614c1c565b5360f81b6001600160f81b0319166151e2565b60018201809211612041579061203a600193928c1a9186614c1c565b5301611588565b634e487b7160e01b8b52601160045260248bfd5b634e487b7160e01b8c52601160045260248cfd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b88526011600452602488fd5b60405162461bcd60e51b815260206004820152600d60248201526c4e6f207369676e61747572657360981b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f15185cdac81a185cc8195e1c1a5c995960821b6044820152606490fd5b60405162461bcd60e51b815260206004820152603d60248201527f737570706c696564207461736b20646f6573206e6f74206d617463682074686560448201527f206f6e65207265636f7264656420696e2074686520636f6e74726163740000006064820152608490fd5b83356001600160401b03811161219a5760209161218f8392836004369288010101613734565b8152019301926112bb565b6136c0565b613984565b83356001600160401b03811161219a576020916121c783928336918701016137ce565b815201930192611244565b8580fd5b3461043a57602036600319011261031f576109e66121fa6121f561367b565b61432c565b604051918291602083526020830190613945565b503461043a5736600319011261031f576033546040516001600160a01b039091168152602090f35b503461043a5736600319011261031f57602063ffffffff60c95460a01c16604051908152f35b503461043a5736600319011261031f576097546040516001600160a01b039091168152602090f35b3461043a57602036600319011261031f576004356001600160401b038111610435576112fa6122d36122bd6109e6933690600401613881565b60405192839160208084015260408301906141b1565b604051918291602083526020830190613920565b503461043a57604036600319011261031f576004356001600160401b03811161043557612318903690600401613881565b906024356001600160401b03811161043557612338903690600401613734565b9160cb549260a0820193845110612946576080820180519091906001600160a01b031633036128ab575b505063ffffffff6060820151169063ffffffff4216918280821160001461289c5761238c9161482a565b63ffffffff8060ca5460281c16911611612857576001600160a01b036123b0614076565b16845190803b156103cc576040516323b872dd60e01b815233600482015230602482015260448101929092526020908290606490829088905af190811561284c57849161282d575b50156127ef576040519061240b826135d3565b8360a060405161241a816135d3565b606081528260208201528260408201528260608201528260808201520152604082019484865260ff606084019486865260808501976060895260a0860194888652865281602087015263ffffffff61247860ca549382851690614206565b16905260201c168094525190526040516020810190602082526124a2816112fa6040820186614236565b5190209060cf54918284116127aa576124ba8361396d565b926124c86040519485613609565b80845260cf8652857facb8d954e2cfef495862221e91bd7523613cf8808827cb33edfe4904cc51bf29602086015b83831061278c575050505082519161250d8561396d565b9461251b6040519687613609565b80865261252a601f199161396d565b01865b81811061277557505085925b85519060ff8516918210156126a857801561263d576125898161255c8487614844565b6040516020810191448352426040830152606082015260608152612581608082613609565b519020614851565b9061259482886143f6565b51916000198201918211612069576125c2906125b0838a6143f6565b516125bb828b6143f6565b52886143f6565b5081519095906125da906001600160a01b031661448f565b1561263457508051602091906001600160a01b03166125f9848a6143f6565b51520151602061260983896143f6565b51015260ff811461262057600101965b9692612539565b634e487b7160e01b87526011600452602487fd5b98915050612619565b60405162461bcd60e51b815260206004820152603760248201527f496e7465726e616c3a204665657320746f6f206c6f772e204e6f206f7065726160448201527f746f7273206c65667420746f207069636b2066726f6d2e0000000000000000006064820152608490fd5b8783888b526040516020810190602082526126ca816112fa6040820186614236565b51902063ffffffff60c95460a01c16835260cc6020526040832055600161273060c954927f07a2aac65c6401a6cbb0fa80ff456ec88725098383c7e585ee342ae74505c98b63ffffffff8560a01c16928392604051918291602083526020830190614236565b0390a20163ffffffff81116127615763ffffffff60a01b1990911660a09190911b63ffffffff60a01b161760c95580f35b634e487b7160e01b83526011600452602483fd5b6020906127806142e6565b82828a0101520161252d565b6002602060019261279c85614300565b8152019201920191906124f6565b60405162461bcd60e51b815260206004820152601e60248201527f496e7465726e616c3a204e6f7420656e6f756768206f70657261746f727300006044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754661696c656420746f207472616e736665722066656560501b6044820152606490fd5b612846915060203d602011611d9e57611d918183613609565b386123f8565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152601e60248201527f526571756573742074696d657374616d7020746f6f20666172206177617900006044820152606490fd5b906128a69161482a565b61238c565b6128ce906040516020808201526128c9816112fa60408201886141b1565b61479c565b90516001600160a01b039081169116036128e9573880612362565b60405162461bcd60e51b815260206004820152602f60248201527f5369676e6572206f6620726571756573745369676e6174757265206973206e6f60448201526e3a103932b8bab2b9ba1737bbb732b960891b6064820152608490fd5b60405162461bcd60e51b815260206004820152600b60248201526a46656520746f6f206c6f7760a81b6044820152606490fd5b503461043a578060031936011261031f5761299261469d565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461043a5736600319011261031f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461043a5736600319011261031f576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461043a57608036600319011261031f57604051612a7c816135a2565b612a8461381a565b815260243560ff8116810361085557602082019081526044359163ffffffff831683036108515780604063ffffffff92019384526064356060820152612acc610a76336140fe565b511680612b37575b505160ff8116612b16575b505163ffffffff8116612af0575080f35b68ffffffff000000000060ca549160281b169068ffffffff000000000019161760ca5580f35b64ff0000000060ca549160201b169064ff0000000019161760ca5538612adf565b63ffffffff1960ca54161760ca5538612ad4565b503461043a57602036600319011261031f576004359060cd54821015612b8f576020612b768361351e565b905460405160039290921b1c6001600160a01b03168152f35b80fd5b503461043a5736600319011261031f576020609854604051908152f35b503461043a57602036600319011261031f576004359060ff8216809203612b8f5760206001831b806098541614604051908152f35b503461043a578060031936011261031f576097546001600160a01b0316803b156103cc5760206024916040519283809263237dfb4760e11b82523360048301525afa801561032457612c3d918391612c74575b50613c4c565b60001960985560405160001981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a280f35b612c8d915060203d602011611d9e57611d918183613609565b38612c37565b503461043a57602036600319011261031f57610893612cb061367b565b612cb861469d565b6146f5565b503461043a57602036600319011261031f57612cd761367b565b907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103cc5781600491604051928380926302e0740360e31b82525afa908115610324578291612f8a575b5080515191612d3c8361396d565b91612d4a6040519384613609565b838352612d568461396d565b602084019190601f1901368337825b858110612f625750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156103cc5760408051639004134760e01b81526001600160a01b0390971660048801526024870152835160448701819052839287929091606484019190855b818110612f3d5750505082809103915afa938415612f30578194612e9e575b5080815b848110612e725750612e0e906143b7565b93815b848110612e2657604051806109e6888261383e565b612e3081836143f6565b51612e3e575b600101612e11565b91600190612e6a906001600160a01b03612e5886886143f6565b5116612e64828a6143f6565b5261468e565b929050612e36565b612e7c81876143f6565b51612e8a575b600101612dfd565b90612e9660019161468e565b919050612e82565b9093503d8085833e612eb08183613609565b81019060208183031261031f578051906001600160401b03821161043557019080601f8301121561219a578151612ee68161396d565b92612ef46040519485613609565b81845260208085019260051b82010192831161219f57602001905b828210612f20575050509238612df9565b8151815260209182019101612f0f565b50604051903d90823e3d90fd5b82516001600160a01b031684528796508a955060209384019390920191600101612dda565b600190818060a01b03612f768285516143f6565b515116612f8382886143f6565b5201612d65565b612f9e91503d8084833e6109fe8183613609565b38612d2e565b3461043a57602036600319011261031f576020610a2f612fc261367b565b614161565b503461043a57602036600319011261031f57604060209163ffffffff612feb61381a565b16815260cc83522054604051908152f35b3461043a57602036600319011261031f576020610a2f61301a61367b565b6140fe565b503461043a5736600319011261031f576020613039614076565b6040516001600160a01b039091168152f35b503461043a57604036600319011261031f5761306561367b565b60243580151581036108555761089391613081610a76336140fe565b613ff3565b503461043a57602036600319011261031f576004356001600160401b038111610435576130b79036906004016137ce565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103cc5760206024916040519283809263ec7fbb3160e01b82523360048301525afa80156105cc57600191849161316c575b501515036131275761089390613dff565b60405162461bcd60e51b815260206004820152601b60248201527f4f70657261746f72206d757374206265207468652063616c6c657200000000006044820152606490fd5b613185915060203d602011611d9e57611d918183613609565b38613116565b503461043a57602036600319011261031f576004359060ce54821015612b8f576020612b76836134ed565b503461043a57602036600319011261031f57609754600435906001600160a01b0316803b156103cc5760206024916040519283809263237dfb4760e11b82523360048301525afa80156105cc57613213918491612c745750613c4c565b6098548181160361325157806098556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a280f35b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b50346133fd57602036600319011261031f576004356001600160a01b03811690819003610b48576097546001600160a01b038116803b156103cc5760405163755b36bd60e11b8152602081600481855afa80156133f25761332e91869161059d57506001600160a01b03163314613bd5565b82156133755760407f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb6918151908152846020820152a16001600160a01b0319161760975580f35b60405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a490fd5b6040513d87823e3d90fd5b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b60ce548110156135085760ce60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60cd548110156135085760cd60005260206000200190600090565b80548210156135085760005260206000200190600090565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b608081019081106001600160401b038211176135bd57604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b038211176135bd57604052565b604081019081106001600160401b038211176135bd57604052565b90601f801991011681019081106001600160401b038211176135bd57604052565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b600435906001600160a01b038216820361369157565b600080fd5b602435906001600160a01b038216820361369157565b35906001600160a01b038216820361369157565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b6001600160401b0381116135bd57601f01601f191660200190565b81601f8201121561219a5760208135910161374e82613719565b9261375c6040519485613609565b828452828201116137795781600092602092838601378301015290565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b919060408382031261111c57604051906137e7826135ee565b81936137f2816136ac565b83526020810135916001600160401b038311611117576020926138159201613734565b910152565b6004359063ffffffff8216820361369157565b359063ffffffff8216820361369157565b602060408183019282815284518094520192019060005b8181106138625750505090565b82516001600160a01b0316845260209384019390920191600101613855565b91909160c08184031261111c576040519061389b826135d3565b81938135916001600160401b038311611117576138be60a0939284938301613734565b845260208101356020850152604081013560408501526138e06060820161382d565b60608501526138f1608082016136ac565b60808501520135910152565b60005b8381106139105750506000910152565b8181015183820152602001613900565b90602091613939815180928185528580860191016138fd565b601f01601f1916010190565b906040602061396a9360018060a01b0381511684520151918160208201520190613920565b90565b6001600160401b0381116135bd5760051b60200190565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b9181601f8401121561219a578235916001600160401b038311613a0d576020808501948460051b01011161219f57565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b60cf548110156135085760cf60005260206000209060011b0190600090565b90600182811c92168015613ab5575b6020831014613a9f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691613a94565b9060405191826000825492613ad384613a85565b8084529360018116908115613b415750600114613afa575b50613af892500383613609565b565b90506000929192526020600020906000915b818310613b25575050906020613af89282010138613aeb565b6020919350806001915483858901015201910190918492613b0c565b905060209250613af894915060ff191682840152151560051b82010138613aeb565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b9081602091031261031f57516001600160a01b03811681036136915790565b15613bdc57565b60405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b6064820152608490fd5b9081602091031261031f575180151581036136915790565b15613c5357565b60405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b6064820152608490fd5b818110613cb4575050565b60008155600101613ca9565b90929192613de9576001602091818060a01b038551166001600160601b0360a01b825416178155019201519182516001600160401b0381116135bd57613d068254613a85565b601f8111613dac575b506020601f8211600114613d4a5781929394600092613d3f575b50508160011b916000199060031b1c1916179055565b015190503880613d29565b601f1982169083600052806000209160005b818110613d9457509583600195969710613d7b575b505050811b019055565b015160001960f88460031b161c19169055388080613d71565b9192602060018192868b015181550194019201613d5c565b613dd990836000526020600020601f840160051c81019160208510613ddf575b601f0160051c0190613ca9565b38613d0f565b9091508190613dcc565b634e487b7160e01b600052600060045260246000fd5b80516001600160a01b03163303613f5d5760208101515115613e865760005b60cf54811015613e6257613e3181613a66565b505482516001600160a01b03908116911614613e4f57600101613e1e565b90613e5c613af892613a66565b90613cc0565b5060cf5490600160401b8210156135bd57613e5c826001613af8940160cf55613a66565b60005b60cf54811015613f1f57613e9c81613a66565b505482516001600160a01b03908116911614613eba57600101613e89565b613ec49150613a66565b613de9578060006001925501613eda8154613a85565b9081613ee4575050565b81601f60009311600114613ef6575055565b81835260208320613f1291601f0160051c810190600101613ca9565b8082528160208120915555565b60405162461bcd60e51b815260206004820152601260248201527113dc195c985d1bdc881b9bdd08199bdd5b9960721b6044820152606490fd5b0390fd5b60405162461bcd60e51b815260206004820152602660248201527f4d657461646174612061646472657373206d757374206d61746368207468652060448201526531b0b63632b960d11b6064820152608490fd5b15613fb857565b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1030b236b4b760691b6044820152606490fd5b906140515760005b60cd54811015613f1f5761400e8161351e565b905460039190911b1c6001600160a01b039081169083161461403257600101613ffb565b61403c915061351e565b81549060018060a01b039060031b1b19169055565b60cd5490600160401b8210156135bd576106de826001613af8940160cd5560cd613539565b60c9546001600160a01b0316803b156103cc57602060049160405192838092632495a59960e01b82525afa9081156140f2576000916140b3575090565b90506020813d6020116140ea575b816140ce60209383613609565b8101031261031f57516001600160a01b03811681036136915790565b3d91506140c1565b6040513d6000823e3d90fd5b6033546001600160a01b0316331461415b5760ce549060005b82811061412657505050600090565b61412f816134ed565b905460039190911b1c6001600160a01b039081169083161461415357600101614117565b505050600190565b50600190565b61416a816140fe565b61415b5760cd549060005b82811061418457505050600090565b61418d8161351e565b905460039190911b1c6001600160a01b039081169083161461415357600101614175565b9060a0806141c8845160c0855260c0850190613920565b93602081015160208501526040810151604085015263ffffffff6060820151166060850152600180831b036080820151166080850152015191015290565b9063ffffffff8091169116019063ffffffff821161422057565b634e487b7160e01b600052601160045260246000fd5b9061424a825160c0835260c08301906141b1565b9163ffffffff602082015116602083015263ffffffff604082015116604083015260ff60608201511660608301526080810151928281036080840152835180825260208201916020808360051b8301019601926000915b8383106142b957505050505060a08091015191015290565b90919293966020806142d7600193601f198682030187528b51613945565b990193019301919392906142a1565b604051906142f3826135ee565b6060602083600081520152565b9060405161430d816135ee565b82546001600160a01b0316815291829060209061381590600101613abf565b6143346142e6565b5060cf549060005b82811061437d5760405162461bcd60e51b815260206004820152601260248201527113dc195c985d1bdc881b9bdd08199bdd5b9960721b6044820152606490fd5b61438681613a66565b50546001600160a01b038381169116146143a25760010161433c565b61396a92506143b19150613a66565b50614300565b906143c18261396d565b6143ce6040519182613609565b82815280926143df601f199161396d565b0190602036910137565b8051156135085760200190565b80518210156135085760209160051b010190565b1561441157565b60405162461bcd60e51b815260206004820152604a60248201527f4543445341536572766963654d616e61676572426173652e6f6e6c795374616b60448201527f6552656769737472793a2063616c6c6572206973206e6f7420746865207374616064820152696b65526567697374727960b01b608482015260a490fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156103cc576040516398ec1ac960e01b81526001600160a01b039091166004820152602081602481855afa9081156140f25760009161455f575b50813b156103cc576020600492604051938480926340bf2fb760e01b82525afa9182156140f25760009261452b575b50101590565b9091506020813d602011614557575b8161454760209383613609565b8101031261031f57519038614525565b3d915061453a565b90506020813d602011614589575b8161457a60209383613609565b8101031261031f5751386144f6565b3d915061456d565b60208183031261031f578051906001600160401b03821161043557019060208282031261111c5760405191602083018381106001600160401b038211176135bd576040528051906001600160401b038211611117570181601f8201121561219a578051906145fe8261396d565b9261460c6040519485613609565b82845260208085019360061b8301019181831161219f57602001925b8284106146385750505050815290565b60408483031261111c576040519061464f826135ee565b84516001600160a01b03811681036136915782526020850151906001600160601b03821682036136915782602092836040950152815201930192614628565b60001981146142205760010190565b6033546001600160a01b031633036146b157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606554604080516001600160a01b038084168252841660208201529192917fe11cddf1816a43318ca175bbc52cd0185436e9cbead7c83acc54a73e461717e39190a16001600160a01b03166001600160a01b03199190911617606555565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b61396a9161482291603a61481a6147b38351614c2d565b9260405192839160208301957f19457468657265756d205369676e6564204d6573736167653a0a00000000000087526147f581518092602086880191016138fd565b830161480a82518093602086850191016138fd565b010103601f198101835282613609565b519020614dfc565b919091614e6c565b9063ffffffff8091169116039063ffffffff821161422057565b9190820180921161422057565b811561485b570690565b634e487b7160e01b600052601260045260246000fd5b811561485b570490565b9081602091031261031f575163ffffffff811681036136915790565b6065546001600160a01b031633036148ab57565b60405162461bcd60e51b815260206004820152605160248201527f4543445341536572766963654d616e61676572426173652e6f6e6c795265776160448201527f726473496e69746961746f723a2063616c6c6572206973206e6f7420746865206064820152703932bbb0b932399034b734ba34b0ba37b960791b608482015260a490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206f6666736574000000006044820152606490fd5b91908110156135085760051b8101359060be1981360301821215614997570190565b614930565b903590601e198136030182121561499757018035906001600160401b038211614a1657602001918160061b360383136149d157565b60405162461bcd60e51b815260206004820152601760248201527f43616c6c64617461207461696c20746f6f2073686f72740000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206c656e677468000000006044820152606490fd5b356001600160a01b03811681036136915790565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206c656e67746800006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c64617461206163636573732073747269646500006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206f666673657400006044820152606490fd5b9035601e19823603018112156103c75701602081359101916001600160401b038211610df6578160061b36038313610df157565b916020908281520191906000905b808210614b8d5750505090565b909192833560018060a01b0381168091036136915781526020840135906001600160601b03821680920361369157604081600193602083940152019401920190614b80565b91908110156135085760051b81013590609e1981360301821215614997570190565b90614bfe82613719565b614c0b6040519182613609565b82815280926143df601f1991613719565b908151811015613508570160200190565b8015614cc55780816000925b614cb1575080614c4883614bf4565b92915b614c5457505090565b60001982019182116142205781600a820491600a8302838104600a14841517156142205781039081116142205760ff1660300160ff81116142205760f81b6001600160f81b03191660001a90614caa9085614c1c565b5380614c4b565b91614cbd600a9161468e565b920480614c39565b50604051614cd4604082613609565b60018152600360fc1b602082015290565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064820192909252613af891614d3182608481015b03601f198101845283613609565b614fe6565b6001600160a01b03811692833b156103cc57604051636eb1769f60e11b81523060048201526001600160a01b038416602482015293602090859060449082905afa9384156140f257600094614dc6575b50614d97614d3191613af895614844565b60405163095ea7b360e01b60208201526001600160a01b03909416602485015260448401528260648101614d23565b93506020843d602011614df4575b81614de160209383613609565b8101031261031f57925192614d97614d86565b3d9150614dd4565b815160418103614e29575090614e25916020820151906060604084015193015160001a9061513a565b9091565b604003614e625760406020830151920151918260ff1c91601b830180931161422057614e25936001600160ff1b03169260ff169061513a565b5050600090600290565b6005811015614fd05780614e7d5750565b600060018203614ecc5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b5060028103614f1a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60009060038103614f755760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b6004915014614f8057565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b60408051909290916001600160a01b03166150018484613609565b602083527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020840152803b156150f65760008281928260206150729796519301915af13d156150ee573d9061505682613719565b9161506386519384613609565b82523d6000602084013e615224565b8051908161507f57505050565b602080615090938301019101613c34565b156150985750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b606090615224565b835162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116151d65760ff1690601b821415806151cb575b6151bf57602093600093608093604051938452868401526040830152606082015282805260015afa156140f2576000516001600160a01b038116156151b65790600090565b50600090600190565b50505050600090600490565b50601c821415615171565b50505050600090600390565b60f81c600a8110156152095760300160ff81116142205760f81b6001600160f81b03191690565b60570160ff81116142205760f81b6001600160f81b03191690565b90919015615230575090565b8151156152405750805190602001fd5b60405162461bcd60e51b815260206004820152908190613f5990602483019061392056fea26469706673582212206a37532f698adfa346f4301fb50002c7b974da091305d128ab05d3c3044e7d8364736f6c634300081a0033";

type ReclaimServiceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReclaimServiceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReclaimServiceManager__factory extends ContractFactory {
  constructor(...args: ReclaimServiceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _avsDirectory: string,
    _stakeRegistry: string,
    _rewardsCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ReclaimServiceManager> {
    return super.deploy(
      _avsDirectory,
      _stakeRegistry,
      _rewardsCoordinator,
      _delegationManager,
      overrides || {}
    ) as Promise<ReclaimServiceManager>;
  }
  override getDeployTransaction(
    _avsDirectory: string,
    _stakeRegistry: string,
    _rewardsCoordinator: string,
    _delegationManager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _avsDirectory,
      _stakeRegistry,
      _rewardsCoordinator,
      _delegationManager,
      overrides || {}
    );
  }
  override attach(address: string): ReclaimServiceManager {
    return super.attach(address) as ReclaimServiceManager;
  }
  override connect(signer: Signer): ReclaimServiceManager__factory {
    return super.connect(signer) as ReclaimServiceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReclaimServiceManagerInterface {
    return new utils.Interface(_abi) as ReclaimServiceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReclaimServiceManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReclaimServiceManager;
  }
}
