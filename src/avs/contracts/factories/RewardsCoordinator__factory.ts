/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardsCoordinator,
  RewardsCoordinatorInterface,
} from "../RewardsCoordinator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_delegationManager",
        type: "address",
        internalType: "contract IDelegationManager",
      },
      {
        name: "_strategyManager",
        type: "address",
        internalType: "contract IStrategyManager",
      },
      {
        name: "_CALCULATION_INTERVAL_SECONDS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_MAX_REWARDS_DURATION",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_MAX_RETROACTIVE_LENGTH",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_MAX_FUTURE_LENGTH",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "__GENESIS_REWARDS_TIMESTAMP",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "CALCULATION_INTERVAL_SECONDS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "GENESIS_REWARDS_TIMESTAMP",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FUTURE_LENGTH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_RETROACTIVE_LENGTH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_REWARDS_DURATION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activationDelay",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "beaconChainETHStrategy",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateEarnerLeafHash",
    inputs: [
      {
        name: "leaf",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
        components: [
          {
            name: "earner",
            type: "address",
            internalType: "address",
          },
          {
            name: "earnerTokenRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "calculateTokenLeafHash",
    inputs: [
      {
        name: "leaf",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "cumulativeEarnings",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "checkClaim",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.RewardsMerkleClaim",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimerFor",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createRewardsForAllEarners",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createRewardsForAllSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cumulativeClaimed",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currRewardsCalculationEndTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultOperatorSplitBips",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "delegationManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDelegationManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "disableRoot",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "domainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentClaimableDistributionRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentDistributionRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDistributionRootAtIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDistributionRootsLength",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorAVSSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorPISplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRootIndexFromHash",
    inputs: [
      {
        name: "rootHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
      {
        name: "initialPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_rewardsUpdater",
        type: "address",
        internalType: "address",
      },
      {
        name: "_activationDelay",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_defaultSplitBips",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAVSRewardsSubmissionHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorDirectedAVSRewardsSubmissionHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsForAllSubmitter",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsSubmissionForAllEarnersHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsSubmissionForAllHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processClaim",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.RewardsMerkleClaim",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "processClaims",
    inputs: [
      {
        name: "claims",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsMerkleClaim[]",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsUpdater",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setActivationDelay",
    inputs: [
      {
        name: "_activationDelay",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultOperatorSplit",
    inputs: [
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorAVSSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorPISplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPauserRegistry",
    inputs: [
      {
        name: "newPauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsForAllSubmitter",
    inputs: [
      {
        name: "_submitter",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newValue",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsUpdater",
    inputs: [
      {
        name: "_rewardsUpdater",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "strategyManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStrategyManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submissionNonce",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submitRoot",
    inputs: [
      {
        name: "root",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "rewardsCalculationEndTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AVSRewardsSubmissionCreated",
    inputs: [
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinator.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ActivationDelaySet",
    inputs: [
      {
        name: "oldActivationDelay",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "newActivationDelay",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ClaimerForSet",
    inputs: [
      {
        name: "earner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldClaimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultOperatorSplitBipsSet",
    inputs: [
      {
        name: "oldDefaultOperatorSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newDefaultOperatorSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributionRootDisabled",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributionRootSubmitted",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "root",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsCalculationEndTimestamp",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorAVSSplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorAVSSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorAVSSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorDirectedAVSRewardsSubmissionCreated",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "operatorDirectedRewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType:
          "struct IRewardsCoordinator.OperatorDirectedRewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorPISplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorPISplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorPISplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PauserRegistrySet",
    inputs: [
      {
        name: "pauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
      {
        name: "newPauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsClaimed",
    inputs: [
      {
        name: "root",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "earner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "contract IERC20",
      },
      {
        name: "claimedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsForAllSubmitterSet",
    inputs: [
      {
        name: "rewardsForAllSubmitter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldValue",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
      {
        name: "newValue",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsSubmissionForAllCreated",
    inputs: [
      {
        name: "submitter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinator.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsSubmissionForAllEarnersCreated",
    inputs: [
      {
        name: "tokenHopper",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinator.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsUpdaterSet",
    inputs: [
      {
        name: "oldRewardsUpdater",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRewardsUpdater",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x61018080604052346103c057604051601f61544838819003918201601f19168301916001600160401b038311848410176103ac5780849260e09460405283398101031261035c578051906001600160a01b03821682036103585760208101516001600160a01b03811681036103585761007a6040830161040d565b6100866060840161040d565b906100936080850161040d565b926100ac60c06100a560a0880161040d565b960161040d565b9563ffffffff831680156103445763ffffffff81818a1606166102b3576201518063ffffffff91061661022257610120526101405260805260a05260c05260e052610100525f5460ff8160081c166101cd5760ff80821610610193575b4661016052604051615029908161041f8239608051818181611480015261481e015260a0518181816117aa01526147e3015260c051818181610b6f0152614862015260e05181818161050a01526136780152610100518181816106f501526149ac01526101205181611bcb015261014051818181610ba801526148a0015261016051816131860152f35b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a180610109565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b60405162461bcd60e51b815260206004820152605760248201527f52657761726473436f6f7264696e61746f723a2043414c43554c4154494f4e5f60448201527f494e54455256414c5f5345434f4e4453206d7573742062652061206d756c746960648201527f706c65206f6620534e415053484f545f434144454e4345000000000000000000608482015260a490fd5b60405162461bcd60e51b815260206004820152606060248201527f52657761726473436f6f7264696e61746f723a2047454e455349535f5245574160448201527f5244535f54494d455354414d50206d7573742062652061206d756c7469706c6560648201527f206f662043414c43554c4154494f4e5f494e54455256414c5f5345434f4e4453608482015260a490fd5b634e487b7160e01b5f52601260045260245ffd5b5f80fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b519063ffffffff821682036103585756fe6080604052600436106120ef575f3560e01c806218572c1461039a57806304a0c502146103955780630e9a53cf146103905780630eb383451461038b57806310d67a2f14610386578063131433b414610381578063136439dd1461037c578063149bc872146103775780632b9f64a41461037257806336af41fa1461036d57806337838ed01461036857806339b70e38146103635780633a8c07861461035e5780633ccc861d146103595780633efe1db6146103545780634596021c1461034f5780634b9439601461034a5780634d18cc351461034557806358baaa3e14610340578063595c6a671461033b5780635ac86ab7146103365780635c975abb146103315780635e9d83481461032c57806363f6a798146103275780636d21117e14610322578063715018a61461031d5780637b8f8b0514610318578063863cb9a914610313578063865c69531461030e578063886f1195146103095780638da5cb5b146103045780639104c319146102ff5780639be3d4e4146102fa5780639cb9a5fa146102f55780639d45c281146102f0578063a0169ddd146102eb578063a50a1d9c146102e6578063aebd8bae146102e1578063b3dbb0e0146102dc578063bb7e451f146102d7578063bf21a8aa146102d2578063c46db606146102cd578063d4540a55146102c8578063dcbb03b3146102c3578063de02e503146102be578063e063f81f146102b9578063e810ce21146102b4578063ea4d3c9b146102af578063ed71e6a2146102aa578063f2fde38b146102a5578063f698da25146102a0578063f8cd84481461029b578063f96abf2e14610296578063fabc1cbc14610291578063fbf1e2c11461028c578063fce36c7d146102875763ff9f6cce036120ef57611fdf565b611ee7565b611ebf565b611e55565b611d17565b611cf3565b611cd9565b611c48565b611bfa565b611bb6565b611b8a565b611b1d565b611af2565b611940565b61181c565b6117ce565b61178e565b611753565b6115c8565b61157a565b61154a565b6114a4565b611464565b6112f8565b6112bd565b61128f565b611267565b61123f565b6111e0565b6111b3565b611196565b61113b565b6110ed565b6110c9565b611069565b61104c565b611019565b610fba565b610f8d565b610f67565b610ee7565b610e49565b610c98565b610c0c565b610bd7565b610b93565b610b53565b6109fb565b610845565b610819565b610719565b6106d9565b610629565b610596565b61052e565b6104ee565b6104a4565b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b6001600160a01b038116036104a057565b5f80fd5b346104e95760203660031901126104e4576004356104c18161048f565b60018060a01b03165f5260d1602052602060ff60405f2054166040519015158152f35b6103ef565b61039f565b346104e9575f3660031901126104e457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104e9575f3660031901126104e4576105886105496122bf565b6040519182918291909160608060808301948051845263ffffffff602082015116602085015263ffffffff604082015116604085015201511515910152565b0390f35b801515036104a057565b346104e95760403660031901126104e4576004356105b38161048f565b602435906105c08261058c565b6105c8613381565b60018060a01b0316805f5260d160205260ff60405f205416151582151590827f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c5f80a45f5260d160205260405f209060ff8019835416911515161790555f80f35b346104e95760203660031901126104e4576004356106468161048f565b6065546001600160a01b031690813b156106d45760206004926040519384809263755b36bd60e11b82525afa9182156106cf5761069e92610699915f916106a0575b506001600160a01b031633146123c3565b6133d9565b005b6106c2915060203d6020116106c8575b6106ba81836121a1565b8101906123a0565b5f610688565b503d6106b0565b6123b8565b61234d565b346104e9575f3660031901126104e457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104e95760203660031901126104e4576065546001600160a01b0316600435813b156106d45760206024926040519384809263237dfb4760e11b82523360048301525afa9182156106cf5761069e9261077a915f9161077f575b50612437565b612494565b6107a1915060203d6020116107a7575b61079981836121a1565b810190612422565b5f610774565b503d61078f565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a207374727563742063616c6c6461746120746f6044820152661bc81cda1bdc9d60ca1b6064820152608490fd5b604090600319011261081457600490565b6107ae565b346104e95760403660031901126104e457602061083d61083836610803565b612549565b604051908152f35b346104e95760203660031901126104e4576004356108628161048f565b60018060a01b03165f5260cc602052602060018060a01b0360405f205416604051908152f35b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b9181601f8401121561096f578235916001600160401b038311610916576020808501948460051b01011161091157565b610888565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b60206003198201126104e457600435906001600160401b0382116109f6576109f2916004016108e1565b9091565b61043f565b346104e957610a09366109c8565b90610a21610a1b600280606654161490565b15612592565b335f5260d1602052610a3960ff60405f2054166125de565b610a486002609754141561266a565b60026097555f5b828110610a605761069e6001609755565b80610b4d610a716001938686612785565b335f90815260ce60205260409020546040516020810190610aa681610a988686338761298d565b03601f1981018352826121a1565b51902090610ab383613606565b335f90815260d060205260409020610ae690610ad99084905b905f5260205260405f2090565b805460ff19166001179055565b610aef816129b1565b335f90815260ce60205260409020556040517f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf270482339180610b2f87826129da565b0390a46040610b406020830161253f565b910135903090339061371c565b01610a4f565b346104e9575f3660031901126104e457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104e9575f3660031901126104e4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346104e9575f3660031901126104e457602063ffffffff60cb5460a01c16604051908152f35b90816101009103126108145790565b346104e95760403660031901126104e4576004356001600160401b0381116109f657610c3f610c76913690600401610bfd565b60243590610c4c8261048f565b610c5d610a1b600480606654161490565b610c6c6002609754141561266a565b60026097556138ac565b6001609755005b63ffffffff8116036104a057565b3590610c9682610c7d565b565b346104e95760403660031901126104e457602435600435610cb882610c7d565b610cc9610a1b600880606654161490565b60cb5491610ce1336001600160a01b038516146129eb565b63ffffffff81169263ffffffff8160c01c16841115610dca5763ffffffff7fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd0891610d2c428710612a54565b610db0610d59610d51610d4460ca5463ffffffff1690565b9360a01c63ffffffff1690565b844216612ae4565b94610d8b610d656121c2565b88815263ffffffff8316602082015263ffffffff881660408201525f6060820152612afe565b60cb805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055565b60405163ffffffff9094168452169180602081015b0390a4005b60405162461bcd60e51b815260206004820152604b60248201527f52657761726473436f6f7264696e61746f722e7375626d6974526f6f743a206e60448201527f657720726f6f74206d75737420626520666f72206e657765722063616c63756c60648201526a185d1959081c195c9a5bd960aa1b608482015260a490fd5b346104e95760403660031901126104e4576004356001600160401b0381116109f657610e799036906004016108e1565b60243591610e868361048f565b610e97610a1b600480606654161490565b610ea66002609754141561266a565b60026097553681900360fe1901925f5b83811015610c76578060051b8301359085821215610ee257610edc8360019386016138ac565b01610eb6565b6126b6565b346104e95760203660031901126104e457600435610f048161048f565b60018060a01b03165f5260d5602052610588610f5260405f2063ffffffff60405191610f2f83612166565b5461ffff8116835261ffff8160101c16602084015260201c166040820152613a67565b60405161ffff90911681529081906020820190565b346104e9575f3660031901126104e457602063ffffffff60cb5460c01c16604051908152f35b346104e95760203660031901126104e45761069e600435610fad81610c7d565b610fb5613381565b613a9e565b346104e9575f3660031901126104e4576065546001600160a01b0316803b156106d45760206024916040519283809263237dfb4760e11b82523360048301525afa80156106cf57611011915f9161077f5750612437565b61069e612be4565b346104e95760203660031901126104e45760043560ff81168091036104a05760016020911b806066541614604051908152f35b346104e9575f3660031901126104e4576020606654604051908152f35b346104e95760203660031901126104e4576004356001600160401b0381116109f65761109c6110be913690600401610bfd565b6110b86110b282356110ad81610c7d565b612244565b5061227e565b90613cea565b602060405160018152f35b346104e9575f3660031901126104e457602061ffff60cb5460e01c16604051908152f35b346104e95760403660031901126104e45760043561110a8161048f565b6024359060018060a01b03165f5260cf60205260405f20905f52602052602060ff60405f2054166040519015158152f35b346104e9575f3660031901126104e457611153613381565b603380546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346104e9575f3660031901126104e457602060ca54604051908152f35b346104e95760203660031901126104e45761069e6004356111d38161048f565b6111db613381565b613e60565b346104e95760403660031901126104e45760206112366004356112028161048f565b6024359061120f8261048f565b60018060a01b03165f5260cd835260405f209060018060a01b03165f5260205260405f2090565b54604051908152f35b346104e9575f3660031901126104e4576065546040516001600160a01b039091168152602090f35b346104e9575f3660031901126104e4576033546040516001600160a01b039091168152602090f35b346104e9575f3660031901126104e457602060405173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08152f35b346104e9575f3660031901126104e4576112d56121d1565b5060ca545f1981019081116112f3576105496110b261058892612244565b6121f5565b346104e95760403660031901126104e4576004356113158161048f565b6024356001600160401b0381116109f6576113349036906004016108e1565b9190611347610a1b602080606654161490565b6113566002609754141561266a565b60026097556001600160a01b03821691611371338414612c22565b5f5b8481106113845761069e6001609755565b8061145e6113956001938887612cb1565b6001600160a01b0385165f90815260ce60205260409020549060405160208101906113c681610a9885878c87612e17565b519020886113d38361413a565b936113f5610ad984610acc8c60018060a01b03165f5260d360205260405f2090565b6113fe816129b1565b6001600160a01b038a165f90815260ce60205260409020557ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e06040518061144787339583612e3b565b0390a43090611459602033920161253f565b61371c565b01611373565b346104e9575f3660031901126104e457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104e95760203660031901126104e4576004356114c18161048f565b335f81815260cc6020526040812080546001600160a01b039485166001600160a01b03198216811790925590931691907fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129080a4005b6024359061ffff821682036104a057565b60a4359061ffff821682036104a057565b6044359061ffff821682036104a057565b346104e95760203660031901126104e45760043561ffff811681036104a05761069e90611575613381565b614250565b346104e95760403660031901126104e4576004356115978161048f565b6024359060018060a01b03165f5260d260205260405f20905f52602052602060ff60405f2054166040519015158152f35b346104e95760403660031901126104e4576004356115e58161048f565b6115ed611517565b906115ff610a1b608080606654161490565b6001600160a01b03811691338390036116de578061164661271061ffff7fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f7494161115612e52565b60cb546116639060a01c63ffffffff165b63ffffffff4216612ae4565b926116b684836116b161169661169161168c8760018060a01b03165f5260d560205260405f2090565b612bb0565b613a67565b6001600160a01b039095165f90815260d56020526040902090565b6142ab565b6040805163ffffffff95909516855261ffff91821660208601529116908301523391606090a3005b60405162461bcd60e51b815260206004820152604160248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72504960448201527f53706c69743a2063616c6c6572206973206e6f7420746865206f70657261746f6064820152603960f91b608482015260a490fd5b346104e95760203660031901126104e4576004356117708161048f565b60018060a01b03165f5260ce602052602060405f2054604051908152f35b346104e9575f3660031901126104e457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104e95760403660031901126104e4576004356117eb8161048f565b6024359060018060a01b03165f5260d060205260405f20905f52602052602060ff60405f2054166040519015158152f35b346104e95760c03660031901126104e4576004356118398161048f565b6118b86024356118488161048f565b6044356064356118578161048f565b6084359161186483610c7d565b61186c611528565b935f549661189e6118886118848a60ff9060081c1690565b1590565b8099819a611932575b8115611912575b50612ecf565b876118af600160ff195f5416175f55565b6118fb57612f32565b6118be57005b6118cc61ff00195f54165f55565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61190d61010061ff00195f5416175f55565b612f32565b303b15915081611924575b505f611898565b60ff1660011490505f61191d565b600160ff8216109150611891565b346104e95760603660031901126104e45760043561195d8161048f565b6024356119698161048f565b611971611539565b611982610a1b604080606654161490565b6001600160a01b0383169133839003611a7c57817f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934916119cd61271061ffff611a129616111561303b565b611a4286836116b184611a12611a2761169161168c846119f961165760cb5463ffffffff9060a01c1690565b9d8e9960018060a01b03165f5260d460205260405f2090565b9060018060a01b03165f5260205260405f2090565b6001600160a01b03909c165f90815260d46020526040902090565b6040805163ffffffff95909516855261ffff968716602086015291909516908301526001600160a01b039093169233918060608101610dc5565b60405162461bcd60e51b815260206004820152604260248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72415660448201527f5353706c69743a2063616c6c6572206973206e6f7420746865206f706572617460648201526137b960f11b608482015260a490fd5b346104e95760203660031901126104e4576105886105496110b2600435611b176121d1565b50612244565b346104e95760403660031901126104e457610588610f52611b78600435611b438161048f565b60243590611b508261048f565b60018060a01b03165f5260d460205260405f209060018060a01b03165f5260205260405f2090565b63ffffffff60405191610f2f83612166565b346104e95760203660031901126104e4576020611ba86004356130d1565b63ffffffff60405191168152f35b346104e9575f3660031901126104e4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346104e95760403660031901126104e457600435611c178161048f565b6024359060018060a01b03165f5260d360205260405f20905f52602052602060ff60405f2054166040519015158152f35b346104e95760203660031901126104e457600435611c658161048f565b611c6d613381565b6001600160a01b03811615611c855761069e90613e18565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346104e9575f3660031901126104e457602061083d613183565b346104e95760403660031901126104e457602061083d611d1236610803565b6131b8565b346104e95760203660031901126104e457600435611d3481610c7d565b611d45610a1b600880606654161490565b611d5a60018060a01b0360cb541633146129eb565b60ca549063ffffffff811691821015611df6576001611d7b611dd092612244565b5001611dbd611db6611dad8354611da1611d9c6118848360ff9060401c1690565b6131ff565b60201c63ffffffff1690565b63ffffffff1690565b4210613269565b805460ff60401b1916600160401b179055565b7fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e5f80a2005b60405162461bcd60e51b815260206004820152603160248201527f52657761726473436f6f7264696e61746f722e64697361626c65526f6f743a206044820152700d2dcecc2d8d2c840e4dedee892dcc8caf607b1b6064820152608490fd5b346104e95760203660031901126104e4576065546001600160a01b0316600435813b156106d45760206004926040519384809263755b36bd60e11b82525afa9182156106cf5761069e92611eba915f916106a057506001600160a01b031633146123c3565b6132d4565b346104e9575f3660031901126104e45760cb546040516001600160a01b039091168152602090f35b346104e957611ef5366109c8565b90611f07610a1b600180606654161490565b611f166002609754141561266a565b60026097555f5b828110611f2e5761069e6001609755565b80611fd9611f3f6001938686612785565b335f90815260ce60205260409020546040516020810190611f6681610a988686338761298d565b51902090611f7383613606565b335f90815260cf60205260409020611f9090610ad9908490610acc565b611f99816129b1565b335f90815260ce60205260409020556040517f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e6281339180610b2f87826129da565b01611f1d565b346104e957611fed366109c8565b90611fff610a1b601080606654161490565b335f5260d160205261201760ff60405f2054166125de565b6120266002609754141561266a565b60026097555f5b82811061203e5761069e6001609755565b806120e961204f6001938686612785565b335f90815260ce6020526040902054604051602081019061207681610a988686338761298d565b5190209061208383613606565b335f90815260d2602052604090206120a090610ad9908490610acc565b6120a9816129b1565b335f90815260ce60205260409020556040517f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b339180610b2f87826129da565b0161202d565b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b0382111761218157604052565b612152565b608081019081106001600160401b0382111761218157604052565b90601f801991011681019081106001600160401b0382111761218157604052565b60405190610c966080836121a1565b604051906121de82612186565b5f6060838281528260208201528260408201520152565b634e487b7160e01b5f52601160045260245ffd5b80156112f3575f190190565b5f198101919082116112f357565b919082039182116112f357565b634e487b7160e01b5f52603260045260245ffd5b60ca548110156122605760ca5f5260205f209060011b01905f90565b612230565b8054821015612260575f5260205f209060011b01905f90565b9060405161228b81612186565b606060ff6001839580548552015463ffffffff8116602085015263ffffffff8160201c16604085015260401c161515910152565b6122c76121d1565b5060ca54805b6122f257506122da6121c2565b5f81525f60208201525f60408201525f606082015290565b6123016110b26110ad83612215565b906123126118846060840151151590565b80612330575b61232c576123269150612209565b806122cd565b5090565b50612345611dad604084015163ffffffff1690565b421015612318565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b908160209103126104e457516123b58161048f565b90565b6040513d5f823e3d90fd5b156123ca57565b60405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b6064820152608490fd5b908160209103126104e457516123b58161058c565b1561243e57565b60405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b6064820152608490fd5b606654818116036124d457606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d90602090a2565b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b356123b58161048f565b60208135916125578361048f565b01356040519060208201925f84526001600160601b03199060601b16602183015260358201526035815261258c6055826121a1565b51902090565b1561259957565b60405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e64657820697320706175736564000000000000006044820152606490fd5b156125e557565b60405162461bcd60e51b815260206004820152605160248201527f52657761726473436f6f7264696e61746f723a2063616c6c6572206973206e6f60448201527f7420612076616c69642063726561746552657761726473466f72416c6c53756260648201527036b4b9b9b4b7b71039bab136b4ba3a32b960791b608482015260a490fd5b1561267157565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206f6666736574000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206c656e677468000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f43616c6c64617461207461696c20746f6f2073686f72740000000000000000006044820152606490fd5b91908110156122605760051b81013590609e1981360301821215610ee2570190565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206c656e67746800006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c64617461206163636573732073747269646500006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206f666673657400006044820152606490fd5b9035601e19823603018112156128b45701602081359101916001600160401b0382116128af578160061b360383136128aa57565b6127ec565b6127a7565b612831565b916020908281520191905f905b8082106128d35750505090565b90919283356128e18161048f565b6001600160a01b0316815260208401356001600160601b03811691908290036104a0576040816001936020839401520194019201906128c6565b90608063ffffffff8161293f6129318680612876565b60a0875260a08701916128b9565b94602081013561294e8161048f565b6001600160a01b031660208601526040818101359086015282606082013561297581610c7d565b166060860152013561298681610c7d565b1691015290565b6123b5939260609260018060a01b031682526020820152816040820152019061291b565b90600182018092116112f357565b90602082018092116112f357565b919082018092116112f357565b9060206123b592818152019061291b565b156129f257565b60405162461bcd60e51b815260206004820152603460248201527f52657761726473436f6f7264696e61746f723a2063616c6c6572206973206e6f6044820152733a103a3432903932bbb0b93239aab83230ba32b960611b6064820152608490fd5b15612a5b57565b60405162461bcd60e51b815260206004820152605560248201527f52657761726473436f6f7264696e61746f722e7375626d6974526f6f743a207260448201527f65776172647343616c63756c6174696f6e456e6454696d657374616d702063616064820152746e6e6f7420626520696e207468652066757475726560581b608482015260a490fd5b9063ffffffff8091169116019063ffffffff82116112f357565b60ca54600160401b81101561218157806001612b1f920160ca5560ca612265565b919091612b9d5760606001610c969383518155019163ffffffff60208201511663ffffffff19845416178355612b7c63ffffffff604083015116849067ffffffff0000000082549160201b169067ffffffff000000001916179055565b0151815460ff60401b191690151560401b68ff000000000000000016179055565b634e487b7160e01b5f525f60045260245ffd5b90604051612bbd81612166565b604063ffffffff82945461ffff8116845261ffff8160101c16602085015260201c16910152565b5f196066556040515f1981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2565b356123b581610c7d565b15612c2957565b60405162461bcd60e51b815260206004820152605460248201527f52657761726473436f6f7264696e61746f722e6372656174654f70657261746f60448201527f724469726563746564415653526577617264735375626d697373696f6e3a2063606482015273616c6c6572206973206e6f74207468652041565360601b608482015260a490fd5b91908110156122605760051b8101359060be1981360301821215610ee2570190565b9035601e19823603018112156128b45701602081359101916001600160401b0382116128af5781360383136128aa57565b908060209392818452848401375f828201840152601f01601f1916010190565b9190612d41612d338480612876565b60c0845260c08401916128b9565b906020840135612d508161048f565b6001600160a01b0316602082810191909152612d6f6040860186612876565b838503604085015280855293909101925f5b818110612de357505050612dd584612daf612da260606123b5979801610c8b565b63ffffffff166060850152565b612dcb612dbe60808301610c8b565b63ffffffff166080850152565b60a0810190612cd3565b9160a0818503910152612d04565b9091936040806001928735612df78161048f565b848060a01b03168152602088013560208201520195019101919091612d81565b6123b5939260609260018060a01b0316825260208201528160408201520190612d24565b6040906123b5939281528160208201520190612d24565b15612e5957565b60405162461bcd60e51b815260206004820152604260248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72504960448201527f53706c69743a2073706c6974206d757374206265203c3d203130303030206269606482015261707360f01b608482015260a490fd5b15612ed657565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b929493919094612f40614351565b60c9556065546001600160a01b03161580613029575b15612fae576111db61157594612fa9610c969885612f76610fb597606655565b60405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d90602090a26133d9565b613e18565b60405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a490fd5b506001600160a01b0386161515612f56565b1561304257565b60405162461bcd60e51b815260206004820152604360248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72415660448201527f5353706c69743a2073706c6974206d757374206265203c3d203130303030206260648201526269707360e81b608482015260a490fd5b63ffffffff5f199116019063ffffffff82116112f357565b63ffffffff60ca54165b63ffffffff81166131515760405162461bcd60e51b815260206004820152603760248201527f52657761726473436f6f7264696e61746f722e676574526f6f74496e6465784660448201527f726f6d486173683a20726f6f74206e6f7420666f756e640000000000000000006064820152608490fd5b8161315e6110ad836130b9565b5054146131795763ffffffff1680156112f3575f19016130db565b6123b591506130b9565b467f0000000000000000000000000000000000000000000000000000000000000000036131b05760c95490565b6123b5614351565b60208135916131c68361048f565b0135604051906020820192600160f81b84526001600160601b03199060601b16602183015260358201526035815261258c6055826121a1565b1561320657565b60405162461bcd60e51b815260206004820152603560248201527f52657761726473436f6f7264696e61746f722e64697361626c65526f6f743a206044820152741c9bdbdd08185b1c9958591e48191a5cd8589b1959605a1b6064820152608490fd5b1561327057565b60405162461bcd60e51b815260206004820152603660248201527f52657761726473436f6f7264696e61746f722e64697361626c65526f6f743a206044820152751c9bdbdd08185b1c9958591e481858dd1a5d985d195960521b6064820152608490fd5b60665419811981160361331657606681905560405190815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602090a2565b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b6033546001600160a01b0316330361339557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0381161561344a57606554604080516001600160a01b0392831681529183166020830152610c9692917f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb69190a160018060a01b03166001600160601b0360a01b6065541617606555565b60405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a490fd5b903590601e1981360301821215610ee257018035906001600160401b03821161350157602001918160061b360383136134fc57565b612740565b6126fb565b1561350d57565b60405162461bcd60e51b815260206004820152603f60248201527f52657761726473436f6f7264696e61746f722e5f76616c69646174655265776160448201527f7264735375626d697373696f6e3a20616d6f756e7420746f6f206c61726765006064820152608490fd5b1561357f57565b60405162461bcd60e51b815260206004820152605360248201527f52657761726473436f6f7264696e61746f722e5f76616c69646174655265776160448201527f7264735375626d697373696f6e3a20737461727454696d657374616d7020746f6064820152726f2066617220696e207468652066757475726560681b608482015260a490fd5b604061363d9161361681806134c7565b9390606083019485359061362982610c7d565b60808501359261363884610c7d565b6147be565b013580156136a757610c96916136686f4b3b4ca85a86c47a098a223fffffffff61366d931115613506565b612c18565b63ffffffff61369e817f000000000000000000000000000000000000000000000000000000000000000016426129cd565b91161115613578565b60405162461bcd60e51b815260206004820152604160248201527f52657761726473436f6f7264696e61746f722e5f76616c69646174655265776160448201527f7264735375626d697373696f6e3a20616d6f756e742063616e6e6f74206265206064820152600360fc1b608482015260a490fd5b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610c96916137606084836121a1565b614a33565b1561376c57565b60405162461bcd60e51b815260206004820152603c60248201527f52657761726473436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063616c6c6572206973206e6f742076616c696420636c61696d6572000000006064820152608490fd5b903590601e1981360301821215610ee257018035906001600160401b03821161350157602001918160051b360383136134fc57565b91908110156122605760061b0190565b1561382357565b60405162461bcd60e51b815260206004820152605560248201527f52657761726473436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063756d756c61746976654561726e696e6773206d75737420626520677420746064820152741a185b8818dd5b5d5b185d1a5d9950db185a5b5959605a1b608482015260a490fd5b906138bc6110b26110ad84612c18565b906138c78284613cea565b6138d36060840161253f565b936138fe6138f18660018060a01b03165f5260cc60205260405f2090565b546001600160a01b031690565b6001600160a01b03811615613a60575b90936001600160a01b0390911691613927338414613765565b6001600160a01b038616915f5b61394160a08301836137d7565b9050811015613a56578061396460019261395e60e08601866134c7565b9061380c565b86867f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce318c6139c26139a58260018060a01b03165f5260cd60205260405f2090565b6139ae8761253f565b60018060a01b03165f5260205260405f2090565b54613a076139fe6139e36020890135936139dd81861161381c565b84612223565b6001600160a01b039094165f90815260cd6020526040902090565b6139ae8861253f565b55613a1b818a613a168861253f565b614b05565b613a268c519561253f565b604080519687526001600160a01b0391909116602087015285015260a086901b869003881693606090a401613934565b5050505050509050565b508461390e565b604081015163ffffffff169081613a8757505061ffff60cb5460e01c1690565b61ffff914210613a9957602001511690565b511690565b60cb54907faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b36040805163ffffffff8560a01c16815263ffffffff84166020820152a163ffffffff60a01b1990911660a09190911b63ffffffff60a01b161760cb55565b15613b0857565b60405162461bcd60e51b815260206004820152603060248201525f80516020614f7483398151915260448201526f1c9bdbdd081a5cc8191a5cd8589b195960821b6064820152608490fd5b15613b5a57565b60405162461bcd60e51b815260206004820152603660248201525f80516020614f748339815191526044820152751c9bdbdd081b9bdd081858dd1a5d985d1959081e595d60521b6064820152608490fd5b15613bb257565b60405162461bcd60e51b815260206004820152604c60248201525f80516020614f7483398151915260448201527f746f6b656e496e646963657320616e6420746f6b656e50726f6f6673206c656e60648201526b0cee8d040dad2e6dac2e8c6d60a31b608482015260a490fd5b15613c2657565b60405162461bcd60e51b815260206004820152604a60248201525f80516020614f7483398151915260448201527f746f6b656e5472656550726f6f667320616e64206c6561766573206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a490fd5b903590601e1981360301821215610ee257018035906001600160401b038211613501576020019181360383136134fc57565b91908110156122605760051b0190565b90821015612260576109f29160051b810190613c91565b919091613d05613d006118846060860151151590565b613b01565b613d24613d1c611dad604086015163ffffffff1690565b421015613b53565b60a0810190613d3382826137d7565b9050613d5060c0830191613d4783856137d7565b91905014613bab565b613da0613d5d82846137d7565b969050613d7b60e0850197613d7289876134c7565b91905014613c1f565b51613d8860208501612c18565b613d956040860186613c91565b916060870193614bcb565b6080820135925f5b613db282856137d7565b9050811015613e0f5780613e098561395e8a613e0285613df981613df38c8f61366860019d8f613de790613ded94508d6137d7565b90613cc3565b986137d7565b90613cd3565b9490938c6134c7565b928a614cfb565b01613da8565b50505050509050565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60cb546001600160a01b0391821691829082167f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb5f80a36001600160a01b0319161760cb55565b15613eae57565b60405162461bcd60e51b815260206004820152605460248201525f80516020614fb483398151915260448201527f61746f724469726563746564526577617264735375626d697373696f6e3a206e6064820152731bc81bdc195c985d1bdc9cc81c995dd85c99195960621b608482015260a490fd5b15613f2a57565b60405162461bcd60e51b815260206004820152605b60248201525f80516020614fb483398151915260448201525f80516020614f9483398151915260648201527f70657261746f722063616e6e6f74206265203020616464726573730000000000608482015260a490fd5b15613f9c57565b60405162461bcd60e51b815260206004820152607860248201525f80516020614fb483398151915260448201525f80516020614f9483398151915260648201527f70657261746f7273206d75737420626520696e20617363656e64696e67206f7260848201527f64657220746f2068616e646c65206475706c696361746573000000000000000060a482015260c490fd5b1561403457565b60405162461bcd60e51b815260206004820152606160248201525f80516020614fb483398151915260448201525f80516020614f9483398151915260648201527f70657261746f722072657761726420616d6f756e742063616e6e6f74206265206084820152600360fc1b60a482015260c490fd5b156140b057565b60405162461bcd60e51b815260206004820152607660248201525f80516020614fb483398151915260448201525f80516020614f9483398151915260648201527f70657261746f722d64697265637465642072657761726473207375626d697373608482015275696f6e206973206e6f7420726574726f61637469766560501b60a482015260c490fd5b9061414582806134c7565b909261416c606082019461415886612c18565b608084019461416686612c18565b926147be565b604081019061418761417e83836134c7565b90501515613ea7565b5f938493845b61419785856134c7565b905087101561421b576142136001916141f46141b78a61395e8a8a6134c7565b986141da6141d36141c78c61253f565b6001600160a01b031690565b1515613f23565b6141e66141c78b61253f565b90858060a01b031610613f95565b60206141ff8961253f565b9801359061420e82151561402d565b6129cd565b96019561418d565b95509150946123b59350614242925061423661423c91612c18565b91612c18565b90612ae4565b63ffffffff429116106140a9565b60cb54907fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e6040805161ffff8560e01c16815261ffff84166020820152a161ffff60e01b1990911660e09190911b61ffff60e01b161760cb55565b610c969291815463ffffffff8160201c16804210156142f9575b5050815467ffffffffffff0000191660109190911b63ffff0000161760209290921b67ffffffff0000000016919091179055565b61431d575060cb54825461ffff191660e09190911c61ffff161782555b5f806142c5565b825461ffff191660109190911c61ffff16178255614316565b6001600160401b03811161218157601f01601f191660200190565b600a60206040516143636040826121a1565b828152016922b4b3b2b72630bcb2b960b11b81522060405160208101917f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866835260408201524660608201523060808201526080815261258c60a0826121a1565b156143ca57565b60405162461bcd60e51b815260206004820152604660248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a206e6f207374726174656769606482015265195cc81cd95d60d21b608482015260a490fd5b1561443857565b60405162461bcd60e51b815260206004820152605a60248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a206475726174696f6e20657860648201527f6365656473204d41585f524557415244535f4455524154494f4e000000000000608482015260a490fd5b9063ffffffff169081156144ce5763ffffffff160690565b634e487b7160e01b5f52601260045260245ffd5b156144e957565b60405162461bcd60e51b815260206004820152607060248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a206475726174696f6e206d7560648201527f73742062652061206d756c7469706c65206f662043414c43554c4154494f4e5f60848201526f494e54455256414c5f5345434f4e445360801b60a482015260c490fd5b1561458757565b60405162461bcd60e51b815260206004820152607660248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a20737461727454696d65737460648201527f616d70206d7573742062652061206d756c7469706c65206f662043414c43554c6084820152754154494f4e5f494e54455256414c5f5345434f4e445360501b60a482015260c490fd5b1561462b57565b60405162461bcd60e51b815260206004820152605760248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a20737461727454696d65737460648201527f616d7020746f6f2066617220696e207468652070617374000000000000000000608482015260a490fd5b156146b057565b60405162461bcd60e51b815260206004820152605060248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a20696e76616c69642073747260648201526f185d1959de4818dbdb9cda59195c995960821b608482015260a490fd5b1561472857565b60405162461bcd60e51b815260206004820152606f60248201525f80516020614fd483398151915260448201527f6f6e526577617264735375626d697373696f6e3a20737472617465676965732060648201527f6d75737420626520696e20617363656e64696e67206f7264657220746f20686160848201526e6e646c65206475706c69636174657360881b60a482015260c490fd5b9291614857614851611dad61489e94956147d98715156143c3565b61481163ffffffff7f00000000000000000000000000000000000000000000000000000000000000001663ffffffff83161115614431565b61484b63ffffffff6148447f000000000000000000000000000000000000000000000000000000000000000080946144b6565b16156144e2565b846144b6565b15614580565b63ffffffff614888817f00000000000000000000000000000000000000000000000000000000000000001642612223565b91168091111590816149a3575b50929192614624565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316915f90815b8183106148db575050505050565b6148ee6148e984848761380c565b61253f565b90853b156106d45760405163198f077960e21b81526001600160a01b03831660048201526020816024818a5afa9283156106cf57600193614957925f91614985575b50801561495f575b614941906146a9565b838060a01b03168092848060a01b031610614721565b9201916148cd565b5060a084901b849003811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac014614938565b61499d915060203d81116107a75761079981836121a1565b5f614930565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001611155f614895565b156149db57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b60018060a01b03169060405190614a4b6040836121a1565b602082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020830152823b15614ac0575f81614a9b948260208195519301915af1614a95614ee9565b90614f18565b805180614aa6575050565b81602080614abb93610c969501019101612422565b6149d4565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610c96916137606064836121a1565b929192614b4c82614336565b91614b5a60405193846121a1565b829481845281830111614b76578281602093845f960137010152565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b9063ffffffff9094939294169260018360051c1b841015614c8457614c0394614bf6614bfe92612549565b933691614b40565b614e03565b15614c0a57565b60405162461bcd60e51b815260206004820152604660248201527f52657761726473436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e657220636c61696d60648201526510383937b7b360d11b608482015260a490fd5b60405162461bcd60e51b815260206004820152604360248201527f52657761726473436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e65724c656166496e6064820152620c8caf60eb1b608482015260a490fd5b9063ffffffff9094939294169260018360051c1b841015614d9857614d2694614bf6614bfe926131b8565b15614d2d57565b60405162461bcd60e51b815260206004820152603f60248201527f52657761726473436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e20636c61696d2070726f6f66006064820152608490fd5b60405162461bcd60e51b815260206004820152603c60248201527f52657761726473436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e4c656166496e646578000000006064820152608490fd5b93909291601f855116614e6a5791906020925b85518411614e615760018316614e47575f5282850151602052614e4060405f209260011c936129bf565b9291614e16565b838601515f52602052614e4060405f209260011c936129bf565b92509350501490565b60405162461bcd60e51b815260206004820152604b60248201527f4d65726b6c652e70726f63657373496e636c7573696f6e50726f6f664b65636360448201527f616b3a2070726f6f66206c656e6774682073686f756c642062652061206d756c60648201526a3a34b836329037b310199960a91b608482015260a490fd5b3d15614f13573d90614efa82614336565b91614f0860405193846121a1565b82523d5f602084013e565b606090565b90919015614f24575090565b815115614f345750805190602001fd5b604460209160405192839162461bcd60e51b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fdfe52657761726473436f6f7264696e61746f722e5f636865636b436c61696d3a2061746f724469726563746564526577617264735375626d697373696f6e3a206f52657761726473436f6f7264696e61746f722e5f76616c69646174654f70657252657761726473436f6f7264696e61746f722e5f76616c6964617465436f6d6da26469706673582212202687d895e89c31be7e74a79f21e76d31f3d052cbc01c4950d791497f5adeb8ac64736f6c634300081a0033";

type RewardsCoordinatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsCoordinatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsCoordinator__factory extends ContractFactory {
  constructor(...args: RewardsCoordinatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delegationManager: string,
    _strategyManager: string,
    _CALCULATION_INTERVAL_SECONDS: BigNumberish,
    _MAX_REWARDS_DURATION: BigNumberish,
    _MAX_RETROACTIVE_LENGTH: BigNumberish,
    _MAX_FUTURE_LENGTH: BigNumberish,
    __GENESIS_REWARDS_TIMESTAMP: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<RewardsCoordinator> {
    return super.deploy(
      _delegationManager,
      _strategyManager,
      _CALCULATION_INTERVAL_SECONDS,
      _MAX_REWARDS_DURATION,
      _MAX_RETROACTIVE_LENGTH,
      _MAX_FUTURE_LENGTH,
      __GENESIS_REWARDS_TIMESTAMP,
      overrides || {}
    ) as Promise<RewardsCoordinator>;
  }
  override getDeployTransaction(
    _delegationManager: string,
    _strategyManager: string,
    _CALCULATION_INTERVAL_SECONDS: BigNumberish,
    _MAX_REWARDS_DURATION: BigNumberish,
    _MAX_RETROACTIVE_LENGTH: BigNumberish,
    _MAX_FUTURE_LENGTH: BigNumberish,
    __GENESIS_REWARDS_TIMESTAMP: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delegationManager,
      _strategyManager,
      _CALCULATION_INTERVAL_SECONDS,
      _MAX_REWARDS_DURATION,
      _MAX_RETROACTIVE_LENGTH,
      _MAX_FUTURE_LENGTH,
      __GENESIS_REWARDS_TIMESTAMP,
      overrides || {}
    );
  }
  override attach(address: string): RewardsCoordinator {
    return super.attach(address) as RewardsCoordinator;
  }
  override connect(signer: Signer): RewardsCoordinator__factory {
    return super.connect(signer) as RewardsCoordinator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsCoordinatorInterface {
    return new utils.Interface(_abi) as RewardsCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsCoordinator {
    return new Contract(address, _abi, signerOrProvider) as RewardsCoordinator;
  }
}
