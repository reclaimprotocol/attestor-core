/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardsCoordinator,
  RewardsCoordinatorInterface,
  IRewardsCoordinatorTypes,
} from "../RewardsCoordinator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType:
          "struct IRewardsCoordinatorTypes.RewardsCoordinatorConstructorParams",
        components: [
          {
            name: "delegationManager",
            type: "address",
            internalType: "contract IDelegationManager",
          },
          {
            name: "strategyManager",
            type: "address",
            internalType: "contract IStrategyManager",
          },
          {
            name: "allocationManager",
            type: "address",
            internalType: "contract IAllocationManager",
          },
          {
            name: "pauserRegistry",
            type: "address",
            internalType: "contract IPauserRegistry",
          },
          {
            name: "permissionController",
            type: "address",
            internalType: "contract IPermissionController",
          },
          {
            name: "CALCULATION_INTERVAL_SECONDS",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "MAX_REWARDS_DURATION",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "MAX_RETROACTIVE_LENGTH",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "MAX_FUTURE_LENGTH",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "GENESIS_REWARDS_TIMESTAMP",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "CALCULATION_INTERVAL_SECONDS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "GENESIS_REWARDS_TIMESTAMP",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FUTURE_LENGTH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_RETROACTIVE_LENGTH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_REWARDS_DURATION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activationDelay",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allocationManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAllocationManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "beaconChainETHStrategy",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateEarnerLeafHash",
    inputs: [
      {
        name: "leaf",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
        components: [
          {
            name: "earner",
            type: "address",
            internalType: "address",
          },
          {
            name: "earnerTokenRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "calculateTokenLeafHash",
    inputs: [
      {
        name: "leaf",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "cumulativeEarnings",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "checkClaim",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType:
              "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimerFor",
    inputs: [
      {
        name: "earner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinatorTypes.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedOperatorSetRewardsSubmission",
    inputs: [
      {
        name: "operatorSet",
        type: "tuple",
        internalType: "struct OperatorSet",
        components: [
          {
            name: "avs",
            type: "address",
            internalType: "address",
          },
          {
            name: "id",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinatorTypes.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createRewardsForAllEarners",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createRewardsForAllSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cumulativeClaimed",
    inputs: [
      {
        name: "earner",
        type: "address",
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    outputs: [
      {
        name: "totalClaimed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currRewardsCalculationEndTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultOperatorSplitBips",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "delegationManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDelegationManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "disableRoot",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCurrentClaimableDistributionRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentDistributionRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDistributionRootAtIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDistributionRootsLength",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorAVSSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorPISplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorSetSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSet",
        type: "tuple",
        internalType: "struct OperatorSet",
        components: [
          {
            name: "avs",
            type: "address",
            internalType: "address",
          },
          {
            name: "id",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRootIndexFromHash",
    inputs: [
      {
        name: "rootHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_rewardsUpdater",
        type: "address",
        internalType: "address",
      },
      {
        name: "_activationDelay",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_defaultSplitBips",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAVSRewardsSubmissionHash",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorDirectedAVSRewardsSubmissionHash",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorDirectedOperatorSetRewardsSubmissionHash",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsForAllSubmitter",
    inputs: [
      {
        name: "submitter",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsSubmissionForAllEarnersHash",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsSubmissionForAllHash",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "valid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "permissionController",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPermissionController",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processClaim",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct IRewardsCoordinatorTypes.RewardsMerkleClaim",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType:
              "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "processClaims",
    inputs: [
      {
        name: "claims",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinatorTypes.RewardsMerkleClaim[]",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType:
              "struct IRewardsCoordinatorTypes.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsUpdater",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setActivationDelay",
    inputs: [
      {
        name: "_activationDelay",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "earner",
        type: "address",
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultOperatorSplit",
    inputs: [
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorAVSSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorPISplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorSetSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSet",
        type: "tuple",
        internalType: "struct OperatorSet",
        components: [
          {
            name: "avs",
            type: "address",
            internalType: "address",
          },
          {
            name: "id",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsForAllSubmitter",
    inputs: [
      {
        name: "_submitter",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newValue",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsUpdater",
    inputs: [
      {
        name: "_rewardsUpdater",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "strategyManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStrategyManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submissionNonce",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submitRoot",
    inputs: [
      {
        name: "root",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "rewardsCalculationEndTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AVSRewardsSubmissionCreated",
    inputs: [
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ActivationDelaySet",
    inputs: [
      {
        name: "oldActivationDelay",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "newActivationDelay",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ClaimerForSet",
    inputs: [
      {
        name: "earner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldClaimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultOperatorSplitBipsSet",
    inputs: [
      {
        name: "oldDefaultOperatorSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newDefaultOperatorSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributionRootDisabled",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributionRootSubmitted",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "root",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsCalculationEndTimestamp",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorAVSSplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorAVSSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorAVSSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorDirectedAVSRewardsSubmissionCreated",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "operatorDirectedRewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType:
          "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinatorTypes.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorDirectedOperatorSetRewardsSubmissionCreated",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "operatorSet",
        type: "tuple",
        indexed: false,
        internalType: "struct OperatorSet",
        components: [
          {
            name: "avs",
            type: "address",
            internalType: "address",
          },
          {
            name: "id",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "operatorDirectedRewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType:
          "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinatorTypes.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorPISplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorPISplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorPISplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorSetSplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorSet",
        type: "tuple",
        indexed: false,
        internalType: "struct OperatorSet",
        components: [
          {
            name: "avs",
            type: "address",
            internalType: "address",
          },
          {
            name: "id",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorSetSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorSetSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsClaimed",
    inputs: [
      {
        name: "root",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "earner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "contract IERC20",
      },
      {
        name: "claimedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsForAllSubmitterSet",
    inputs: [
      {
        name: "rewardsForAllSubmitter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldValue",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
      {
        name: "newValue",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsSubmissionForAllCreated",
    inputs: [
      {
        name: "submitter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsSubmissionForAllEarnersCreated",
    inputs: [
      {
        name: "tokenHopper",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsUpdaterSet",
    inputs: [
      {
        name: "oldRewardsUpdater",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRewardsUpdater",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AmountExceedsMax",
    inputs: [],
  },
  {
    type: "error",
    name: "AmountIsZero",
    inputs: [],
  },
  {
    type: "error",
    name: "CurrentlyPaused",
    inputs: [],
  },
  {
    type: "error",
    name: "DurationExceedsMax",
    inputs: [],
  },
  {
    type: "error",
    name: "DurationIsZero",
    inputs: [],
  },
  {
    type: "error",
    name: "EarningsNotGreaterThanClaimed",
    inputs: [],
  },
  {
    type: "error",
    name: "InputAddressZero",
    inputs: [],
  },
  {
    type: "error",
    name: "InputArrayLengthMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InputArrayLengthZero",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAddressZero",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidCalculationIntervalSecondsRemainder",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidClaimProof",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidDurationRemainder",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidEarner",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidEarnerLeafIndex",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidGenesisRewardsTimestampRemainder",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidNewPausedStatus",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidOperatorSet",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPermissions",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidProofLength",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRoot",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRootIndex",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidStartTimestampRemainder",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTokenLeafIndex",
    inputs: [],
  },
  {
    type: "error",
    name: "NewRootMustBeForNewCalculatedPeriod",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyPauser",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyUnpauser",
    inputs: [],
  },
  {
    type: "error",
    name: "OperatorsNotInAscendingOrder",
    inputs: [],
  },
  {
    type: "error",
    name: "PreviousSplitPending",
    inputs: [],
  },
  {
    type: "error",
    name: "RewardsEndTimestampNotElapsed",
    inputs: [],
  },
  {
    type: "error",
    name: "RootAlreadyActivated",
    inputs: [],
  },
  {
    type: "error",
    name: "RootDisabled",
    inputs: [],
  },
  {
    type: "error",
    name: "RootNotActivated",
    inputs: [],
  },
  {
    type: "error",
    name: "SplitExceedsMax",
    inputs: [],
  },
  {
    type: "error",
    name: "StartTimestampTooFarInFuture",
    inputs: [],
  },
  {
    type: "error",
    name: "StartTimestampTooFarInPast",
    inputs: [],
  },
  {
    type: "error",
    name: "StrategiesNotInAscendingOrder",
    inputs: [],
  },
  {
    type: "error",
    name: "StrategyNotWhitelisted",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "SubmissionNotRetroactive",
    inputs: [],
  },
  {
    type: "error",
    name: "UnauthorizedCaller",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6101e0806040523461069257614bf78038038061001b816106df565b928339810190602081830312610642578051906001600160401b0382116105f25701610160818303126105a15760405161016081016001600160401b038111828210176104df5760405281516001600160a01b038116810361059d57815260208201516001600160a01b038116810361059d57602082019081526040830151926001600160a01b038416840361059d57604083019384526060810151916001600160a01b038316830361059d57606084019283526080820151946001600160a01b038616860361059d57608085019586526100f860a08401610704565b60a0860190815261010b60c08501610704565b9060c0870191825261011f60e08601610704565b9260e088019384526101346101008701610704565b94610100890195865261014a6101208801610704565b6101208a0190815261014088015190976001600160401b03821161054c57018b601f820112156104f35780516001600160401b0381116104df57610197601f8201601f19166020016106df565b9b818d5260208d019d6020838501011161048a5763ffffffff808f928f8f610140905f602089879b9a889b9a838a9c01905e85010152015260018060a01b039051169d60018060a01b039051169560018060a01b039051169660018060a01b039051169751169751169751169751169751169760018060a01b03905116801561047b5760805283156104675763ffffffff848906166104585763ffffffff620151808506166104495760a05260c05260e05261010052610120526101405261016052610180526101a052601f81511161040d57519051602082106103fd575b176101c0525f5460ff8160081c166103a85760ff8082160361036e575b6040516144e190816107168239608051818181610af501528181611225015281816114cb015261232b015260a051818181611cae0152611d47015260c051818181610da00152613ff9015260e0518181816107c201528181611a5901528181611dca01526120d80152610100518181816117030152613f700152610120518181816119d20152613f3b015261014051818181610d670152613fbb01526101605181818161056a015261370c015261018051818181610ab6015261410001526101a05181818161106c015261329601526101c0518161117d0152f35b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a180610293565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b5f198260200360031b1b16610276565b60449060405192839163305a27a960e01b8352602060048401525180918160248501528484015e5f828201840152601f01601f19168101030190fd5b63223c7b3960e11b5f5260045ffd5b630e06bd3160e01b5f5260045ffd5b634e487b7160e01b5f52601260045260245ffd5b6339b190bb60e11b5f5260045ffd5b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b5f80fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b6040519190601f01601f191682016001600160401b038111838210176104df57604052565b519063ffffffff8216820361059d5756fe6080604052600436106125f4575f3560e01c806218572c146103fa57806304a0c502146103f55780630ca29899146103f05780630e9a53cf146103eb5780630eb38345146103e6578063131433b4146103e1578063136439dd146103dc578063149bc872146103d75780632b9f64a4146103d257806336af41fa146103cd57806337838ed0146103c857806339b70e38146103c35780633a8c0786146103be5780633ccc861d146103b95780633efe1db6146103b45780634596021c146103af5780634657e26a146103aa5780634b943960146103a55780634d18cc35146103a057806354fd4d501461039b57806358baaa3e14610396578063595c6a67146103915780635ac86ab71461038c5780635c975abb146103875780635e9d83481461038257806363f6a7981461037d5780636d21117e14610378578063715018a6146103735780637b8f8b051461036e578063863cb9a914610369578063865c695314610364578063886f11951461035f5780638da5cb5b1461035a5780639104c319146103555780639be3d4e4146103505780639cb9a5fa1461034b5780639d45c281146103465780639de4b35f14610341578063a0169ddd1461033c578063a50a1d9c14610337578063aebd8bae14610332578063b3dbb0e01461032d578063bb7e451f14610328578063bf21a8aa14610323578063c46db6061461031e578063ca8aa7c714610319578063dcbb03b314610314578063de02e5031461030f578063e063f81f1461030a578063e810ce2114610305578063ea4d3c9b14610300578063ed71e6a2146102fb578063f22cef85146102f6578063f2f07ab4146102f1578063f2fde38b146102ec578063f6efbb59146102e7578063f74e8eac146102e2578063f8cd8448146102dd578063f96abf2e146102d8578063fabc1cbc146102d3578063fbf1e2c1146102ce578063fce36c7d146102c95763ff9f6cce036125f4576124f0565b612404565b6123dc565b612310565b612236565b612212565b61208a565b611f72565b611ee1565b611e93565b611d2b565b611cdd565b611c99565b611c6d565b611c20565b611bcd565b611a88565b611a44565b6119f6565b6119b6565b61197b565b61187d565b61182f565b6117ff565b611795565b611727565b6116e7565b61158b565b611550565b611522565b6114fa565b6114b6565b611457565b61142a565b61140d565b6113b2565b611364565b611340565b6112e0565b6112c3565b611290565b611213565b6111e6565b61116b565b61111b565b61109b565b611057565b610fc5565b610e84565b610e04565b610dcf565b610d8b565b610d4b565b610c29565b610bb8565b610b8c565b610ada565b610a9a565b610a07565b61099f565b61074a565b61054e565b610504565b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b6001600160a01b0381160361050057565b5f80fd5b3461054957602036600319011261054457600435610521816104ef565b60018060a01b03165f5260d1602052602060ff60405f2054166040519015158152f35b61044f565b6103ff565b34610549575f36600319011261054457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a207374727563742063616c6c6461746120746f6044820152661bc81cda1bdc9d60ca1b6064820152608490fd5b60409060031901126105f457600490565b61058e565b60409060231901126105f457602490565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b9181601f840112156106f1578235916001600160401b038311610698576020808501948460051b01011161069357565b61060a565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b3461054957606036600319011261054457610764366105e3565b6044356001600160401b03811161099a57610783903690600401610663565b919061079d61079761020080606654161490565b15612657565b6107b86107b383356107ae816104ef565b613294565b612677565b6107c0613339565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561099557602060405180926304c1b8eb60e31b825281806108118860048301612795565b03915afa80156109905761082c915f91610961575b506127b0565b5f5b8381106108415761083f6001609755565b005b8061095b61085260019387866128a9565b61087761085e8761266d565b6001600160a01b03165f90815260ce6020526040902090565b54906108828761266d565b6040516108a7816108998587602084019687612b88565b03601f19810183528261272f565b519020877ffff0759ccb371dfb5691798724e70b4fa61cb3bfe730a33ac19fb86a48efc756836108d681613462565b9561091d610910866109036108ea8861266d565b6001600160a01b03165f90815260d76020526040902090565b905f5260205260405f2090565b805460ff19166001179055565b61092681612bc0565b61093261085e8661266d565b55610944604051928392339684612be9565b0390a33090610956602033920161266d565b613597565b0161082e565b610983915060203d602011610989575b61097b818361272f565b810190612750565b5f610826565b503d610971565b6127a5565b61268d565b61049f565b34610549575f366003190112610544576109f96109ba612cdc565b6040519182918291909160608060808301948051845263ffffffff602082015116602085015263ffffffff604082015116604085015201511515910152565b0390f35b8015150361050057565b3461054957604036600319011261054457600435610a24816104ef565b60243590610a31826109fd565b610a396135e0565b60018060a01b0316805f5260d160205260ff60405f205416151582151590827f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c5f80a45f5260d160205260405f209060ff8019835416911515161790555f80f35b34610549575f36600319011261054457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610549576020366003190112610544576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600435813b156109955760206024926040519384809263237dfb4760e11b82523360048301525afa9182156109905761083f92610b59915f91610b6d575b50612d73565b610b6860665482811614612d89565b61366c565b610b86915060203d6020116109895761097b818361272f565b5f610b53565b34610549576040366003190112610544576020610bb0610bab366105e3565b612d9f565b604051908152f35b3461054957602036600319011261054457600435610bd5816104ef565b60018060a01b03165f5260cc602052602060018060a01b0360405f205416604051908152f35b602060031982011261054457600435906001600160401b03821161099a57610c2591600401610663565b9091565b3461054957610c3736610bfb565b90610c49610797600280606654161490565b335f5260d1602052610c6160ff60405f205416612de8565b610c69613339565b5f5b828110610c7c5761083f6001609755565b80610d45610c8d6001938686612dfe565b335f90815260ce60205260409020546040516020810190610cb48161089986863387612e92565b51902090610cc18361369e565b335f90815260d060205260409020610cde90610910908490610903565b610ce781612bc0565b335f90815260ce60205260409020556040517f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf270482339180610d278782612eb6565b0390a46040610d386020830161266d565b9101359030903390613597565b01610c6b565b34610549575f36600319011261054457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610549575f366003190112610544576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610549575f36600319011261054457602063ffffffff60cb5460a01c16604051908152f35b90816101009103126105f45790565b34610549576040366003190112610544576004356001600160401b03811161099a57610e37610e62913690600401610df5565b60243590610e44826104ef565b610e55610797600480606654161490565b610e5d613339565b61379d565b6001609755005b63ffffffff81160361050057565b3590610e8282610e69565b565b3461054957604036600319011261054457602435600435610ea482610e69565b610eb5610797600880606654161490565b60cb5491610ecd336001600160a01b03851614612de8565b63ffffffff81169263ffffffff8160c01c16841115610fb65763ffffffff7fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd0891610f18428710612ec7565b610f9c610f45610f3d610f3060ca5463ffffffff1690565b9360a01c63ffffffff1690565b844216612edd565b94610f77610f51612c0c565b88815263ffffffff8316602082015263ffffffff881660408201525f6060820152612ef7565b60cb805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055565b60405163ffffffff9094168452169180602081015b0390a4005b631ca7e50b60e21b5f5260045ffd5b34610549576040366003190112610544576004356001600160401b03811161099a57610ff5903690600401610663565b60243591611002836104ef565b611013610797600480606654161490565b61101b613339565b3681900360fe1901925f5b83811015610e62578060051b83013590858212156110525761104c83600193860161379d565b01611026565b6127da565b34610549575f366003190112610544576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610549576020366003190112610544576004356110b8816104ef565b60018060a01b03165f5260d56020526109f961110660405f2063ffffffff604051916110e3836126f4565b5461ffff8116835261ffff8160101c16602084015260201c166040820152613952565b60405161ffff90911681529081906020820190565b34610549575f36600319011261054457602063ffffffff60cb5460c01c16604051908152f35b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b34610549575f366003190112610544577f000000000000000000000000000000000000000000000000000000000000000060ff8116601f81116111d7576109f991604051916111bb60408461272f565b6020808452838101919036833783525260405191829182611141565b632cd44ac360e21b5f5260045ffd5b346105495760203660031901126105445761083f60043561120681610e69565b61120e6135e0565b6139dc565b34610549575f366003190112610544577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156109955760206024916040519283809263237dfb4760e11b82523360048301525afa801561099057611288915f91610b6d5750612d73565b61083f613638565b346105495760203660031901126105445760043560ff81168091036105005760016020911b806066541614604051908152f35b34610549575f366003190112610544576020606654604051908152f35b34610549576020366003190112610544576004356001600160401b03811161099a57611313611335913690600401610df5565b61132f611329823561132481610e69565b612c66565b50612c9b565b90613ac4565b602060405160018152f35b34610549575f36600319011261054457602061ffff60cb5460e01c16604051908152f35b3461054957604036600319011261054457600435611381816104ef565b6024359060018060a01b03165f5260cf60205260405f20905f52602052602060ff60405f2054166040519015158152f35b34610549575f366003190112610544576113ca6135e0565b603380546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610549575f36600319011261054457602060ca54604051908152f35b346105495760203660031901126105445761083f60043561144a816104ef565b6114526135e0565b613c31565b346105495760403660031901126105445760206114ad600435611479816104ef565b60243590611486826104ef565b60018060a01b03165f5260cd835260405f209060018060a01b03165f5260205260405f2090565b54604051908152f35b34610549575f366003190112610544576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610549575f366003190112610544576033546040516001600160a01b039091168152602090f35b34610549575f36600319011261054457602060405173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08152f35b34610549575f36600319011261054457611568612c1b565b5060ca545f198101908111611586576109ba6113296109f992612c66565b612bac565b34610549576040366003190112610544576004356115a8816104ef565b6024356001600160401b03811161099a576115c7903690600401610663565b91906115da610797602080606654161490565b6115e66107b383613294565b6115ee613339565b6001600160a01b038216915f5b84811061160c5761083f6001609755565b806116e161161d60019388876128a9565b6001600160a01b0385165f90815260ce602052604090205490604051602081019061164e8161089985878c87612b88565b5190208861165b83613462565b9361167d610910846109038c60018060a01b03165f5260d360205260405f2090565b61168681612bc0565b6001600160a01b038a165f90815260ce60205260409020557ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e0604051806116cf87339583612fe7565b0390a43090610956602033920161266d565b016115fb565b34610549575f36600319011261054457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461054957606036600319011261054457600435611744816104ef565b61174d366105f9565b9060018060a01b03165f5260d660205261177461176f60405f20923690612ffe565b613c78565b5f526020526109f961110660405f2063ffffffff604051916110e3836126f4565b346105495760203660031901126105445761083f6004356117b5816104ef565b33613cd7565b6024359061ffff8216820361050057565b6044359061ffff8216820361050057565b6084359061ffff8216820361050057565b6064359061ffff8216820361050057565b346105495760203660031901126105445760043561ffff811681036105005761083f9061182a6135e0565b613d2f565b346105495760403660031901126105445760043561184c816104ef565b6024359060018060a01b03165f5260d260205260405f20905f52602052602060ff60405f2054166040519015158152f35b346105495760403660031901126105445760043561189a816104ef565b6118a26117bb565b6118b3610797608080606654161490565b6118bf6107b383613294565b7fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f746118fb63ffffffff60cb5460a01c1663ffffffff4216612edd565b9160018060a01b03841693845f5260d560205261194f848361194a61192f60405f2063ffffffff604051916110e3836126f4565b6001600160a01b039095165f90815260d56020526040902090565b613d8a565b6040805163ffffffff909516855261ffff9182166020860152911690830152339180606081015b0390a3005b3461054957602036600319011261054457600435611998816104ef565b60018060a01b03165f5260ce602052602060405f2054604051908152f35b34610549575f36600319011261054457602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461054957604036600319011261054457600435611a13816104ef565b6024359060018060a01b03165f5260d060205260405f20905f52602052602060ff60405f2054166040519015158152f35b34610549575f366003190112610544576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461054957606036600319011261054457600435611aa5816104ef565b602435611ab1816104ef565b611ab96117cc565b611aca610797604080606654161490565b611ad66107b384613294565b7f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae6934611b1263ffffffff60cb5460a01c1663ffffffff4216612edd565b9160018060a01b03851693845f5260d4602052611b93848361194a84611b7e611b63611b518360405f209060018060a01b03165f5260205260405f2090565b63ffffffff604051916110e3836126f4565b6001600160a01b03909c165f90815260d46020526040902090565b9060018060a01b03165f5260205260405f2090565b6040805163ffffffff95909516855261ffff968716602086015291909516908301526001600160a01b039093169233918060608101610fb1565b34610549576020366003190112610544576109f96109ba611329600435611bf2612c1b565b50612c66565b604090600319011261054457600435611c10816104ef565b90602435611c1d816104ef565b90565b3461054957611c5d611b51611c3436611bf8565b9060018060a01b03165f5260d460205260405f209060018060a01b03165f5260205260405f2090565b60405161ffff9091168152602090f35b34610549576020366003190112610544576020611c8b6004356130b1565b63ffffffff60405191168152f35b34610549575f366003190112610544576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461054957604036600319011261054457600435611cfa816104ef565b6024359060018060a01b03165f5260d360205260405f20905f52602052602060ff60405f2054166040519015158152f35b3461054957611d3936611bf8565b611d456107b383613294565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610995576040516336b87bd760e11b81526001600160a01b038416600482015290602090829060249082905afa908115610990575f91611e74575b508015611dc7575b91611dc261083f93613116565b613cd7565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156109955760405163ba1a84e560e01b81526001600160a01b038216600482015292602090849060249082905afa9283156109905761083f93611dc2915f91611e45575b50151591935050611db5565b611e67915060203d602011611e6d575b611e5f818361272f565b810190613107565b5f611e39565b503d611e55565b611e8d915060203d6020116109895761097b818361272f565b5f611dad565b3461054957604036600319011261054457600435611eb0816104ef565b6024359060018060a01b03165f5260d760205260405f20905f52602052602060ff60405f2054166040519015158152f35b3461054957602036600319011261054457600435611efe816104ef565b611f066135e0565b6001600160a01b03811615611f1e5761083f90613be9565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346105495760a036600319011261054457600435611f8f816104ef565b612002602435604435611fa1816104ef565b60643590611fae82610e69565b611fb66117dd565b925f5495611fe8611fd2611fce8960ff9060081c1690565b1590565b8098819961207c575b811561205c575b5061312c565b86611ff9600160ff195f5416175f55565b6120455761318f565b61200857005b61201661ff00195f54165f55565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61205761010061ff00195f5416175f55565b61318f565b303b1591508161206e575b505f611fe2565b60ff1660011490505f612067565b600160ff8216109150611fdb565b34610549576080366003190112610544576004356120a7816104ef565b6120b0366105f9565b6120b86117ee565b6120ca61079761010080606654161490565b6120d66107b384613294565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561099557602060405180936304c1b8eb60e31b825281806121288860048301612795565b03915afa918215610990577f14918b3834ab6752eb2e1b489b6663a67810efb5f56f3944a97ede8ecf1fd9f192612165915f9161096157506127b0565b60cb546121819060a01c63ffffffff1663ffffffff4216612edd565b936119766121cb6121c66121c16121a88560018060a01b03165f5260d660205260405f2090565b6121b561176f368b612ffe565b5f5260205260405f2090565b612fa9565b613952565b926121fb878261194a6121ee8760018060a01b03165f5260d660205260405f2090565b6121b561176f368d612ffe565b60405193849360018060a01b0316973397856131ad565b34610549576040366003190112610544576020610bb0612231366105e3565b6131de565b346105495760203660031901126105445760043561225381610e69565b612264610797600880606654161490565b61227960018060a01b0360cb54163314612de8565b60ca549063ffffffff81169182101561230157612297600191612c66565b500163ffffffff81546122b060ff8260401c1615613225565b60201c164210156122f257805460ff60401b1916600160401b1790557fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e5f80a2005b630c36f66560e21b5f5260045ffd5b6394a8d38960e01b5f5260045ffd5b34610549576020366003190112610544576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600435813b156109955760206004926040519384809263755b36bd60e11b82525afa918215610990575f92612399575b5061083f91612394906001600160a01b0316331461323b565b613251565b91506020823d6020116123d4575b816123b46020938361272f565b810103126105445761239461083f92516123cd816104ef565b925061237b565b3d91506123a7565b34610549575f3660031901126105445760cb546040516001600160a01b039091168152602090f35b346105495761241236610bfb565b90612424610797600180606654161490565b61242c613339565b5f5b82811061243f5761083f6001609755565b806124ea6124506001938686612dfe565b335f90815260ce602052604090205460405160208101906124778161089986863387612e92565b519020906124848361369e565b335f90815260cf602052604090206124a190610910908490610903565b6124aa81612bc0565b335f90815260ce60205260409020556040517f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e6281339180610d278782612eb6565b0161242e565b34610549576124fe36610bfb565b90612510610797601080606654161490565b335f5260d160205261252860ff60405f205416612de8565b612530613339565b5f5b8281106125435761083f6001609755565b806125ee6125546001938686612dfe565b335f90815260ce6020526040902054604051602081019061257b8161089986863387612e92565b519020906125888361369e565b335f90815260d2602052604090206125a590610910908490610903565b6125ae81612bc0565b335f90815260ce60205260409020556040517f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b339180610d278782612eb6565b01612532565b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b1561265e57565b63840a48d560e01b5f5260045ffd5b35611c1d816104ef565b1561267e57565b63932d94f760e01b5f5260045ffd5b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b0382111761270f57604052565b6126e0565b608081019081106001600160401b0382111761270f57604052565b90601f801991011681019081106001600160401b0382111761270f57604052565b908160209103126105445751611c1d816109fd565b63ffffffff602080928035612779816104ef565b6001600160a01b03168552013561278f81610e69565b16910152565b604081019291610e829190612765565b6040513d5f823e3d90fd5b156127b757565b631fb1705560e21b5f5260045ffd5b634e487b7160e01b5f52603260045260245ffd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206f6666736574000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206c656e677468000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f43616c6c64617461207461696c20746f6f2073686f72740000000000000000006044820152606490fd5b91908110156128cb5760051b8101359060be1981360301821215611052570190565b6127c6565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206c656e67746800006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c64617461206163636573732073747269646500006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206f666673657400006044820152606490fd5b9035601e19823603018112156129dd5701602081359101916001600160401b0382116129d8578160061b360383136129d357565b612915565b6128d0565b61295a565b916020908281520191905f905b8082106129fc5750505090565b9091928335612a0a816104ef565b6001600160a01b0316815260208401356001600160601b0381169190829003610500576040816001936020839401520194019201906129ef565b9035601e19823603018112156129dd5701602081359101916001600160401b0382116129d85781360383136129d357565b908060209392818452848401375f828201840152601f01601f1916010190565b9190612ab2612aa4848061299f565b60c0845260c08401916129e2565b906020840135612ac1816104ef565b6001600160a01b0316602082810191909152612ae0604086018661299f565b838503604085015280855293909101925f5b818110612b5457505050612b4684612b20612b136060611c1d979801610e77565b63ffffffff166060850152565b612b3c612b2f60808301610e77565b63ffffffff166080850152565b60a0810190612a44565b9160a0818503910152612a75565b9091936040806001928735612b68816104ef565b848060a01b03168152602088013560208201520195019101919091612af2565b611c1d939260609260018060a01b0316825260208201528160408201520190612a95565b634e487b7160e01b5f52601160045260245ffd5b906001820180921161158657565b906020820180921161158657565b9190820180921161158657565b611c1d9392612bfa82608094612765565b60408201528160608201520190612a95565b60405190610e8260808361272f565b60405190612c2882612714565b5f6060838281528260208201528260408201520152565b8015611586575f190190565b5f1981019190821161158657565b9190820391821161158657565b60ca548110156128cb5760ca5f5260205f209060011b01905f90565b80548210156128cb575f5260205f209060011b01905f90565b90604051612ca881612714565b606060ff6001839580548552015463ffffffff8116602085015263ffffffff8160201c16604085015260401c161515910152565b612ce4612c1b565b5060ca54805b612d0f5750612cf7612c0c565b5f81525f60208201525f60408201525f606082015290565b612d1e61132961132483612c4b565b90612d2f611fce6060840151151590565b80612d4d575b612d4957612d439150612c3f565b80612cea565b5090565b50612d6b612d62604084015163ffffffff1690565b63ffffffff1690565b421015612d35565b15612d7a57565b631d77d47760e21b5f5260045ffd5b15612d9057565b63c61dca5d60e01b5f5260045ffd5b6020813591612dad836104ef565b01356040519060208201925f84526001600160601b03199060601b166021830152603582015260358152612de260558261272f565b51902090565b15612def57565b635c427cd960e01b5f5260045ffd5b91908110156128cb5760051b81013590609e1981360301821215611052570190565b90608063ffffffff81612e44612e36868061299f565b60a0875260a08701916129e2565b946020810135612e53816104ef565b6001600160a01b0316602086015260408181013590860152826060820135612e7a81610e69565b1660608601520135612e8b81610e69565b1691015290565b611c1d939260609260018060a01b0316825260208201528160408201520190612e20565b906020611c1d928181520190612e20565b15612ece57565b6306957c9160e11b5f5260045ffd5b9063ffffffff8091169116019063ffffffff821161158657565b60ca54600160401b81101561270f57806001612f18920160ca5560ca612c82565b919091612f965760606001610e829383518155019163ffffffff60208201511663ffffffff19845416178355612f7563ffffffff604083015116849067ffffffff0000000082549160201b169067ffffffff000000001916179055565b0151815460ff60401b191690151560401b68ff000000000000000016179055565b634e487b7160e01b5f525f60045260245ffd5b90604051612fb6816126f4565b604063ffffffff82945461ffff8116845261ffff8160101c16602085015260201c16910152565b35611c1d81610e69565b604090611c1d939281528160208201520190612a95565b919082604091031261304857604051604081018181106001600160401b0382111761270f5760405260208082948035613036816104ef565b845201359161304483610e69565b0152565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b63ffffffff5f199116019063ffffffff821161158657565b63ffffffff60ca54165b63ffffffff81166130d55763504570e360e01b5f5260045ffd5b816130e261132483613099565b5054146130fd5763ffffffff168015611586575f19016130bb565b611c1d9150613099565b90816020910312610544575190565b1561311d57565b63fb494ea160e01b5f5260045ffd5b1561313357565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b61182a9261145261120e926131a8610e8298979561366c565b613be9565b929361ffff8092969563ffffffff6080956131cc8860a081019b612765565b16604087015216606085015216910152565b60208135916131ec836104ef565b0135604051906020820192600160f81b84526001600160601b03199060601b166021830152603582015260358152612de260558261272f565b1561322c57565b631b14174b60e01b5f5260045ffd5b1561324257565b63794821ff60e01b5f5260045ffd5b613262606654198219811614612d89565b806066556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561099557604051631beb2b9760e31b81526001600160a01b0390911660048201523360248201523060448201525f80356001600160e01b03191660648301529091602091839160849183915af1908115610990575f91613320575090565b611c1d915060203d6020116109895761097b818361272f565b60026097541461334a576002609755565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b903590601e198136030182121561105257018035906001600160401b0382116133c957602001918160061b360383136133c457565b612864565b61281f565b156133d557565b63796cc52560e01b5f5260045ffd5b156133eb57565b63150358a160e21b5f5260045ffd5b91908110156128cb5760061b0190565b1561341157565b630863a45360e11b5f5260045ffd5b1561342757565b6310fb47f160e31b5f5260045ffd5b1561343d57565b6310eb483f60e21b5f5260045ffd5b1561345357565b63070b5a6f60e21b5f5260045ffd5b906134cd916134db613474828061338f565b60608401959161349b9061348788612fdd565b608087019361349585612fdd565b92613f0c565b6134c76134c160408601976134bc6134b38a8961338f565b905015156133ce565b612fdd565b91612fdd565b90612edd565b63ffffffff429116106133e4565b5f928391825b6134eb838361338f565b90508410156135765761356d60019161354e6135118761350b888861338f565b906133fa565b9161353461352d6135218561266d565b6001600160a01b031690565b151561340a565b6135406135218461266d565b90858060a01b031610613420565b613567602082013591613562831515613436565b61266d565b97612bdc565b930192946134e1565b5050505090611c1d6f4b3b4ca85a86c47a098a223fffffffff82111561344c565b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610e82916135db60848361272f565b614187565b6033546001600160a01b031633036135f457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b5f196066556040515f1981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2565b806066556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2565b6136fc6f4b3b4ca85a86c47a098a223fffffffff60406136e8936136c2818061338f565b9590606083013580976136d482610e69565b6080850135926136e384610e69565b613f0c565b01356136f5811515613436565b111561344c565b61370581610e69565b63ffffffff7f0000000000000000000000000000000000000000000000000000000000000000164201908142116115865763ffffffff161161374357565b637ee2b44360e01b5f5260045ffd5b903590601e198136030182121561105257018035906001600160401b0382116133c957602001918160051b360383136133c457565b1561378e57565b63aa385e8160e01b5f5260045ffd5b906137ad61132961132484612fdd565b906137b88284613ac4565b6137c46060840161266d565b936137ef6137e28660018060a01b03165f5260cc60205260405f2090565b546001600160a01b031690565b6001600160a01b0381161561394b575b90936001600160a01b0390911691613818338414612de8565b6001600160a01b038616915f5b61383260a0830183613752565b9050811015613941578061384f60019261350b60e086018661338f565b86867f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce318c6138ad6138908260018060a01b03165f5260cd60205260405f2090565b6138998761266d565b60018060a01b03165f5260205260405f2090565b546138f26138e96138ce6020890135936138c8818611613787565b84612c59565b6001600160a01b039094165f90815260cd6020526040902090565b6138998861266d565b55613906818a6139018861266d565b61423f565b6139118c519561266d565b604080519687526001600160a01b0391909116602087015285015260a086901b869003881693606090a401613825565b5050505050509050565b50846137ff565b604081015163ffffffff1680158015613999575b1561397a57505060cb5460e01c61ffff1690565b63ffffffff164210613991576020015161ffff1690565b5161ffff1690565b5061ffff806139aa845161ffff1690565b16148015613966575063ffffffff81164210613966565b6001600160401b03811161270f57601f01601f191660200190565b60cb54907faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b36040805163ffffffff8560a01c16815263ffffffff84166020820152a163ffffffff60a01b1990911660a09190911b63ffffffff60a01b161760cb55565b15613a4657565b631437a2bb60e31b5f5260045ffd5b15613a5c57565b6343714afd60e01b5f5260045ffd5b903590601e198136030182121561105257018035906001600160401b0382116133c9576020019181360383136133c457565b91908110156128cb5760051b0190565b908210156128cb57610c259160051b810190613a6b565b919091613adf613ada611fce6060860151151590565b613225565b613afe613af6612d62604086015163ffffffff1690565b421015613a3f565b60a0810190613b0d8282613752565b9050613b2a60c0830191613b218385613752565b91905014613a55565b613b71613b378284613752565b969050613b4c60e0850197613b21898761338f565b51613b5960208501612fdd565b613b666040860186613a6b565b91606087019361431b565b6080820135925f5b613b838285613752565b9050811015613be05780613bda8561350b8a613bd385613bca81613bc48c8f6134bc60019d8f613bb890613bbe94508d613752565b90613a9d565b98613752565b90613aad565b9490938c61338f565b928a614366565b01613b79565b50505050509050565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60cb546001600160a01b0391821691829082167f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb5f80a36001600160a01b0319161760cb55565b602081519101516040519060208201926001600160601b03199060601b16835263ffffffff60a01b9060a01b16603482015260208152613cb960408261272f565b5190519060208110613cc9575090565b5f199060200360031b1b1690565b6001600160a01b039081165f81815260cc6020526040812080546001600160a01b03198116958516958617909155909216917fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129080a4565b60cb54907fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e6040805161ffff8560e01c16815261ffff84166020820152a161ffff60e01b1990911660e09190911b61ffff60e01b161760cb55565b91909161271061ffff841611613e3757805463ffffffff8160201c16421115613e2857610e8293613ded91602081901c63ffffffff16613e0f5750825461ffff191661ffff1783555b825463ffff0000191660109190911b63ffff000016178255565b9067ffffffff0000000082549160201b169067ffffffff000000001916179055565b835461ffff191660109190911c61ffff16178355613dd3565b637b1e25c560e01b5f5260045ffd5b63891c63df60e01b5f5260045ffd5b15613e4d57565b630dd0b9f560e21b5f5260045ffd5b9063ffffffff16908115613e745763ffffffff160690565b634e487b7160e01b5f52601260045260245ffd5b15613e8f57565b63ee66470560e01b5f5260045ffd5b15613ea557565b63cb3f434d60e01b5f5260045ffd5b15613ebb57565b633c1a94f160e21b5f5260045ffd5b15613ed157565b63041aa75760e11b5f5260045ffd5b15613ee757565b632efd965160e11b5f5260045ffd5b15613efd57565b63dfad9ca160e01b5f5260045ffd5b9291613fb0613faa612d62613ff79495613f278715156133ce565b613fa463ffffffff8216613f6363ffffffff7f000000000000000000000000000000000000000000000000000000000000000016821115613e46565b613f9d63ffffffff613f967f00000000000000000000000000000000000000000000000000000000000000008096613e5c565b1615613e88565b1515613e9e565b84613e5c565b15613eb4565b63ffffffff613fe1817f00000000000000000000000000000000000000000000000000000000000000001642612c59565b91168091111590816140f7575b50929192613eca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316915f90815b818310614034575050505050565b6140426135628484876133fa565b90853b156109955760405163198f077960e21b81526001600160a01b03831660048201526020816024818a5afa928315610990576001936140ab925f916140d9575b5080156140b3575b61409590613ee0565b838060a01b03168092848060a01b031610613ef6565b920191614026565b5060a084901b849003811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac01461408c565b6140f1915060203d81116109895761097b818361272f565b5f614084565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001611155f613fee565b1561412f57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b610e82916142099160018060a01b03165f80604051936141a860408661272f565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af13d15614237573d916141ed836139c1565b926141fb604051948561272f565b83523d5f602085013e614416565b805190811591821561421d575b5050614128565b6142309250602080918301019101612750565b5f80614216565b606091614416565b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610e82916135db60648361272f565b929192614286826139c1565b91614294604051938461272f565b8294818452818301116142b0578281602093845f960137010152565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b1561430c57565b6369ca16c960e01b5f5260045ffd5b91929063ffffffff169160018260051c1b8310156143585761434e61435394614346610e8297612d9f565b93369161427a565b6143a0565b614305565b62c6c39d60e71b5f5260045ffd5b91929063ffffffff169160018260051c1b8310156143915761434e61435394614346610e82976131de565b63054ff4df60e51b5f5260045ffd5b93909291601f8551166144075791906020925b855184116143fe57600183166143e4575f52828501516020526143dd60405f209260011c93612bce565b92916143b3565b838601515f526020526143dd60405f209260011c93612bce565b92509350501490565b6313717da960e21b5f5260045ffd5b91929015614478575081511561442a575090565b3b156144335790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561448b5750805190602001fd5b60405162461bcd60e51b81529081906144a79060048301611141565b0390fdfea264697066735822122015d9847d6b18277ac3f2990e6431e5c53b08c56884c971148a4a2b902caf978a64736f6c634300081c0033";

type RewardsCoordinatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsCoordinatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsCoordinator__factory extends ContractFactory {
  constructor(...args: RewardsCoordinatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    params: IRewardsCoordinatorTypes.RewardsCoordinatorConstructorParamsStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<RewardsCoordinator> {
    return super.deploy(params, overrides || {}) as Promise<RewardsCoordinator>;
  }
  override getDeployTransaction(
    params: IRewardsCoordinatorTypes.RewardsCoordinatorConstructorParamsStruct,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  override attach(address: string): RewardsCoordinator {
    return super.attach(address) as RewardsCoordinator;
  }
  override connect(signer: Signer): RewardsCoordinator__factory {
    return super.connect(signer) as RewardsCoordinator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsCoordinatorInterface {
    return new utils.Interface(_abi) as RewardsCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsCoordinator {
    return new Contract(address, _abi, signerOrProvider) as RewardsCoordinator;
  }
}
