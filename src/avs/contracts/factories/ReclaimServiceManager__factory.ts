/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReclaimServiceManager,
  ReclaimServiceManagerInterface,
} from "../ReclaimServiceManager";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_avsDirectory",
        type: "address",
        internalType: "contract IAVSDirectory",
      },
      {
        name: "_slashingRegistryCoordinator",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
      {
        name: "_stakeRegistry",
        type: "address",
        internalType: "contract IStakeRegistry",
      },
      {
        name: "rewards_coordinator",
        type: "address",
        internalType: "address",
      },
      {
        name: "allocationManager",
        type: "address",
        internalType: "contract IAllocationManager",
      },
      {
        name: "_permissionController",
        type: "address",
        internalType: "contract IPermissionController",
      },
      {
        name: "_taskManager",
        type: "address",
        internalType: "contract IReclaimTaskManager",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addOperatorToWhitelist",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addPendingAdmin",
    inputs: [
      {
        name: "admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "avsDirectory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinatorTypes.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType:
              "struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinatorTypes.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deregisterOperatorFromAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deregisterOperatorFromOperatorSets",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSetIds",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getOperatorRestakedStrategies",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRestakeableStrategies",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "rewardsInitiator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isOperatorWhitelisted",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerOperatorToAVS",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSignature",
        type: "tuple",
        internalType:
          "struct ISignatureUtilsMixinTypes.SignatureWithSaltAndExpiry",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "salt",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "expiry",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeAdmin",
    inputs: [
      {
        name: "admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeAppointee",
    inputs: [
      {
        name: "appointee",
        type: "address",
        internalType: "address",
      },
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeOperatorFromWhitelist",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removePendingAdmin",
    inputs: [
      {
        name: "pendingAdmin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsInitiator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setAppointee",
    inputs: [
      {
        name: "appointee",
        type: "address",
        internalType: "address",
      },
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsInitiator",
    inputs: [
      {
        name: "newRewardsInitiator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "slashingRegistryCoordinator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ISlashingRegistryCoordinator",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "taskManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IReclaimTaskManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateAVSMetadataURI",
    inputs: [
      {
        name: "_metadataURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "whitelistedOperators",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsInitiatorUpdated",
    inputs: [
      {
        name: "prevRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newRewardsInitiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DelayPeriodNotPassed",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyRegistryCoordinator",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyRewardsInitiator",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyStakeRegistry",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61018080604052346102dc57604051601f612f9838819003918201601f19168301916001600160401b038311848410176102c85780849260e0946040528339810103126102785780516001600160a01b0381168103610274576020820151916001600160a01b0383168303610274576040810151906001600160a01b03821682036102745760608101516001600160a01b0381169290839003610274576080820151926001600160a01b03841684036102745760a0830151926001600160a01b03841684036102745760c00151946001600160a01b03861686036102745760805260c0528460e052610100526101205260a0525f5460ff8160081c1661021f5760ff808216036101e5575b506101405261016052604051612c6e908161032a823960805181818161077f0152818161086b01528181610d8901526110ed015260a0518181816105a301526112ff015260c0518181816101e1015281816109120152610bd3015260e05181818161054a0152818161083b01528181610d6101528181611e7801526125b6015261010051818181611fc501526126150152610120518181816106a901528181610c60015281816113db01528181611705015281816117840152611825015261014051816107f001526101605181818161049d01526113450152f35b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a18261010a565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b5f80fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fdfe60806040526004361015610071575b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b5f5f3560e01c80631785f53c146118015780631fdb0cfd1461176a578063279432eb146116e15780632e8da829146116b457806333cfb7b7146116905780633bc28c8c1461166b578063485cc9551461122b57806352efdca014611163578063630868dc1461111c5780636b3aa72e146110d8578063715018a61461107b5780638da5cb5b1461105357806396d356c514610eca5780639926ee7d14610cc55780639da16d8e14610c3c578063a0169ddd14610baf578063a20b99bf146108d4578063a364f4da1461081f578063a50a640e146107db578063a98fb35514610733578063ba5508801461068f578063c1a8e2c5146104cc578063cf1d6b4214610488578063e481af9d1461045d578063f2fde38b146103cc578063fc299dee146103a45763fce36c7d146101a5575061000e565b3461039f576020366003190112610284576004356001600160401b03811161039a576101d5903690600401611c2b565b91906101df612953565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690825b8481106103365750813b15610331576040519363fce36c7d60e01b855280602486016020600488015252604485019060448160051b8701019280928690609e1983360301905b8483106102945788808b8181808c0381838f5af18015610289576102735750f35b8161027d91611ab2565b6102845780f35b6118fc565b6040513d84823e3d90fd5b9091929394956043198a82030182528635908382121561032c5760208091876001940190608063ffffffff610318826102de6102d0878061251c565b60a0885260a0880191612550565b95898060a01b036102f08983016119b6565b1688870152604081013560408701528361030c60608301611ccb565b16606087015201611ccb565b169101529801920193019190949392610252565b6124d7565b611cdc565b8061036b610352602061034c6001958a88612833565b01612439565b604061035f848a88612833565b01359030903390612976565b61039461037e602061034c848a88612833565b85604061038c858b89612833565b0135916129c1565b0161020c565b61194c565b6118ac565b503461039f57366003190112610284576065546040516001600160a01b039091168152602090f35b503461039f576020366003190112610284576103e661199c565b6103ee612855565b6001600160a01b03811615610409576104069061290b565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461039f57366003190112610284576104846104786125b4565b60405191829182611a15565b0390f35b503461039f57366003190112610284576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461039f576040366003190112610284576104e661199c565b90602435916001600160401b03831161039a573660238401121561068a5782600401359261051384611cb4565b936105216040519586611ab2565b8085526024602086019160051b8301019136831161068557602401905b82821061066d575050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361065e576040519061058582611a83565b6001600160a01b0390811682523060208301908152604083019485527f000000000000000000000000000000000000000000000000000000000000000090911693909190843b1561033157604051636e3492b560e01b815260206004820181905292516001600160a01b03908116602483015293519093166044840152516060606484015280516084840181905260a48401929190910190845b81811061064257505050818394818581819503925af18015610289576102735750f35b825163ffffffff1684526020938401939092019160010161061f565b634394dbdf60e11b8252600482fd5b6020809161067a84611ccb565b81520191019061053e565b611bd2565b611ad3565b503461039f5761069e366119ca565b916106a7612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b1561033157604051630664120160e01b81523060048201526001600160a01b0392831660248201529290911660448301526001600160e01b0319166064820152829182908290818381608481015b03925af18015610289576102735750f35b503461039f576020366003190112610284576004356001600160401b03811161039a573660238201121561068a57610775903690602481600401359101611b47565b61077d612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561033157826107228193829360405194858094819363a98fb35560e01b83526020600484015260248301906122ea565b503461039f57366003190112610284576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461039f5760203660031901126102845761083961199c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361065e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610331576040516351b27a6d60e11b81526001600160a01b03909216600483015282919082908290602490829084905af18015610289576102735750f35b503461039f576020366003190112610284576004356001600160401b03811161039a57610905903690600401611c2b565b610910929192612953565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316825b828110610afa5750803b156103315760405191634e5cd2fd60e11b835280604484013060048601526040602486015252606483019460648260051b8501019181869060be19813603015b8383106109a7578880898181808b0381838e5af18015610289576102735750f35b9091929394606319888203018a5285358281121561032c578301906109dd6109cf838061251c565b60c0845260c0840191612550565b916001600160a01b036109f2602083016119b6565b1660208301526020610a07604083018361251c565b848603604086015280865294909101938c905b808210610aca5750505063ffffffff610a3560608301611ccb565b16606083015263ffffffff610a4c60808301611ccb565b16608083015260a0810135601e198236030181121561032c5701906020823592016001600160401b038311610ac5578236038113610ac05783836020948594938460a0879660019a03910152818452848401378d838284010152601f8019910116010197019a019301919098939298610986565b612492565b61244d565b909194604080600192838060a01b03610ae28a6119b6565b16815260208901356020820152019601920190610a1a565b909291829483955b610b1a610b10858585612353565b604081019061237a565b9050871015610b6a57610b31610b10858585612353565b881015610b56576001916020610b4e928a60061b01013590611dd4565b960195610b02565b634e487b7160e01b86526032600452602486fd5b600192949593919650610ba990610b9381308a610b8e602061034c898d3395612353565b612976565b84610ba4602061034c868a8d612353565b6129c1565b0161093c565b503461039f57602036600319011261028457610bc961199c565b610bd1612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103315760405163a0169ddd60e01b81526001600160a01b03909216600483015282919082908290602490829084905af18015610289576102735750f35b503461039f57602036600319011261028457610c5661199c565b610c5e612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561033157604051634f906cf960e01b81523060048201526001600160a01b03909116602482015282918290829081838160448101610722565b503461039f57604036600319011261028457610cdf61199c565b6024356001600160401b03811161039a5760606003198236030112610e795760405191610d0b83611a83565b81600401356001600160401b038111610e285782013660238201121561068a57610d3f903690602460048201359101611b47565b8352602083019060248301358252604460408501930135835260018060a01b037f0000000000000000000000000000000000000000000000000000000000000000163303610e19577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561033157859485610dfb93819560405197889687958694639926ee7d60e01b865260018060a01b0316600486015260406024860152516060604486015260a48501906122ea565b9151606484015251608483015203925af18015610289576102735750f35b634394dbdf60e11b8552600485fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b503461039f57602036600319011261028457610ee461199c565b610eec612855565b610ef581611d2f565b15610ff0576001600160a01b0316815b60975480821015610fea5782610f1a83611a57565b905460039190911b1c6001600160a01b031614610f3a5750600101610f05565b9091505f198101908111610fd65790610f70610f58610f9493611a57565b905460039190911b1c6001600160a01b031691611a57565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b6097548015610fc2575f1901610fa981611a57565b81549060018060a01b039060031b1b1916905560975580f35b634e487b7160e01b82526031600452602482fd5b634e487b7160e01b83526011600452602483fd5b50505080f35b60405162461bcd60e51b815260206004820152603560248201527f72656d6f76654f70657261746f7246726f6d57686974656c6973743a206f70656044820152741c985d1bdc881b9bdd081dda1a5d195b1a5cdd1959605a1b6064820152608490fd5b503461039f57366003190112610284576033546040516001600160a01b039091168152602090f35b503461039f578060031936011261028457611094612855565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461039f57366003190112610284576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461039f576020366003190112610284576004359060975482101561116057602061114783611a57565b905460405160039290921b1c6001600160a01b03168152f35b80fd5b503461039f5760203660031901126102845761117d61199c565b611185612855565b61118e81611d2f565b6111c957609754600160401b8110156111b55790610f708260016104069401609755611a57565b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b815260206004820152603460248201527f6164644f70657261746f72546f57686974656c6973743a206f70657261746f7260448201527308185b1c9958591e481dda1a5d195b1a5cdd195960621b6064820152608490fd5b503461039f5760403660031901126102845761124561199c565b602435906001600160a01b03821682036116675782549160ff8360081c16159283809461165a575b8015611643575b156115e75760ff1981166001178555836115d6575b5060ff845460081c161561157d576112a36112a89261290b565b6128ad565b6020906040516112b88382611ab2565b8381525f3681378051906001600160401b03821161156957600160401b821161156957839060975483609755808410611508575b500160978552845b8281106114cd5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169050803b15610331576040516334f65bfd60e21b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201819052908590818160448183885af18015610289576114b8575b5050813b15610331578460405163a982182160e01b8152306004820152604060248201526004604482015263544f444f60e01b6064820152818160848183885af18015610289576114a3575b50507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561033157859260848492836040519586948593634a86c03760e11b855230600486015260248501526044840152630130fc2760e51b60648401525af180156102895761148e575b5050611458575080f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff0019835416835560405160018152a180f35b8161149891611ab2565b61028457825f61144e565b816114ad91611ab2565b61028457845f6113d7565b816114c291611ab2565b61028457845f61138b565b81516001600160a01b03167f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff9820155908401906001016112f4565b7f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff901837f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff9015b81811061155b57506112ec565b87815586935060010161154e565b634e487b7160e01b85526041600452602485fd5b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b61ffff19166101011784555f611289565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156112745750600160ff821614611274565b50600160ff82161061126d565b8280fd5b503461039f5760203660031901126102845761040661168861199c565b6112a3612855565b3461039f576020366003190112610284576104846104786116af61199c565b611e76565b3461039f5760203660031901126102845760206116d76116d261199c565b611d2f565b6040519015158152f35b503461039f576020366003190112610284576116fb61199c565b611703612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156103315760405163eb5a4e8760e01b81523060048201526001600160a01b03909116602482015282918290829081838160448101610722565b503461039f57611779366119ca565b91611782612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b1561033157604051634a86c03760e11b81523060048201526001600160a01b0392831660248201529290911660448301526001600160e01b031916606482015282918290829081838160848101610722565b50346118ac5760203660031901126102845761181b61199c565b611823612855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103315760405163268959e560e01b81523060048201526001600160a01b039290921660248301525f908290604490829084905af180156118a157611893575080f35b61189f91505f90611ab2565b005b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b600435906001600160a01b03821682036119b257565b5f80fd5b35906001600160a01b03821682036119b257565b6060906003190112610284576004356001600160a01b03811681036119b257906024356001600160a01b03811681036119b257906044356001600160e01b0319811681036119b25790565b60206040818301928281528451809452019201905f5b818110611a385750505090565b82516001600160a01b0316845260209384019390920191600101611a2b565b609754811015611a6f5760975f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b606081019081106001600160401b03821117611a9e57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f801991011681019081106001600160401b03821117611a9e57604052565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b6001600160401b038111611a9e57601f01601f191660200190565b929192611b5382611b2c565b91611b616040519384611ab2565b829481845281830111611b7d578281602093845f960137010152565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b9181601f8401121561068a578235916001600160401b038311611c5b576020808501948460051b01011161068557565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b6001600160401b038111611a9e5760051b60200190565b359063ffffffff821682036119b257565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b609754905f5b828110611d43575050505f90565b611d4c81611a57565b905460039190911b1c6001600160a01b0390811690831614611d7057600101611d35565b505050600190565b90816020910312610284575160ff811681036119b25790565b90611d9b82611cb4565b611da86040519182611ab2565b8281528092611db9601f1991611cb4565b0190602036910137565b908151811015611a6f570160200190565b91908201809211611de157565b634e487b7160e01b5f52601160045260245ffd5b908160409103126102845760405190604082018281106001600160401b03821117611a9e576040528051906001600160a01b03821682036119b257602091835201516bffffffffffffffffffffffff811681036119b257602082015290565b8051821015611a6f5760209160051b010190565b5f198114611de15760010190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610331576040516309aa152760e11b81526001600160a01b039092166004830152602082602481845afa9182156118a1575f926122b6575b50803b15610331576040519163871ef04960e01b83526004830152602082602481845afa9182156118a1575f92612272575b506001600160c01b038216908115908115612209575b506121ef57805f915b6121ca575061ffff16611f3e81611b2c565b90611f4c6040519283611ab2565b808252611f5b601f1991611b2c565b013660208301375f5f5b82518210806121bf575b15611fbd576001811b84166001600160c01b0316611f96575b611f9190611e68565b611f65565b906001611f919160ff60f81b8460f81b165f1a611fb38287611dc3565b5301919050611f88565b505f939250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690835b815185101561207f576120038583611dc3565b5160f81c833b156103315760405190633ca5a5f560e01b82526004820152602081602481875afa9081156118a1575f9161204d575b5061204590600192611dd4565b940193611ff0565b90506020813d8211612077575b8161206760209383611ab2565b8101031261028457516001612038565b3d915061205a565b61208a919450611d91565b925f905f5b81518110156121b9576120a28183611dc3565b5160f81c843b1561033157604051633ca5a5f560e01b81526004810182905290602082602481895afa9182156118a1575f92612186575b50905f915b8183106120f05750505060010161208f565b909194863b1561033157604080516356e4026d60e11b815260ff841660048201526024810188905290816044818b5afa9182156118a15760019261214f925f91612158575b50838060a01b03905116612149828d611e54565b52611e68565b950191906120de565b612179915060403d811161217f575b6121718183611ab2565b810190611df5565b5f612135565b503d612167565b9091506020813d82116121b1575b816121a160209383611ab2565b810103126102845751905f6120d9565b3d9150612194565b50505050565b506101008110611f6f565b5f198101818111611de15761ffff9116911661ffff8114611de1576001019080611f2c565b50506040516121ff602082611ab2565b5f81525f36813790565b8091503b1561033157602060049160405192838092639aa1653d60e01b82525afa80156118a15760ff915f91612243575b5016155f611f23565b612265915060203d60201161226b575b61225d8183611ab2565b810190611d78565b5f61223a565b503d612253565b9091506020813d6020116122ae575b8161228e60209383611ab2565b8101031261028457516001600160c01b03811681036119b257905f611f0d565b3d9150612281565b9091506020813d6020116122e2575b816122d260209383611ab2565b810103126102845751905f611edb565b3d91506122c5565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206f6666736574000000006044820152606490fd5b9190811015611a6f5760051b8101359060be1981360301821215612375570190565b61230e565b903590601e198136030182121561237557018035906001600160401b0382116123f457602001918160061b360383136123af57565b60405162461bcd60e51b815260206004820152601760248201527f43616c6c64617461207461696c20746f6f2073686f72740000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206c656e677468000000006044820152606490fd5b356001600160a01b03811681036119b25790565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206c656e67746800006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c64617461206163636573732073747269646500006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206f666673657400006044820152606490fd5b9035601e198236030181121561032c5701602081359101916001600160401b038211610ac5578160061b36038313610ac057565b916020908281520191905f905b80821061256a5750505090565b909192833560018060a01b0381168091036119b25781526020840135906bffffffffffffffffffffffff82168092036119b25760408160019360208394015201940192019061255d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561033157604051639aa1653d60e01b8152602081600481855afa80156118a15760ff915f91612814575b501680156121ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316905f9081905b80831061279757506126559150611d91565b925f905f5b843b1561033157604051639aa1653d60e01b8152602081600481895afa80156118a15760ff915f91612779575b50168110156127725760ff8116843b1561033157604051633ca5a5f560e01b81526004810182905290602082602481895afa9182156118a1575f9261273f575b50905f915b8183106126de5750505060010161265a565b909194863b1561033157604080516356e4026d60e11b815260ff841660048201526024810188905290816044818b5afa9182156118a157600192612736925f916121585750838060a01b03905116612149828d611e54565b950191906126cc565b9091506020813d821161276a575b8161275a60209383611ab2565b810103126102845751905f6126c7565b3d915061274d565b5092505050565b612791915060203d811161226b5761225d8183611ab2565b5f612687565b90833b1561033157604051633ca5a5f560e01b815260ff84166004820152602081602481885afa9081156118a1575f916127e2575b506127d990600192611dd4565b92019190612643565b90506020813d821161280c575b816127fc60209383611ab2565b81010312610284575160016127cc565b3d91506127ef565b61282d915060203d60201161226b5761225d8183611ab2565b5f61260b565b9190811015611a6f5760051b81013590609e1981360301821215612375570190565b6033546001600160a01b0316330361286957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606554604080516001600160a01b038084168252841660208201529192917fe11cddf1816a43318ca175bbc52cd0185436e9cbead7c83acc54a73e461717e39190a16001600160a01b03166001600160a01b03199190911617606555565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b6065546001600160a01b0316330361296757565b638e79fdb560e01b5f5260045ffd5b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526129bf916129ba608483611ab2565b612a87565b565b6001600160a01b038116803b1561033157604051636eb1769f60e11b81523060048201526001600160a01b038416602482015290602090829060449082905afa9081156118a1575f91612a53575b506129bf93612a1d91611dd4565b60405163095ea7b360e01b60208201526001600160a01b03909316602484015260448084019190915282526129ba606483611ab2565b90506020813d602011612a7f575b81612a6e60209383611ab2565b8101031261028457516129bf612a0f565b3d9150612a61565b90612b069160018060a01b03165f8060405193612aa5604086611ab2565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af13d15612b97573d91612aea83611b2c565b92612af86040519485611ab2565b83523d5f602085013e612b9b565b8051908115918215612b74575b505015612b1c57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b8192509060209181010312610284576020015180151581036119b2575f80612b13565b6060915b91929015612bfd5750815115612baf575090565b3b15612bb85790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612c105750805190602001fd5b60405162461bcd60e51b815260206004820152908190612c349060248301906122ea565b0390fdfea2646970667358221220cf84c446bd15381c29ed2bc3c5bff5551d0a0874f415e278d29ab20bd351abde64736f6c634300081c0033";

type ReclaimServiceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReclaimServiceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReclaimServiceManager__factory extends ContractFactory {
  constructor(...args: ReclaimServiceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _avsDirectory: string,
    _slashingRegistryCoordinator: string,
    _stakeRegistry: string,
    rewards_coordinator: string,
    allocationManager: string,
    _permissionController: string,
    _taskManager: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ReclaimServiceManager> {
    return super.deploy(
      _avsDirectory,
      _slashingRegistryCoordinator,
      _stakeRegistry,
      rewards_coordinator,
      allocationManager,
      _permissionController,
      _taskManager,
      overrides || {}
    ) as Promise<ReclaimServiceManager>;
  }
  override getDeployTransaction(
    _avsDirectory: string,
    _slashingRegistryCoordinator: string,
    _stakeRegistry: string,
    rewards_coordinator: string,
    allocationManager: string,
    _permissionController: string,
    _taskManager: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _avsDirectory,
      _slashingRegistryCoordinator,
      _stakeRegistry,
      rewards_coordinator,
      allocationManager,
      _permissionController,
      _taskManager,
      overrides || {}
    );
  }
  override attach(address: string): ReclaimServiceManager {
    return super.attach(address) as ReclaimServiceManager;
  }
  override connect(signer: Signer): ReclaimServiceManager__factory {
    return super.connect(signer) as ReclaimServiceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReclaimServiceManagerInterface {
    return new utils.Interface(_abi) as ReclaimServiceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReclaimServiceManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReclaimServiceManager;
  }
}
