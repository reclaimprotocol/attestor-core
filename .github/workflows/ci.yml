name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
      
      - name: Install optional dependencies
        run: npm install koffi

      - name: Run tests
        run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: "!contains(github.event.head_commit.message, 'wip') && !contains(github.event.head_commit.message, 'docs')"
    steps:
      - name: Set up environment
        run: echo -e "${{ secrets.ENV }}" 
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          echo -e "${{ secrets.ENV }}" > .env.production
          
      - name: Set up AWS CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install zip -y
          sudo apt-get install awscli -y
          mkdir ~/.aws/
          touch ~/.aws/credentials
          printf "[default]\nregion=ap-south-1\naws_access_key_id = %s\naws_secret_access_key = %s\n" "${{ secrets.AWS_ACCESS_KEY_ID }}" "${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          touch ~/.aws/config
          
      - name: Deploy to AWS
        run: |
          export BUCKET=elasticbeanstalk-ap-south-1-342772716647
          export APP_NAME=reclaim-protocol
          export ENV_NAME=witness
          export VERSION=${{ github.sha }}
          export FILE=pkg-$(date +%s%N).zip
          zip -r $FILE * .* -x '*.git*'
          aws s3 cp $FILE s3://$BUCKET/$FILE
          aws elasticbeanstalk create-application-version --application-name $APP_NAME --version-label $VERSION --source-bundle S3Bucket="$BUCKET",S3Key="$FILE"
          aws elasticbeanstalk update-environment --application-name $APP_NAME --environment-name $ENV_NAME --version-label $VERSION
