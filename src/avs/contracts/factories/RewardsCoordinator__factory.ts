/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardsCoordinator,
  RewardsCoordinatorInterface,
} from "../RewardsCoordinator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_delegationManager",
        type: "address",
        internalType: "contract IDelegationManager",
      },
      {
        name: "_strategyManager",
        type: "address",
        internalType: "contract IStrategyManager",
      },
      {
        name: "_CALCULATION_INTERVAL_SECONDS",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_MAX_REWARDS_DURATION",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_MAX_RETROACTIVE_LENGTH",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_MAX_FUTURE_LENGTH",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "__GENESIS_REWARDS_TIMESTAMP",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "CALCULATION_INTERVAL_SECONDS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "GENESIS_REWARDS_TIMESTAMP",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_FUTURE_LENGTH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_RETROACTIVE_LENGTH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MAX_REWARDS_DURATION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activationDelay",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "beaconChainETHStrategy",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStrategy",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateEarnerLeafHash",
    inputs: [
      {
        name: "leaf",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
        components: [
          {
            name: "earner",
            type: "address",
            internalType: "address",
          },
          {
            name: "earnerTokenRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "calculateTokenLeafHash",
    inputs: [
      {
        name: "leaf",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "cumulativeEarnings",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "checkClaim",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.RewardsMerkleClaim",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "claimerFor",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createAVSRewardsSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createOperatorDirectedAVSRewardsSubmission",
    inputs: [
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissions",
        type: "tuple[]",
        internalType:
          "struct IRewardsCoordinator.OperatorDirectedRewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createRewardsForAllEarners",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createRewardsForAllSubmission",
    inputs: [
      {
        name: "rewardsSubmissions",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsSubmission[]",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cumulativeClaimed",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currRewardsCalculationEndTimestamp",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "defaultOperatorSplitBips",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "delegationManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IDelegationManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "disableRoot",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "domainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentClaimableDistributionRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentDistributionRoot",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDistributionRootAtIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.DistributionRoot",
        components: [
          {
            name: "root",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "rewardsCalculationEndTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "activatedAt",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "disabled",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDistributionRootsLength",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorAVSSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorPISplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRootIndexFromHash",
    inputs: [
      {
        name: "rootHash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_pauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
      {
        name: "initialPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_rewardsUpdater",
        type: "address",
        internalType: "address",
      },
      {
        name: "_activationDelay",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "_defaultSplitBips",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAVSRewardsSubmissionHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isOperatorDirectedAVSRewardsSubmissionHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsForAllSubmitter",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsSubmissionForAllEarnersHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRewardsSubmissionForAllHash",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "processClaim",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct IRewardsCoordinator.RewardsMerkleClaim",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "processClaims",
    inputs: [
      {
        name: "claims",
        type: "tuple[]",
        internalType: "struct IRewardsCoordinator.RewardsMerkleClaim[]",
        components: [
          {
            name: "rootIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerIndex",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "earnerTreeProof",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "earnerLeaf",
            type: "tuple",
            internalType: "struct IRewardsCoordinator.EarnerTreeMerkleLeaf",
            components: [
              {
                name: "earner",
                type: "address",
                internalType: "address",
              },
              {
                name: "earnerTokenRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
          {
            name: "tokenIndices",
            type: "uint32[]",
            internalType: "uint32[]",
          },
          {
            name: "tokenTreeProofs",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "tokenLeaves",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.TokenTreeMerkleLeaf[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "contract IERC20",
              },
              {
                name: "cumulativeEarnings",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
        ],
      },
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rewardsUpdater",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setActivationDelay",
    inputs: [
      {
        name: "_activationDelay",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setClaimerFor",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDefaultOperatorSplit",
    inputs: [
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorAVSSplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorPISplit",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "split",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPauserRegistry",
    inputs: [
      {
        name: "newPauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsForAllSubmitter",
    inputs: [
      {
        name: "_submitter",
        type: "address",
        internalType: "address",
      },
      {
        name: "_newValue",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRewardsUpdater",
    inputs: [
      {
        name: "_rewardsUpdater",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "strategyManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStrategyManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submissionNonce",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "submitRoot",
    inputs: [
      {
        name: "root",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "rewardsCalculationEndTimestamp",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AVSRewardsSubmissionCreated",
    inputs: [
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinator.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ActivationDelaySet",
    inputs: [
      {
        name: "oldActivationDelay",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "newActivationDelay",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ClaimerForSet",
    inputs: [
      {
        name: "earner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldClaimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DefaultOperatorSplitBipsSet",
    inputs: [
      {
        name: "oldDefaultOperatorSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newDefaultOperatorSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributionRootDisabled",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DistributionRootSubmitted",
    inputs: [
      {
        name: "rootIndex",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "root",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsCalculationEndTimestamp",
        type: "uint32",
        indexed: true,
        internalType: "uint32",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorAVSSplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorAVSSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorAVSSplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorDirectedAVSRewardsSubmissionCreated",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorDirectedRewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "operatorDirectedRewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType:
          "struct IRewardsCoordinator.OperatorDirectedRewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "operatorRewards",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.OperatorReward[]",
            components: [
              {
                name: "operator",
                type: "address",
                internalType: "address",
              },
              {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorPISplitBipsSet",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "activatedAt",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
      {
        name: "oldOperatorPISplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "newOperatorPISplitBips",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PauserRegistrySet",
    inputs: [
      {
        name: "pauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
      {
        name: "newPauserRegistry",
        type: "address",
        indexed: false,
        internalType: "contract IPauserRegistry",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsClaimed",
    inputs: [
      {
        name: "root",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "earner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "contract IERC20",
      },
      {
        name: "claimedAmount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsForAllSubmitterSet",
    inputs: [
      {
        name: "rewardsForAllSubmitter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "oldValue",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
      {
        name: "newValue",
        type: "bool",
        indexed: true,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsSubmissionForAllCreated",
    inputs: [
      {
        name: "submitter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinator.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsSubmissionForAllEarnersCreated",
    inputs: [
      {
        name: "tokenHopper",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "submissionNonce",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "rewardsSubmissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "rewardsSubmission",
        type: "tuple",
        indexed: false,
        internalType: "struct IRewardsCoordinator.RewardsSubmission",
        components: [
          {
            name: "strategiesAndMultipliers",
            type: "tuple[]",
            internalType: "struct IRewardsCoordinator.StrategyAndMultiplier[]",
            components: [
              {
                name: "strategy",
                type: "address",
                internalType: "contract IStrategy",
              },
              {
                name: "multiplier",
                type: "uint96",
                internalType: "uint96",
              },
            ],
          },
          {
            name: "token",
            type: "address",
            internalType: "contract IERC20",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "startTimestamp",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "duration",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RewardsUpdaterSet",
    inputs: [
      {
        name: "oldRewardsUpdater",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRewardsUpdater",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x61018080604052346103c757604051601f61552238819003918201601f19168301916001600160401b038311848410176103b15780849260e094604052833981010312610361578051906001600160a01b038216820361035c5760208101516001600160a01b038116810361035c5761007a60408301610414565b61008660608401610414565b9061009360808501610414565b926100ac60c06100a560a08801610414565b9601610414565b9563ffffffff831680156103465763ffffffff81818a1606166102b5576201518063ffffffff91061661022457610120526101405260805260a05260c05260e0526101005260005460ff8160081c166101cf5760ff80821610610194575b46610160526040516150fc908161042682396080518181816114bb01526148ca015260a0518181816117f0015261488f015260c051818181610b89015261490e015260e05181818161050f01526137040152610100518181816107030152614a5a01526101205181611c26015261014051818181610bc3015261494c015261016051816132120152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a18061010a565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b60405162461bcd60e51b815260206004820152605760248201527f52657761726473436f6f7264696e61746f723a2043414c43554c4154494f4e5f60448201527f494e54455256414c5f5345434f4e4453206d7573742062652061206d756c746960648201527f706c65206f6620534e415053484f545f434144454e4345000000000000000000608482015260a490fd5b60405162461bcd60e51b815260206004820152606060248201527f52657761726473436f6f7264696e61746f723a2047454e455349535f5245574160448201527f5244535f54494d455354414d50206d7573742062652061206d756c7469706c6560648201527f206f662043414c43554c4154494f4e5f494e54455256414c5f5345434f4e4453608482015260a490fd5b634e487b7160e01b600052601260045260246000fd5b600080fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b519063ffffffff8216820361035c5756fe60806040526004361061215c5760003560e01c806218572c1461039b57806304a0c502146103965780630e9a53cf146103915780630eb383451461038c57806310d67a2f14610387578063131433b414610382578063136439dd1461037d578063149bc872146103785780632b9f64a41461037357806336af41fa1461036e57806337838ed01461036957806339b70e38146103645780633a8c07861461035f5780633ccc861d1461035a5780633efe1db6146103555780634596021c146103505780634b9439601461034b5780634d18cc351461034657806358baaa3e14610341578063595c6a671461033c5780635ac86ab7146103375780635c975abb146103325780635e9d83481461032d57806363f6a798146103285780636d21117e14610323578063715018a61461031e5780637b8f8b0514610319578063863cb9a914610314578063865c69531461030f578063886f11951461030a5780638da5cb5b146103055780639104c319146103005780639be3d4e4146102fb5780639cb9a5fa146102f65780639d45c281146102f1578063a0169ddd146102ec578063a50a1d9c146102e7578063aebd8bae146102e2578063b3dbb0e0146102dd578063bb7e451f146102d8578063bf21a8aa146102d3578063c46db606146102ce578063d4540a55146102c9578063dcbb03b3146102c4578063de02e503146102bf578063e063f81f146102ba578063e810ce21146102b5578063ea4d3c9b146102b0578063ed71e6a2146102ab578063f2fde38b146102a6578063f698da25146102a1578063f8cd84481461029c578063f96abf2e14610297578063fabc1cbc14610292578063fbf1e2c11461028d578063fce36c7d146102885763ff9f6cce0361215c57612046565b611f4a565b611f21565b611eb6565b611d77565b611d53565b611d38565b611ca7565b611c55565b611c10565b611be4565b611b73565b611b48565b611991565b611866565b611814565b6117d3565b611796565b611608565b6115b6565b611586565b6114df565b61149e565b61132d565b6112f0565b6112c1565b611298565b61126f565b61120c565b6111df565b6111c1565b611164565b611112565b6110ed565b61108d565b61106f565b61103c565b610fdb565b610fae565b610f87565b610f05565b610e66565b610cb4565b610c28565b610bf2565b610bad565b610b6c565b610a0c565b610854565b610828565b610727565b6106e6565b610635565b61059c565b610533565b6104f2565b6104a6565b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b6001600160a01b038116036104a157565b600080fd5b346104ed5760203660031901126104e8576004356104c381610490565b60018060a01b031660005260d1602052602060ff604060002054166040519015158152f35b6103f0565b6103a0565b346104ed5760003660031901126104e857602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104ed5760003660031901126104e85761058e61054f61233b565b6040519182918291909160608060808301948051845263ffffffff602082015116602085015263ffffffff604082015116604085015201511515910152565b0390f35b801515036104a157565b346104ed5760403660031901126104e8576004356105b981610490565b602435906105c682610592565b6105ce61340d565b60018060a01b03168060005260d160205260ff60406000205416151582151590827f4de6293e668df1398422e1def12118052c1539a03cbfedc145895d48d7685f1c600080a460005260d160205260406000209060ff801983541691151516179055600080f35b346104ed5760203660031901126104e85760043561065281610490565b6065546001600160a01b031690813b156106e15760206004926040519384809263755b36bd60e11b82525afa9182156106dc576106ab926106a6916000916106ad575b506001600160a01b03163314612444565b613465565b005b6106cf915060203d6020116106d5575b6106c78183612210565b810190612420565b38610695565b503d6106bd565b612438565b6123cd565b346104ed5760003660031901126104e857602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104ed5760203660031901126104e8576065546001600160a01b0316600435813b156106e15760206024926040519384809263237dfb4760e11b82523360048301525afa9182156106dc576106ab926107899160009161078e575b506124b8565b612515565b6107b0915060203d6020116107b6575b6107a88183612210565b8101906124a3565b38610783565b503d61079e565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a207374727563742063616c6c6461746120746f6044820152661bc81cda1bdc9d60ca1b6064820152608490fd5b604090600319011261082357600490565b6107bd565b346104ed5760403660031901126104e857602061084c61084736610812565b6125ca565b604051908152f35b346104ed5760203660031901126104e85760043561087181610490565b60018060a01b031660005260cc602052602060018060a01b0360406000205416604051908152f35b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b9181601f84011215610980578235916001600160401b038311610927576020808501948460051b01011161092257565b610899565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b60206003198201126104e857600435906001600160401b038211610a0757610a03916004016108f2565b9091565b610440565b346104ed57610a1a366109d9565b90610a32610a2c600280606654161490565b15612614565b3360005260d1602052610a4c60ff60406000205416612660565b610a5b600260975414156126ec565b600260975560005b828110610a74576106ab6001609755565b80610b66610a856001938686612807565b33600090815260ce60205260409020546040516020810190610abb81610aad86863387612a10565b03601f198101835282612210565b51902090610ac883613692565b33600090815260d060205260409020610afe90610af19084905b90600052602052604060002090565b805460ff19166001179055565b610b0781612a34565b33600090815260ce60205260409020556040517f51088b8c89628df3a8174002c2a034d0152fce6af8415d651b2a4734bf270482339180610b488782612a5d565b0390a46040610b59602083016125c0565b91013590309033906137a8565b01610a63565b346104ed5760003660031901126104e857602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104ed5760003660031901126104e8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346104ed5760003660031901126104e857602063ffffffff60cb5460a01c16604051908152f35b90816101009103126108235790565b346104ed5760403660031901126104e8576004356001600160401b038111610a0757610c5b610c92913690600401610c19565b60243590610c6882610490565b610c79610a2c600480606654161490565b610c88600260975414156126ec565b6002609755613938565b6001609755005b63ffffffff8116036104a157565b3590610cb282610c99565b565b346104ed5760403660031901126104e857602435600435610cd482610c99565b610ce5610a2c600880606654161490565b60cb5491610cfd336001600160a01b03851614612a6e565b63ffffffff81169263ffffffff8160c01c16841115610de75763ffffffff7fecd866c3c158fa00bf34d803d5f6023000b57080bcb48af004c2b4b46b3afd0891610d48428710612ad7565b610dcd610d75610d6d610d6060ca5463ffffffff1690565b9360a01c63ffffffff1690565b844216612b67565b94610da8610d81612231565b88815263ffffffff8316602082015263ffffffff8816604082015260006060820152612b81565b60cb805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055565b60405163ffffffff9094168452169180602081015b0390a4005b60405162461bcd60e51b815260206004820152604b60248201527f52657761726473436f6f7264696e61746f722e7375626d6974526f6f743a206e60448201527f657720726f6f74206d75737420626520666f72206e657765722063616c63756c60648201526a185d1959081c195c9a5bd960aa1b608482015260a490fd5b346104ed5760403660031901126104e8576004356001600160401b038111610a0757610e969036906004016108f2565b60243591610ea383610490565b610eb4610a2c600480606654161490565b610ec3600260975414156126ec565b60026097553681900360fe19019260005b83811015610c92578060051b8301359085821215610f0057610efa836001938601613938565b01610ed4565b612738565b346104ed5760203660031901126104e857600435610f2281610490565b60018060a01b031660005260d560205261058e610f72604060002063ffffffff60405191610f4f836121d5565b5461ffff8116835261ffff8160101c16602084015260201c166040820152613afb565b60405161ffff90911681529081906020820190565b346104ed5760003660031901126104e857602063ffffffff60cb5460c01c16604051908152f35b346104ed5760203660031901126104e8576106ab600435610fce81610c99565b610fd661340d565b613b32565b346104ed5760003660031901126104e8576065546001600160a01b0316803b156106e15760206024916040519283809263237dfb4760e11b82523360048301525afa80156106dc576110349160009161078e57506124b8565b6106ab612c6a565b346104ed5760203660031901126104e85760043560ff81168091036104a15760016020911b806066541614604051908152f35b346104ed5760003660031901126104e8576020606654604051908152f35b346104ed5760203660031901126104e8576004356001600160401b038111610a07576110c06110e2913690600401610c19565b6110dc6110d682356110d181610c99565b6122ba565b506122fa565b90613d82565b602060405160018152f35b346104ed5760003660031901126104e857602061ffff60cb5460e01c16604051908152f35b346104ed5760403660031901126104e85760043561112f81610490565b6024359060018060a01b031660005260cf602052604060002090600052602052602060ff604060002054166040519015158152f35b346104ed5760003660031901126104e85761117d61340d565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346104ed5760003660031901126104e857602060ca54604051908152f35b346104ed5760203660031901126104e8576106ab6004356111ff81610490565b61120761340d565b613efa565b346104ed5760403660031901126104e857602061126660043561122e81610490565b6024359061123b82610490565b60018060a01b031660005260cd835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b346104ed5760003660031901126104e8576065546040516001600160a01b039091168152602090f35b346104ed5760003660031901126104e8576033546040516001600160a01b039091168152602090f35b346104ed5760003660031901126104e857602060405173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08152f35b346104ed5760003660031901126104e857611309612240565b5060ca5460001981019081116113285761054f6110d661058e926122ba565b612265565b346104ed5760403660031901126104e85760043561134a81610490565b6024356001600160401b038111610a07576113699036906004016108f2565b919061137c610a2c602080606654161490565b61138b600260975414156126ec565b60026097556001600160a01b038216916113a6338414612caa565b60005b8481106113ba576106ab6001609755565b806114986113cb6001938887612d39565b6001600160a01b038516600090815260ce60205260409020549060405160208101906113fd81610aad85878c87612ea1565b5190208861140a836141de565b9361142e610af184610ae28c60018060a01b031660005260d3602052604060002090565b61143781612a34565b6001600160a01b038a16600090815260ce60205260409020557ffc8888bffd711da60bc5092b33f677d81896fe80ecc677b84cfab8184462b6e06040518061148187339583612ec5565b0390a4309061149360203392016125c0565b6137a8565b016113a9565b346104ed5760003660031901126104e857602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104ed5760203660031901126104e8576004356114fc81610490565b33600081815260cc6020526040812080546001600160a01b039485166001600160a01b03198216811790925590931691907fbab947934d42e0ad206f25c9cab18b5bb6ae144acfb00f40b4e3aa59590ca3129080a4005b6024359061ffff821682036104a157565b60a4359061ffff821682036104a157565b6044359061ffff821682036104a157565b346104ed5760203660031901126104e85760043561ffff811681036104a1576106ab906115b161340d565b6142f5565b346104ed5760403660031901126104e8576004356115d381610490565b6024359060018060a01b031660005260d2602052604060002090600052602052602060ff604060002054166040519015158152f35b346104ed5760403660031901126104e85760043561162581610490565b61162d611553565b9061163f610a2c608080606654161490565b6001600160a01b0381169133839003611721578061168661271061ffff7fd1e028bd664486a46ad26040e999cd2d22e1e9a094ee6afe19fcf64678f16f7494161115612edc565b60cb546116a39060a01c63ffffffff165b63ffffffff4216612b67565b926116f984836116f46116d86116d36116ce8760018060a01b031660005260d5602052604060002090565b612c36565b613afb565b6001600160a01b03909516600090815260d56020526040902090565b614350565b6040805163ffffffff95909516855261ffff91821660208601529116908301523391606090a3005b60405162461bcd60e51b815260206004820152604160248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72504960448201527f53706c69743a2063616c6c6572206973206e6f7420746865206f70657261746f6064820152603960f91b608482015260a490fd5b346104ed5760203660031901126104e8576004356117b381610490565b60018060a01b031660005260ce6020526020604060002054604051908152f35b346104ed5760003660031901126104e857602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346104ed5760403660031901126104e85760043561183181610490565b6024359060018060a01b031660005260d0602052604060002090600052602052602060ff604060002054166040519015158152f35b346104ed5760c03660031901126104e85760043561188381610490565b61190560243561189281610490565b6044356064356118a181610490565b608435916118ae83610c99565b6118b6611564565b93600054966118e96118d36118cf8a60ff9060081c1690565b1590565b8099819a611983575b8115611963575b50612f59565b876118fc600160ff196000541617600055565b61194a57612fbc565b61190b57005b61191b61ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61195e61010061ff00196000541617600055565b612fbc565b303b15915081611975575b50386118e3565b60ff1660011490503861196e565b600160ff82161091506118dc565b346104ed5760603660031901126104e8576004356119ae81610490565b6024356119ba81610490565b6119c2611575565b6119d3610a2c604080606654161490565b6001600160a01b0383169133839003611ad257817f48e198b6ae357e529204ee53a8e514c470ff77d9cc8e4f7207f8b5d490ae693491611a1e61271061ffff611a65961611156130c5565b611a9886836116f484611a65611a7c6116d36116ce84611a4a61169760cb5463ffffffff9060a01c1690565b9d8e9960018060a01b031660005260d4602052604060002090565b9060018060a01b0316600052602052604060002090565b6001600160a01b03909c16600090815260d46020526040902090565b6040805163ffffffff95909516855261ffff968716602086015291909516908301526001600160a01b039093169233918060608101610de2565b60405162461bcd60e51b815260206004820152604260248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72415660448201527f5353706c69743a2063616c6c6572206973206e6f7420746865206f706572617460648201526137b960f11b608482015260a490fd5b346104ed5760203660031901126104e85761058e61054f6110d6600435611b6d612240565b506122ba565b346104ed5760403660031901126104e85761058e610f72611bd2600435611b9981610490565b60243590611ba682610490565b60018060a01b031660005260d460205260406000209060018060a01b0316600052602052604060002090565b63ffffffff60405191610f4f836121d5565b346104ed5760203660031901126104e8576020611c0260043561315c565b63ffffffff60405191168152f35b346104ed5760003660031901126104e8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346104ed5760403660031901126104e857600435611c7281610490565b6024359060018060a01b031660005260d3602052604060002090600052602052602060ff604060002054166040519015158152f35b346104ed5760203660031901126104e857600435611cc481610490565b611ccc61340d565b6001600160a01b03811615611ce4576106ab90613eb1565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346104ed5760003660031901126104e857602061084c61320f565b346104ed5760403660031901126104e857602061084c611d7236610812565b613244565b346104ed5760203660031901126104e857600435611d9481610c99565b611da5610a2c600880606654161490565b611dba60018060a01b0360cb54163314612a6e565b60ca549063ffffffff811691821015611e57576001611ddb611e30926122ba565b5001611e1d611e16611e0d8354611e01611dfc6118cf8360ff9060401c1690565b61328b565b60201c63ffffffff1690565b63ffffffff1690565b42106132f5565b805460ff60401b1916600160401b179055565b7fd850e6e5dfa497b72661fa73df2923464eaed9dc2ff1d3cb82bccbfeabe5c41e600080a2005b60405162461bcd60e51b815260206004820152603160248201527f52657761726473436f6f7264696e61746f722e64697361626c65526f6f743a206044820152700d2dcecc2d8d2c840e4dedee892dcc8caf607b1b6064820152608490fd5b346104ed5760203660031901126104e8576065546001600160a01b0316600435813b156106e15760206004926040519384809263755b36bd60e11b82525afa9182156106dc576106ab92611f1c916000916106ad57506001600160a01b03163314612444565b613360565b346104ed5760003660031901126104e85760cb546040516001600160a01b039091168152602090f35b346104ed57611f58366109d9565b90611f6a610a2c600180606654161490565b611f79600260975414156126ec565b600260975560005b828110611f92576106ab6001609755565b80612040611fa36001938686612807565b33600090815260ce60205260409020546040516020810190611fcb81610aad86863387612a10565b51902090611fd883613692565b33600090815260cf60205260409020611ff690610af1908490610ae2565b611fff81612a34565b33600090815260ce60205260409020556040517f450a367a380c4e339e5ae7340c8464ef27af7781ad9945cfe8abd828f89e6281339180610b488782612a5d565b01611f81565b346104ed57612054366109d9565b90612066610a2c601080606654161490565b3360005260d160205261208060ff60406000205416612660565b61208f600260975414156126ec565b600260975560005b8281106120a8576106ab6001609755565b806121566120b96001938686612807565b33600090815260ce602052604090205460405160208101906120e181610aad86863387612a10565b519020906120ee83613692565b33600090815260d26020526040902061210c90610af1908490610ae2565b61211581612a34565b33600090815260ce60205260409020556040517f5251b6fdefcb5d81144e735f69ea4c695fd43b0289ca53dc075033f5fc80068b339180610b488782612a5d565b01612097565b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176121f057604052565b6121bf565b608081019081106001600160401b038211176121f057604052565b90601f801991011681019081106001600160401b038211176121f057604052565b60405190610cb2608083612210565b6040519061224d826121f5565b60006060838281528260208201528260408201520152565b634e487b7160e01b600052601160045260246000fd5b8015611328576000190190565b60001981019190821161132857565b9190820391821161132857565b634e487b7160e01b600052603260045260246000fd5b60ca548110156122d95760ca60005260206000209060011b0190600090565b6122a4565b80548210156122d95760005260206000209060011b0190600090565b90604051612307816121f5565b606060ff6001839580548552015463ffffffff8116602085015263ffffffff8160201c16604085015260401c161515910152565b612343612240565b5060ca54805b6123725750612356612231565b6000815260006020820152600060408201526000606082015290565b6123816110d66110d183612288565b906123926118cf6060840151151590565b806123b0575b6123ac576123a6915061227b565b80612349565b5090565b506123c5611e0d604084015163ffffffff1690565b421015612398565b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b908160209103126104e8575161243581610490565b90565b6040513d6000823e3d90fd5b1561244b57565b60405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b6064820152608490fd5b908160209103126104e8575161243581610592565b156124bf57565b60405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b6064820152608490fd5b6066548181160361255557606681905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d90602090a2565b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b3561243581610490565b60208135916125d883610490565b0135604051906020820192600084526001600160601b03199060601b16602183015260358201526035815261260e605582612210565b51902090565b1561261b57565b60405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e64657820697320706175736564000000000000006044820152606490fd5b1561266757565b60405162461bcd60e51b815260206004820152605160248201527f52657761726473436f6f7264696e61746f723a2063616c6c6572206973206e6f60448201527f7420612076616c69642063726561746552657761726473466f72416c6c53756260648201527036b4b9b9b4b7b71039bab136b4ba3a32b960791b608482015260a490fd5b156126f357565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206f6666736574000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642063616c6c64617461207461696c206c656e677468000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f43616c6c64617461207461696c20746f6f2073686f72740000000000000000006044820152606490fd5b91908110156122d95760051b81013590609e1981360301821215610f00570190565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206c656e67746800006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c64617461206163636573732073747269646500006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642063616c6c6461746120616363657373206f666673657400006044820152606490fd5b9035601e19823603018112156129365701602081359101916001600160401b038211612931578160061b3603831361292c57565b61286e565b612829565b6128b3565b916020908281520191906000905b8082106129565750505090565b909192833561296481610490565b6001600160a01b0316815260208401356001600160601b03811691908290036104a157604081600193602083940152019401920190612949565b90608063ffffffff816129c26129b486806128f8565b60a0875260a087019161293b565b9460208101356129d181610490565b6001600160a01b03166020860152604081810135908601528260608201356129f881610c99565b1660608601520135612a0981610c99565b1691015290565b612435939260609260018060a01b031682526020820152816040820152019061299e565b906001820180921161132857565b906020820180921161132857565b9190820180921161132857565b90602061243592818152019061299e565b15612a7557565b60405162461bcd60e51b815260206004820152603460248201527f52657761726473436f6f7264696e61746f723a2063616c6c6572206973206e6f6044820152733a103a3432903932bbb0b93239aab83230ba32b960611b6064820152608490fd5b15612ade57565b60405162461bcd60e51b815260206004820152605560248201527f52657761726473436f6f7264696e61746f722e7375626d6974526f6f743a207260448201527f65776172647343616c63756c6174696f6e456e6454696d657374616d702063616064820152746e6e6f7420626520696e207468652066757475726560581b608482015260a490fd5b9063ffffffff8091169116019063ffffffff821161132857565b60ca54600160401b8110156121f057806001612ba2920160ca5560ca6122de565b919091612c205760606001610cb29383518155019163ffffffff60208201511663ffffffff19845416178355612bff63ffffffff604083015116849067ffffffff0000000082549160201b169067ffffffff000000001916179055565b0151815460ff60401b191690151560401b68ff000000000000000016179055565b634e487b7160e01b600052600060045260246000fd5b90604051612c43816121d5565b604063ffffffff82945461ffff8116845261ffff8160101c16602085015260201c16910152565b60001960665560405160001981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2565b3561243581610c99565b15612cb157565b60405162461bcd60e51b815260206004820152605460248201527f52657761726473436f6f7264696e61746f722e6372656174654f70657261746f60448201527f724469726563746564415653526577617264735375626d697373696f6e3a2063606482015273616c6c6572206973206e6f74207468652041565360601b608482015260a490fd5b91908110156122d95760051b8101359060be1981360301821215610f00570190565b9035601e19823603018112156129365701602081359101916001600160401b03821161293157813603831361292c57565b908060209392818452848401376000828201840152601f01601f1916010190565b9190612dca612dbc84806128f8565b60c0845260c084019161293b565b906020840135612dd981610490565b6001600160a01b0316602082810191909152612df860408601866128f8565b8385036040850152808552939091019260005b818110612e6d57505050612e5f84612e39612e2c6060612435979801610ca7565b63ffffffff166060850152565b612e55612e4860808301610ca7565b63ffffffff166080850152565b60a0810190612d5b565b9160a0818503910152612d8c565b9091936040806001928735612e8181610490565b848060a01b03168152602088013560208201520195019101919091612e0b565b612435939260609260018060a01b0316825260208201528160408201520190612dad565b604090612435939281528160208201520190612dad565b15612ee357565b60405162461bcd60e51b815260206004820152604260248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72504960448201527f53706c69743a2073706c6974206d757374206265203c3d203130303030206269606482015261707360f01b608482015260a490fd5b15612f6057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b929493919094612fca6143f6565b60c9556065546001600160a01b031615806130b3575b15613038576112076115b194613033610cb29885613000610fd697606655565b60405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d90602090a2613465565b613eb1565b60405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a490fd5b506001600160a01b0386161515612fe0565b156130cc57565b60405162461bcd60e51b815260206004820152604360248201527f52657761726473436f6f7264696e61746f722e7365744f70657261746f72415660448201527f5353706c69743a2073706c6974206d757374206265203c3d203130303030206260648201526269707360e81b608482015260a490fd5b63ffffffff6000199116019063ffffffff821161132857565b63ffffffff60ca54165b63ffffffff81166131dc5760405162461bcd60e51b815260206004820152603760248201527f52657761726473436f6f7264696e61746f722e676574526f6f74496e6465784660448201527f726f6d486173683a20726f6f74206e6f7420666f756e640000000000000000006064820152608490fd5b816131e96110d183613143565b5054146132055763ffffffff1680156113285760001901613166565b6124359150613143565b467f00000000000000000000000000000000000000000000000000000000000000000361323c5760c95490565b6124356143f6565b602081359161325283610490565b0135604051906020820192600160f81b84526001600160601b03199060601b16602183015260358201526035815261260e605582612210565b1561329257565b60405162461bcd60e51b815260206004820152603560248201527f52657761726473436f6f7264696e61746f722e64697361626c65526f6f743a206044820152741c9bdbdd08185b1c9958591e48191a5cd8589b1959605a1b6064820152608490fd5b156132fc57565b60405162461bcd60e51b815260206004820152603660248201527f52657761726473436f6f7264696e61746f722e64697361626c65526f6f743a206044820152751c9bdbdd08185b1c9958591e481858dd1a5d985d195960521b6064820152608490fd5b6066541981198116036133a257606681905560405190815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602090a2565b60405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c69747900000000000000006064820152608490fd5b6033546001600160a01b0316330361342157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b038116156134d657606554604080516001600160a01b0392831681529183166020830152610cb292917f6e9fcd539896fca60e8b0f01dd580233e48a6b0f7df013b89ba7f565869acdb69190a160018060a01b03166001600160601b0360a01b6065541617606555565b60405162461bcd60e51b815260206004820152604960248201527f5061757361626c652e5f73657450617573657252656769737472793a206e657760448201527f50617573657252656769737472792063616e6e6f7420626520746865207a65726064820152686f206164647265737360b81b608482015260a490fd5b903590601e1981360301821215610f0057018035906001600160401b03821161358d57602001918160061b3603831361358857565b6127c2565b61277d565b1561359957565b60405162461bcd60e51b815260206004820152603f60248201527f52657761726473436f6f7264696e61746f722e5f76616c69646174655265776160448201527f7264735375626d697373696f6e3a20616d6f756e7420746f6f206c61726765006064820152608490fd5b1561360b57565b60405162461bcd60e51b815260206004820152605360248201527f52657761726473436f6f7264696e61746f722e5f76616c69646174655265776160448201527f7264735375626d697373696f6e3a20737461727454696d657374616d7020746f6064820152726f2066617220696e207468652066757475726560681b608482015260a490fd5b60406136c9916136a28180613553565b939060608301948535906136b582610c99565b6080850135926136c484610c99565b61486a565b0135801561373357610cb2916136f46f4b3b4ca85a86c47a098a223fffffffff6136f9931115613592565b612ca0565b63ffffffff61372a817f00000000000000000000000000000000000000000000000000000000000000001642612a50565b91161115613604565b60405162461bcd60e51b815260206004820152604160248201527f52657761726473436f6f7264696e61746f722e5f76616c69646174655265776160448201527f7264735375626d697373696f6e3a20616d6f756e742063616e6e6f74206265206064820152600360fc1b608482015260a490fd5b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610cb2916137ec608483612210565b614ae1565b156137f857565b60405162461bcd60e51b815260206004820152603c60248201527f52657761726473436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063616c6c6572206973206e6f742076616c696420636c61696d6572000000006064820152608490fd5b903590601e1981360301821215610f0057018035906001600160401b03821161358d57602001918160051b3603831361358857565b91908110156122d95760061b0190565b156138af57565b60405162461bcd60e51b815260206004820152605560248201527f52657761726473436f6f7264696e61746f722e70726f63657373436c61696d3a60448201527f2063756d756c61746976654561726e696e6773206d75737420626520677420746064820152741a185b8818dd5b5d5b185d1a5d9950db185a5b5959605a1b608482015260a490fd5b906139486110d66110d184612ca0565b906139538284613d82565b61395f606084016125c0565b9361398c61397f8660018060a01b031660005260cc602052604060002090565b546001600160a01b031690565b6001600160a01b03811615613af4575b90936001600160a01b03909116916139b53384146137f1565b6001600160a01b0386169160005b6139d060a0830183613863565b9050811015613aea57806139f36001926139ed60e0860186613553565b90613898565b86867f9543dbd55580842586a951f0386e24d68a5df99ae29e3b216588b45fd684ce318c613a55613a368260018060a01b031660005260cd602052604060002090565b613a3f876125c0565b60018060a01b0316600052602052604060002090565b54613a9b613a92613a76602089013593613a708186116138a8565b84612297565b6001600160a01b03909416600090815260cd6020526040902090565b613a3f886125c0565b55613aaf818a613aaa886125c0565b614bb6565b613aba8c51956125c0565b604080519687526001600160a01b0391909116602087015285015260a086901b869003881693606090a4016139c3565b5050505050509050565b508461399c565b604081015163ffffffff169081613b1b57505061ffff60cb5460e01c1690565b61ffff914210613b2d57602001511690565b511690565b60cb54907faf557c6c02c208794817a705609cfa935f827312a1adfdd26494b6b95dd2b4b36040805163ffffffff8560a01c16815263ffffffff84166020820152a163ffffffff60a01b1990911660a09190911b63ffffffff60a01b161760cb55565b15613b9c57565b60405162461bcd60e51b8152602060048201526030602482015260008051602061504783398151915260448201526f1c9bdbdd081a5cc8191a5cd8589b195960821b6064820152608490fd5b15613bef57565b60405162461bcd60e51b815260206004820152603660248201526000805160206150478339815191526044820152751c9bdbdd081b9bdd081858dd1a5d985d1959081e595d60521b6064820152608490fd5b15613c4857565b60405162461bcd60e51b815260206004820152604c602482015260008051602061504783398151915260448201527f746f6b656e496e646963657320616e6420746f6b656e50726f6f6673206c656e60648201526b0cee8d040dad2e6dac2e8c6d60a31b608482015260a490fd5b15613cbd57565b60405162461bcd60e51b815260206004820152604a602482015260008051602061504783398151915260448201527f746f6b656e5472656550726f6f667320616e64206c6561766573206c656e67746064820152690d040dad2e6dac2e8c6d60b31b608482015260a490fd5b903590601e1981360301821215610f0057018035906001600160401b03821161358d5760200191813603831361358857565b91908110156122d95760051b0190565b908210156122d957610a039160051b810190613d29565b919091613d9d613d986118cf6060860151151590565b613b95565b613dbc613db4611e0d604086015163ffffffff1690565b421015613be8565b60a0810190613dcb8282613863565b9050613de860c0830191613ddf8385613863565b91905014613c41565b613e38613df58284613863565b969050613e1360e0850197613e0a8987613553565b91905014613cb6565b51613e2060208501612ca0565b613e2d6040860186613d29565b916060870193614c7d565b60808201359260005b613e4b8285613863565b9050811015613ea85780613ea2856139ed8a613e9b85613e9281613e8c8c8f6136f460019d8f613e8090613e8694508d613863565b90613d5b565b98613863565b90613d6b565b9490938c613553565b928a614dad565b01613e41565b50505050509050565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b60cb546001600160a01b0391821691829082167f237b82f438d75fc568ebab484b75b01d9287b9e98b490b7c23221623b6705dbb600080a36001600160a01b0319161760cb55565b15613f4957565b60405162461bcd60e51b8152602060048201526054602482015260008051602061508783398151915260448201527f61746f724469726563746564526577617264735375626d697373696f6e3a206e6064820152731bc81bdc195c985d1bdc9cc81c995dd85c99195960621b608482015260a490fd5b15613fc657565b60405162461bcd60e51b815260206004820152605b6024820152600080516020615087833981519152604482015260008051602061506783398151915260648201527f70657261746f722063616e6e6f74206265203020616464726573730000000000608482015260a490fd5b1561403a57565b60405162461bcd60e51b81526020600482015260786024820152600080516020615087833981519152604482015260008051602061506783398151915260648201527f70657261746f7273206d75737420626520696e20617363656e64696e67206f7260848201527f64657220746f2068616e646c65206475706c696361746573000000000000000060a482015260c490fd5b156140d457565b60405162461bcd60e51b81526020600482015260616024820152600080516020615087833981519152604482015260008051602061506783398151915260648201527f70657261746f722072657761726420616d6f756e742063616e6e6f74206265206084820152600360fc1b60a482015260c490fd5b1561415257565b60405162461bcd60e51b81526020600482015260766024820152600080516020615087833981519152604482015260008051602061506783398151915260648201527f70657261746f722d64697265637465642072657761726473207375626d697373608482015275696f6e206973206e6f7420726574726f61637469766560501b60a482015260c490fd5b906141e98280613553565b909261421060608201946141fc86612ca0565b608084019461420a86612ca0565b9261486a565b604081019061422b6142228383613553565b90501515613f42565b6000938493845b61423c8585613553565b90508710156142c0576142b860019161429961425c8a6139ed8a8a613553565b9861427f61427861426c8c6125c0565b6001600160a01b031690565b1515613fbf565b61428b61426c8b6125c0565b90858060a01b031610614033565b60206142a4896125c0565b980135906142b38215156140cd565b612a50565b960195614232565b955091509461243593506142e792506142db6142e191612ca0565b91612ca0565b90612b67565b63ffffffff4291161061414b565b60cb54907fe6cd4edfdcc1f6d130ab35f73d72378f3a642944fb4ee5bd84b7807a81ea1c4e6040805161ffff8560e01c16815261ffff84166020820152a161ffff60e01b1990911660e09190911b61ffff60e01b161760cb55565b610cb29291815463ffffffff8160201c168042101561439e575b5050815467ffffffffffff0000191660109190911b63ffff0000161760209290921b67ffffffff0000000016919091179055565b6143c2575060cb54825461ffff191660e09190911c61ffff161782555b388061436a565b825461ffff191660109190911c61ffff161782556143bb565b6001600160401b0381116121f057601f01601f191660200190565b6040600a602082516144088482612210565b828152016922b4b3b2b72630bcb2b960b11b81522081519060208201927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86684528201524660608201523060808201526080815261260e60a082612210565b1561446d57565b60405162461bcd60e51b815260206004820152604660248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a206e6f207374726174656769606482015265195cc81cd95d60d21b608482015260a490fd5b156144dc57565b60405162461bcd60e51b815260206004820152605a60248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a206475726174696f6e20657860648201527f6365656473204d41585f524557415244535f4455524154494f4e000000000000608482015260a490fd5b9063ffffffff169081156145735763ffffffff160690565b634e487b7160e01b600052601260045260246000fd5b1561459057565b60405162461bcd60e51b815260206004820152607060248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a206475726174696f6e206d7560648201527f73742062652061206d756c7469706c65206f662043414c43554c4154494f4e5f60848201526f494e54455256414c5f5345434f4e445360801b60a482015260c490fd5b1561462f57565b60405162461bcd60e51b815260206004820152607660248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a20737461727454696d65737460648201527f616d70206d7573742062652061206d756c7469706c65206f662043414c43554c6084820152754154494f4e5f494e54455256414c5f5345434f4e445360501b60a482015260c490fd5b156146d457565b60405162461bcd60e51b815260206004820152605760248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a20737461727454696d65737460648201527f616d7020746f6f2066617220696e207468652070617374000000000000000000608482015260a490fd5b1561475a57565b60405162461bcd60e51b815260206004820152605060248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a20696e76616c69642073747260648201526f185d1959de4818dbdb9cda59195c995960821b608482015260a490fd5b156147d357565b60405162461bcd60e51b815260206004820152606f60248201526000805160206150a783398151915260448201527f6f6e526577617264735375626d697373696f6e3a20737472617465676965732060648201527f6d75737420626520696e20617363656e64696e67206f7264657220746f20686160848201526e6e646c65206475706c69636174657360881b60a482015260c490fd5b92916149036148fd611e0d61494a9495614885871515614466565b6148bd63ffffffff7f00000000000000000000000000000000000000000000000000000000000000001663ffffffff831611156144d5565b6148f763ffffffff6148f07f0000000000000000000000000000000000000000000000000000000000000000809461455b565b1615614589565b8461455b565b15614628565b63ffffffff614934817f00000000000000000000000000000000000000000000000000000000000000001642612297565b9116809111159081614a51575b509291926146cd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691600090815b818310614988575050505050565b61499b614996848487613898565b6125c0565b90853b156106e15760405163198f077960e21b81526001600160a01b03831660048201526020816024818a5afa9283156106dc57600193614a0592600091614a33575b508015614a0d575b6149ef90614753565b838060a01b03168092848060a01b0316106147cc565b92019161497a565b5060a084901b849003811673beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0146149e6565b614a4b915060203d81116107b6576107a88183612210565b386149de565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016111538614941565b15614a8957565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6040805192916001600160a01b031690614afb8185612210565b602084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020850152813b15614b7357506000828192826020614b4e9796519301915af1614b48614f9f565b90614fcf565b805180614b59575050565b81602080614b6e93610cb295010191016124a3565b614a82565b5162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152610cb2916137ec606483612210565b929192614bfd826143db565b91614c0b6040519384612210565b829481845281830111614c28578281602093846000960137010152565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b9063ffffffff9094939294169260018360051c1b841015614d3657614cb594614ca8614cb0926125ca565b933691614bf1565b614eb5565b15614cbc57565b60405162461bcd60e51b815260206004820152604660248201527f52657761726473436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e657220636c61696d60648201526510383937b7b360d11b608482015260a490fd5b60405162461bcd60e51b815260206004820152604360248201527f52657761726473436f6f7264696e61746f722e5f7665726966794561726e657260448201527f436c61696d50726f6f663a20696e76616c6964206561726e65724c656166496e6064820152620c8caf60eb1b608482015260a490fd5b9063ffffffff9094939294169260018360051c1b841015614e4a57614dd894614ca8614cb092613244565b15614ddf57565b60405162461bcd60e51b815260206004820152603f60248201527f52657761726473436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e20636c61696d2070726f6f66006064820152608490fd5b60405162461bcd60e51b815260206004820152603c60248201527f52657761726473436f6f7264696e61746f722e5f766572696679546f6b656e4360448201527f6c61696d3a20696e76616c696420746f6b656e4c656166496e646578000000006064820152608490fd5b93909291601f855116614f205791906020925b85518411614f175760018316614efb5760005282850151602052614ef460406000209260011c93612a42565b9291614ec8565b83860151600052602052614ef460406000209260011c93612a42565b92509350501490565b60405162461bcd60e51b815260206004820152604b60248201527f4d65726b6c652e70726f63657373496e636c7573696f6e50726f6f664b65636360448201527f616b3a2070726f6f66206c656e6774682073686f756c642062652061206d756c60648201526a3a34b836329037b310199960a91b608482015260a490fd5b3d15614fca573d90614fb0826143db565b91614fbe6040519384612210565b82523d6000602084013e565b606090565b90919015614fdb575090565b815115614feb5750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b83811061502e5750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161500c56fe52657761726473436f6f7264696e61746f722e5f636865636b436c61696d3a2061746f724469726563746564526577617264735375626d697373696f6e3a206f52657761726473436f6f7264696e61746f722e5f76616c69646174654f70657252657761726473436f6f7264696e61746f722e5f76616c6964617465436f6d6da2646970667358221220fd153cb31a057eeed1466a91f80fff18d437f1e0e2cbe4dbcc4ebaee34d0428364736f6c634300081a0033";

type RewardsCoordinatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsCoordinatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsCoordinator__factory extends ContractFactory {
  constructor(...args: RewardsCoordinatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delegationManager: string,
    _strategyManager: string,
    _CALCULATION_INTERVAL_SECONDS: BigNumberish,
    _MAX_REWARDS_DURATION: BigNumberish,
    _MAX_RETROACTIVE_LENGTH: BigNumberish,
    _MAX_FUTURE_LENGTH: BigNumberish,
    __GENESIS_REWARDS_TIMESTAMP: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<RewardsCoordinator> {
    return super.deploy(
      _delegationManager,
      _strategyManager,
      _CALCULATION_INTERVAL_SECONDS,
      _MAX_REWARDS_DURATION,
      _MAX_RETROACTIVE_LENGTH,
      _MAX_FUTURE_LENGTH,
      __GENESIS_REWARDS_TIMESTAMP,
      overrides || {}
    ) as Promise<RewardsCoordinator>;
  }
  override getDeployTransaction(
    _delegationManager: string,
    _strategyManager: string,
    _CALCULATION_INTERVAL_SECONDS: BigNumberish,
    _MAX_REWARDS_DURATION: BigNumberish,
    _MAX_RETROACTIVE_LENGTH: BigNumberish,
    _MAX_FUTURE_LENGTH: BigNumberish,
    __GENESIS_REWARDS_TIMESTAMP: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delegationManager,
      _strategyManager,
      _CALCULATION_INTERVAL_SECONDS,
      _MAX_REWARDS_DURATION,
      _MAX_RETROACTIVE_LENGTH,
      _MAX_FUTURE_LENGTH,
      __GENESIS_REWARDS_TIMESTAMP,
      overrides || {}
    );
  }
  override attach(address: string): RewardsCoordinator {
    return super.attach(address) as RewardsCoordinator;
  }
  override connect(signer: Signer): RewardsCoordinator__factory {
    return super.connect(signer) as RewardsCoordinator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsCoordinatorInterface {
    return new utils.Interface(_abi) as RewardsCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsCoordinator {
    return new Contract(address, _abi, signerOrProvider) as RewardsCoordinator;
  }
}
