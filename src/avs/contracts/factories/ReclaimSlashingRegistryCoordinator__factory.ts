/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReclaimSlashingRegistryCoordinator,
  ReclaimSlashingRegistryCoordinatorInterface,
} from "../ReclaimSlashingRegistryCoordinator";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_stakeRegistry",
        type: "address",
        internalType: "contract IStakeRegistry",
      },
      {
        name: "_blsApkRegistry",
        type: "address",
        internalType: "contract IBLSApkRegistry",
      },
      {
        name: "_indexRegistry",
        type: "address",
        internalType: "contract IIndexRegistry",
      },
      {
        name: "_socketRegistry",
        type: "address",
        internalType: "contract ISocketRegistry",
      },
      {
        name: "_allocationManager",
        type: "address",
        internalType: "contract IAllocationManager",
      },
      {
        name: "_pauserRegistry",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
      {
        name: "_version",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "OPERATOR_CHURN_APPROVAL_TYPEHASH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PUBKEY_REGISTRATION_TYPEHASH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "allocationManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAllocationManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "avs",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "blsApkRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IBLSApkRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculateOperatorChurnApprovalDigestHash",
    inputs: [
      {
        name: "registeringOperator",
        type: "address",
        internalType: "address",
      },
      {
        name: "registeringOperatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "operatorKickParams",
        type: "tuple[]",
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorKickParam[]",
        components: [
          {
            name: "quorumNumber",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "operator",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "expiry",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "calculatePubkeyRegistrationMessageHash",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "churnApprover",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createSlashableStakeQuorum",
    inputs: [
      {
        name: "operatorSetParams",
        type: "tuple",
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorSetParam",
        components: [
          {
            name: "maxOperatorCount",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "kickBIPsOfOperatorStake",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "kickBIPsOfTotalStake",
            type: "uint16",
            internalType: "uint16",
          },
        ],
      },
      {
        name: "minimumStake",
        type: "uint96",
        internalType: "uint96",
      },
      {
        name: "strategyParams",
        type: "tuple[]",
        internalType: "struct IStakeRegistryTypes.StrategyParams[]",
        components: [
          {
            name: "strategy",
            type: "address",
            internalType: "contract IStrategy",
          },
          {
            name: "multiplier",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
      {
        name: "lookAheadPeriod",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createTotalDelegatedStakeQuorum",
    inputs: [
      {
        name: "operatorSetParams",
        type: "tuple",
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorSetParam",
        components: [
          {
            name: "maxOperatorCount",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "kickBIPsOfOperatorStake",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "kickBIPsOfTotalStake",
            type: "uint16",
            internalType: "uint16",
          },
        ],
      },
      {
        name: "minimumStake",
        type: "uint96",
        internalType: "uint96",
      },
      {
        name: "strategyParams",
        type: "tuple[]",
        internalType: "struct IStakeRegistryTypes.StrategyParams[]",
        components: [
          {
            name: "strategy",
            type: "address",
            internalType: "contract IStrategy",
          },
          {
            name: "multiplier",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "deregisterOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSetIds",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "domainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      {
        name: "fields",
        type: "bytes1",
        internalType: "bytes1",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "verifyingContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "extensions",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ejectOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "quorumNumbers",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ejectionCooldown",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ejector",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCurrentQuorumBitmap",
    inputs: [
      {
        name: "operatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint192",
        internalType: "uint192",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ISlashingRegistryCoordinatorTypes.OperatorInfo",
        components: [
          {
            name: "operatorId",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "status",
            type: "uint8",
            internalType:
              "enum ISlashingRegistryCoordinatorTypes.OperatorStatus",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorFromId",
    inputs: [
      {
        name: "operatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorId",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorSetParams",
    inputs: [
      {
        name: "quorumNumber",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorSetParam",
        components: [
          {
            name: "maxOperatorCount",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "kickBIPsOfOperatorStake",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "kickBIPsOfTotalStake",
            type: "uint16",
            internalType: "uint16",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOperatorStatus",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum ISlashingRegistryCoordinatorTypes.OperatorStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuorumBitmapAtBlockNumberByIndex",
    inputs: [
      {
        name: "operatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "blockNumber",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint192",
        internalType: "uint192",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuorumBitmapHistoryLength",
    inputs: [
      {
        name: "operatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuorumBitmapIndicesAtBlockNumber",
    inputs: [
      {
        name: "blockNumber",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "operatorIds",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32[]",
        internalType: "uint32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getQuorumBitmapUpdateByIndex",
    inputs: [
      {
        name: "operatorId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.QuorumBitmapUpdate",
        components: [
          {
            name: "updateBlockNumber",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "nextUpdateBlockNumber",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "quorumBitmap",
            type: "uint192",
            internalType: "uint192",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "indexRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IIndexRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "churnApprover",
        type: "address",
        internalType: "address",
      },
      {
        name: "ejector",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isChurnApproverSaltUsed",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lastEjectionTimestamp",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseAll",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [
      {
        name: "index",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pauserRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IPauserRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pubkeyRegistrationMessageHash",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BN254.G1Point",
        components: [
          {
            name: "X",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "Y",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quorumCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quorumUpdateBlockNumber",
    inputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "avs",
        type: "address",
        internalType: "address",
      },
      {
        name: "operatorSetIds",
        type: "uint32[]",
        internalType: "uint32[]",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAVS",
    inputs: [
      {
        name: "_avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setChurnApprover",
    inputs: [
      {
        name: "_churnApprover",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setEjectionCooldown",
    inputs: [
      {
        name: "_ejectionCooldown",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setEjector",
    inputs: [
      {
        name: "_ejector",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setOperatorSetParams",
    inputs: [
      {
        name: "quorumNumber",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "operatorSetParams",
        type: "tuple",
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorSetParam",
        components: [
          {
            name: "maxOperatorCount",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "kickBIPsOfOperatorStake",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "kickBIPsOfTotalStake",
            type: "uint16",
            internalType: "uint16",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "socketRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ISocketRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "stakeRegistry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IStakeRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supportsAVS",
    inputs: [
      {
        name: "_avs",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [
      {
        name: "newPausedStatus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOperators",
    inputs: [
      {
        name: "operators",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateOperatorsForQuorum",
    inputs: [
      {
        name: "operatorsPerQuorum",
        type: "address[][]",
        internalType: "address[][]",
      },
      {
        name: "quorumNumbers",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateSocket",
    inputs: [
      {
        name: "socket",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AVSUpdated",
    inputs: [
      {
        name: "prevAVS",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newAVS",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ChurnApproverUpdated",
    inputs: [
      {
        name: "prevChurnApprover",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newChurnApprover",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EIP712DomainChanged",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "EjectionCooldownUpdated",
    inputs: [
      {
        name: "prevEjectionCooldown",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newEjectionCooldown",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EjectorUpdated",
    inputs: [
      {
        name: "prevEjector",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newEjector",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorDeregistered",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorRegistered",
    inputs: [
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operatorId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorSetParamsUpdated",
    inputs: [
      {
        name: "quorumNumber",
        type: "uint8",
        indexed: true,
        internalType: "uint8",
      },
      {
        name: "operatorSetParams",
        type: "tuple",
        indexed: false,
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorSetParam",
        components: [
          {
            name: "maxOperatorCount",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "kickBIPsOfOperatorStake",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "kickBIPsOfTotalStake",
            type: "uint16",
            internalType: "uint16",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OperatorSocketUpdate",
    inputs: [
      {
        name: "operatorId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "socket",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QuorumBlockNumberUpdated",
    inputs: [
      {
        name: "quorumNumber",
        type: "uint8",
        indexed: true,
        internalType: "uint8",
      },
      {
        name: "blocknumber",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "QuorumCreated",
    inputs: [
      {
        name: "quorumNumber",
        type: "uint8",
        indexed: true,
        internalType: "uint8",
      },
      {
        name: "operatorSetParams",
        type: "tuple",
        indexed: false,
        internalType:
          "struct ISlashingRegistryCoordinatorTypes.OperatorSetParam",
        components: [
          {
            name: "maxOperatorCount",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "kickBIPsOfOperatorStake",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "kickBIPsOfTotalStake",
            type: "uint16",
            internalType: "uint16",
          },
        ],
      },
      {
        name: "minimumStake",
        type: "uint96",
        indexed: false,
        internalType: "uint96",
      },
      {
        name: "strategyParams",
        type: "tuple[]",
        indexed: false,
        internalType: "struct IStakeRegistryTypes.StrategyParams[]",
        components: [
          {
            name: "strategy",
            type: "address",
            internalType: "contract IStrategy",
          },
          {
            name: "multiplier",
            type: "uint96",
            internalType: "uint96",
          },
        ],
      },
      {
        name: "stakeType",
        type: "uint8",
        indexed: false,
        internalType: "enum IStakeRegistryTypes.StakeType",
      },
      {
        name: "lookAheadPeriod",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPausedStatus",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyRegisteredForQuorums",
    inputs: [],
  },
  {
    type: "error",
    name: "BitmapCannotBeZero",
    inputs: [],
  },
  {
    type: "error",
    name: "BitmapEmpty",
    inputs: [],
  },
  {
    type: "error",
    name: "BitmapUpdateIsAfterBlockNumber",
    inputs: [],
  },
  {
    type: "error",
    name: "BitmapValueTooLarge",
    inputs: [],
  },
  {
    type: "error",
    name: "BytesArrayLengthTooLong",
    inputs: [],
  },
  {
    type: "error",
    name: "BytesArrayNotOrdered",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotChurnSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotKickOperatorAboveThreshold",
    inputs: [],
  },
  {
    type: "error",
    name: "CannotReregisterYet",
    inputs: [],
  },
  {
    type: "error",
    name: "ChurnApproverSaltUsed",
    inputs: [],
  },
  {
    type: "error",
    name: "CurrentlyPaused",
    inputs: [],
  },
  {
    type: "error",
    name: "ExpModFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "InputAddressZero",
    inputs: [],
  },
  {
    type: "error",
    name: "InputLengthMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientStakeForChurn",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAVS",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidNewPausedStatus",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRegistrationType",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "LookAheadPeriodTooLong",
    inputs: [],
  },
  {
    type: "error",
    name: "MaxOperatorCountReached",
    inputs: [],
  },
  {
    type: "error",
    name: "MaxQuorumsReached",
    inputs: [],
  },
  {
    type: "error",
    name: "NextBitmapUpdateIsBeforeBlockNumber",
    inputs: [],
  },
  {
    type: "error",
    name: "NotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "NotRegisteredForQuorum",
    inputs: [],
  },
  {
    type: "error",
    name: "NotSorted",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyAllocationManager",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyEjector",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyPauser",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyUnpauser",
    inputs: [],
  },
  {
    type: "error",
    name: "OperatorNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "QuorumDoesNotExist",
    inputs: [],
  },
  {
    type: "error",
    name: "QuorumOperatorCountMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "SignatureExpired",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
] as const;

const _bytecode =
  "0x61016080604052346104c457615e7e8038038061001b81610511565b92833981019060e081830312610474578051916001600160a01b0383168303610470576020820151926001600160a01b03841684036104705760408301516001600160a01b03811681036104705760608401516001600160a01b0381168103610470576080850151916001600160a01b03831683036104705760a0860151966001600160a01b038816968789036104705760c0810151906001600160401b03821161042057019486601f870112156103c75785516001600160401b0381116103b3576100f0601f8201601f1916602001610511565b9681885260208801986020838301011161035e57815f9260208093018b5e8801015260c05260a05260e05260805261010052601f8151116103225751905160208210610312575b176101205215610303576101405260325460ff8160081c166102ae5760ff80821603610273575b604051615947908161053782396080518181816127e801526137d8015260a051818181610cf701528181610f920152818161158b01528181611bd601528181611f7401528181614323015281816148290152614ab8015260c051818181610ff7015281816114c601528181611c1a01528181611eb0015281816136e60152818161488b01528181614b1a0152615391015260e0518181816110590152818161152a01528181611f130152818161232c01528181612c7c015281816149000152614b8f01526101005181818161141001528181611e46015281816126de01528181613a1101526150710152610120518161193d015261014051818181610b1a01528181611a76015281816122a101526128d80152f35b60ff90811916176032557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a18061015e565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b6339b190bb60e11b5f5260045ffd5b5f198260200360031b1b16610137565b60449060405192839163305a27a960e01b8352602060048401525180918160248501528484015e5f828201840152601f01601f19168101030190fd5b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b5f80fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b62461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b6040519190601f01601f191682016001600160401b038111838210176103b35760405256fe6080604052600436106129ba575f3560e01c8062cf2ab51461037a57806303fd34921461037557806304ec635114610370578063054310e61461036b5780630cf4b767146103665780630d3f213414610361578063125e05841461035c57806313542a4e14610357578063136439dd146103525780631478851f1461034d5780631eb812da14610348578063249a0c421461034357806328f61b311461033e578063296bb0641461033957806329d1e0c3146103345780632cdd1e861461032f578063303ca9561461032a5780633c2a7f4c146103255780633eef3a51146103205780635140a5481461031b578063530b97a41461031657806354fd4d50146103115780635865c60c1461030c578063595c6a67146103075780635ac86ab7146103025780635b0b829f146102fd5780635c975abb146102f85780635df45946146102f357806368304835146102ee5780636e3b17db146102e9578063715018a6146102e457806373447992146102df5780638281ab75146102da57806384b0196e146102d557806384ca5213146102d0578063871ef049146102cb578063886f1195146102c65780638da5cb5b146102c15780639aa1653d146102bc5780639e9923c2146102b75780639feab859146102b2578063a65497c6146102ad578063a96f783e146102a8578063b5265787146102a3578063c391425e1461029e578063c63fd50214610299578063ca0de88214610294578063ca8aa7c71461028f578063de1164bb1461028a578063e65797ad14610285578063ea32afae14610280578063f2fde38b1461027b578063f698da2514610276578063fabc1cbc146102715763fd39105a036129ba57612974565b6128c2565b6128a8565b612817565b6127d3565b612766565b61270d565b6126c9565b61268f565b6124fb565b612457565b6123df565b6123c2565b612395565b61235b565b612317565b6122f8565b6122d0565b61228c565b61225c565b612208565b6120d6565b611d53565b611d24565b611cc9565b611c49565b611c05565b611bc1565b611ba4565b611b10565b611ae1565b611a64565b6119f4565b61192b565b6117f0565b61172a565b6112f0565b611157565b610e5a565b610dc6565b610d99565b610cdc565b610cb4565b610c82565b610bfa565b610bcb565b610aff565b610ac4565b610a89565b610a35565b6109c2565b6108d6565b6107f6565b6107be565b61064e565b60405162461bcd60e51b815260206004820152602260248201527f45746865722073656e7420746f206e6f6e2d70617961626c652066756e63746960448201526137b760f11b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a207475706c65206461746120746f6f2073686f6044820152611c9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f414249206465636f64696e673a20696e76616c6964207475706c65206f666673604482015261195d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a1c9c985e481bd9999cd95d60aa1b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b038211176104f757604052565b6104c8565b604081019081106001600160401b038211176104f757604052565b90601f801991011681019081106001600160401b038211176104f757604052565b60405190610547604083610517565b565b60405190610547606083610517565b6001600160401b0381116104f75760051b60200190565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a727261792073747269646560a81b6064820152608490fd5b6001600160a01b038116036105d957565b5f80fd5b9080601f830112156106495781356105f481610558565b926106026040519485610517565b81845260208085019260051b82010192831161064457602001905b82821061062a5750505090565b602080918335610639816105c8565b81520191019061061d565b61056f565b61046f565b346107b95760203660031901126107b4576004356001600160401b0381116107af5761067e9036906004016105dd565b61069561068f600480603354161490565b15612a1d565b6040905f60205b82518210156107ad578351906106b28583610517565b60018252803660208401376106f26106da6106cd8587612a59565b516001600160a01b031690565b6106e384612a47565b6001600160a01b039091169052565b6106fa612a6d565b9061072461070b6106cd8688612a59565b6001600160a01b03165f90815260036020526040902090565b5461072e83612a47565b5261075861075361074761074185612a47565b51614c90565b6001600160c01b031690565b61350f565b945f5b865181101561079b578061079561078e61078861077a6001958c612ac1565b516001600160f81b03191690565b60f81c90565b86886136bc565b0161075b565b509450600190930192915061069c9050565b005b61041f565b6103cf565b61037f565b346107b95760203660031901126107b4576004355f526002602052602060405f2054604051908152f35b63ffffffff8116036105d957565b346107b95760603660031901126107b45760243561083661083060043561081c846107e8565b604435905f52600260205260405f20612bb1565b50612bc6565b63ffffffff8082511692169182106108bd5760408161087261089a9460206108809501519063ffffffff82161591821561089e575b50506137bf565b01516001600160c01b031690565b6040516001600160c01b0390911681529081906020820190565b0390f35b9091506108b59063ffffffff165b63ffffffff1690565b115f8061086b565b636cb19aff60e01b5f5260045ffd5b5f9103126107b457565b346107b9575f3660031901126107b4576007546040516001600160a01b039091168152602090f35b6001600160401b0381116104f757601f01601f191660200190565b929192610925826108fe565b916109336040519384610517565b82948184528183011161094f578281602093845f960137010152565b60405162461bcd60e51b815260206004820152602760248201527f414249206465636f64696e673a20696e76616c69642062797465206172726179604482015266040d8cadccee8d60cb1b6064820152608490fd5b9080601f83011215610649578160206109bf93359101610919565b90565b346107b95760203660031901126107b4576004356001600160401b0381116107af576109f29036906004016109a4565b335f52600360205260ff600160405f20015416906003821015610a3057610a1e60016107ad9314612ad2565b335f52600360205260405f20546137d5565b6119ae565b346107b95760203660031901126107b4577fa77a91bea7b6d95a8eb5a54878a1d9e3c875e26c86a9b70e3420c5c5db193b626040600435610a74613895565b600a549080600a5582519182526020820152a1005b346107b95760203660031901126107b457600435610aa6816105c8565b60018060a01b03165f526009602052602060405f2054604051908152f35b346107b95760203660031901126107b457600435610ae1816105c8565b60018060a01b03165f526003602052602060405f2054604051908152f35b346107b95760203660031901126107b4576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600435813b15610bc65760206024926040519384809263237dfb4760e11b82523360048301525afa918215610bc1576107ad92610b7e915f91610b92575b50612b67565b610b8d60335482811614612b7d565b613921565b610bb4915060203d602011610bba575b610bac8183610517565b810190612b48565b5f610b78565b503d610ba2565b612b5c565b612ae8565b346107b95760203660031901126107b4576004355f526004602052602060ff60405f2054166040519015158152f35b346107b95760403660031901126107b4576060610c32610830602435600435610c21612b93565b505f52600260205260405f20612bb1565b6040519063ffffffff815116825263ffffffff6020820151166020830152604060018060c01b03910151166040820152f35b6004359060ff821682036105d957565b359060ff821682036105d957565b346107b95760203660031901126107b45760ff610c9d610c64565b165f526005602052602060405f2054604051908152f35b346107b9575f3660031901126107b4576008546040516001600160a01b039091168152602090f35b346107b95760203660031901126107b4576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600435813b15610bc6576020906024604051809481936308f6629d60e31b835260048301525afa8015610bc15761089a915f91610d6a575b506040516001600160a01b0390911681529081906020820190565b610d8c915060203d602011610d92575b610d848183610517565b810190612bf7565b5f610d4f565b503d610d7a565b346107b95760203660031901126107b4576107ad600435610db9816105c8565b610dc1613895565b613953565b346107b95760203660031901126107b4576107ad600435610de6816105c8565b610dee613895565b6139b1565b9080601f83011215610649578135610e0a81610558565b92610e186040519485610517565b81845260208085019260051b82010192831161064457602001905b828210610e405750505090565b602080918335610e4f816107e8565b815201910190610e33565b346107b95760603660031901126107b457600435610e77816105c8565b602435610e83816105c8565b604435906001600160401b0382116107af57610ed9610ea9610ede933690600401610df3565b91610eb2613a0f565b610ec361068f600280603354161490565b600b546001600160a01b03918216911614612c0c565b613a50565b6001600160a01b0382165f9081526003602052604090209091610f77825492610f276001610f1881610f0f88614c90565b94015460ff1690565b610f21816119c2565b14612ad2565b610f41610747610747610f3b5f5460ff1690565b88613e7c565b90610f4d821515613a99565b610f688282166001600160c01b03168314612ea0565b612ea0565b9019166001600160c01b031690565b610f818184614cd4565b6001600160c01b0316156110f8575b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc657835f91610fe5938360405180968195829463f4e24fe560e01b845260048401613aaf565b03925af18015610bc1576110e4575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc6575f604051809263bd29b8cd60e01b8252818381611047898960048401613ad1565b03925af18015610bc1576110d0575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b15610bc6576110ac925f928360405180968195829463bd29b8cd60e01b845260048401613ad1565b03925af18015610bc1576110bc57005b806110ca5f6107ad93610517565b806108cc565b806110ca5f6110de93610517565b5f611056565b806110ca5f6110f293610517565b5f610ff4565b6001600160a01b0381165f90815260036020526040902061112390600101805460ff19166002179055565b816001600160a01b0382167f396fdcb180cb0fea26928113fb0fd1c3549863f9cd563e6a184f1d578116c8e45f80a3610f90565b346107b95760203660031901126107b457604061118f61118a60043561117c816105c8565b611184612c22565b506130ce565b613afc565b6111a58251809260208091805184520151910152565bf35b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20737472756374206461746120746f6f2073686044820152621bdc9d60ea1b6064820152608490fd5b60609060031901126112485760405190611211826104dc565b8160043561121e816107e8565b815260243561ffff811681036105d95760208201526044359061ffff821682036105d95760400152565b6111a7565b6001600160601b038116036105d957565b81601f820112156106495780359061127582610558565b926112836040519485610517565b82845260208085019360061b8301019181831161064457602001925b8284106112ad575050505090565b60408483031261124857602060409182516112c7816104fc565b86356112d2816105c8565b8152828701356112e18161124d565b8382015281520193019261129f565b346107b95760c03660031901126107b45761130a366111f8565b6064356113168161124d565b6084356001600160401b0381116107af5761133590369060040161125e565b60a43592611342846107e8565b61134a613895565b5f5460ff1692839161135e60c08410613c1a565b61137861136a86613c30565b60ff1660ff195f5416175f55565b6113828186613fad565b61138a613c42565b946113958551612a8f565b965f5b86518110156113d257806113cc6113c26113b46001948b612a59565b51516001600160a01b031690565b6106e3838d612a59565b01611398565b5086889695966113e0610538565b63ffffffff891681529060208201526113f882612a47565b5261140281612a47565b50600b546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929116823b15610bc657604051630130fc2760e51b8152915f918391829161145d919060048401613c8f565b038183865af18015610bc157611690575b506114796001613312565b6114836001613312565b803b15610bc657602060049160405192838092632981eb7760e01b82525afa8015610bc1576114c4915f91611661575b5063ffffffff808416911611613d4a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc6575f6040518092630662d3e160e51b82528183816115188c898d8c60048601613db1565b03925af18015610bc15761164d575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc65760405163136ca0f960e11b815260ff84166004820152905f908290602490829084905af18015610bc157611639575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc65760405163136ca0f960e11b815260ff9390931660048401525f908390602490829084905af18015610bc1577fa34835bc2b673ec37fcf1591a91295b163fc2e181e4ea4e733beb27de1ceac4c9561162093600192611625575b5060405195869586613e0e565b0390a2005b806110ca5f61163393610517565b88611613565b806110ca5f61164793610517565b86611588565b806110ca5f61165b93610517565b86611527565b611683915060203d602011611689575b61167b8183610517565b810190612e75565b886114b3565b503d611671565b806110ca5f61169e93610517565b8761146e565b9181601f84011215610649578235916001600160401b0383116116d1576020838186019501011161064457565b60405162461bcd60e51b815260206004820152602b60248201527f414249206465636f64696e673a20696e76616c69642063616c6c64617461206160448201526a0e4e4c2f240d8cadccee8d60ab1b6064820152608490fd5b346107b95760403660031901126107b4576004356001600160401b0381116107af573660238201121561064957806004013561176581610558565b916117736040519384610517565b8183526024602084019260051b820101903682116106445760248101925b8284106117c157602435856001600160401b0382116107af576117bb6107ad9236906004016116a4565b91612c3a565b83356001600160401b038111610649576020916117e58392602436918701016105dd565b815201930192611791565b346107b95760a03660031901126107b45760043561180d816105c8565b61187b60243561181c816105c8565b604435611828816105c8565b6064359060843592611839846105c8565b6032549561185f60ff600889901c1615809881996118f9575b81156118d9575b50612ecc565b86611872600160ff196032541617603255565b6118c057612f2f565b61188157005b61189161ff001960325416603255565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b6118d461010061ff00196032541617603255565b612f2f565b303b159150816118eb575b505f611859565b60ff1660011490505f6118e4565b600160ff8216109150611852565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b346107b9575f3660031901126107b4577f000000000000000000000000000000000000000000000000000000000000000060ff8116601f811161199f5761089a916040519161197b604084610517565b60208084528381019190368337835252604051918291602083526020830190611907565b632cd44ac360e21b5f5260045ffd5b634e487b7160e01b5f52602160045260245ffd5b60031115610a3057565b906003821015610a305752565b815181526020918201516040820193926105479201906119cc565b346107b95760203660031901126107b457600435611a11816105c8565b611a19612c22565b5060018060a01b03165f52600360205260405f2060ff600160405192611a3e846104fc565b80548452015416906003821015610a305761089a916020820152604051918291826119d9565b346107b9575f3660031901126107b4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc65760206024916040519283809263237dfb4760e11b82523360048301525afa8015610bc157611ad9915f91610b925750612b67565b6107ad6138ed565b346107b95760203660031901126107b4576020600160ff611b00610c64565b161b806033541614604051908152f35b346107b95760803660031901126107b457611b29610c64565b606036602319011261124857604051611b41816104dc565b602435611b4d816107e8565b815260443561ffff811681036105d957602082015260643561ffff811681036105d9576040820152611b7d613895565b60ff5f541660ff83161015611b95576107ad91613fad565b637310cff560e11b5f5260045ffd5b346107b9575f3660031901126107b4576020603354604051908152f35b346107b9575f3660031901126107b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346107b9575f3660031901126107b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346107b95760403660031901126107b457600435611c66816105c8565b6024356001600160401b0381116107af57611c859036906004016109a4565b6008546001600160a01b03163303611cba576001600160a01b0382165f9081526009602052604090204290556107ad91614068565b6376d8ab1760e11b5f5260045ffd5b346107b9575f3660031901126107b457611ce1613895565b609680546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346107b95760203660031901126107b4576020611d4b600435611d46816105c8565b6130ce565b604051908152f35b346107b95760a03660031901126107b457611d6d366111f8565b606435611d798161124d565b6084356001600160401b0381116107af57611d9890369060040161125e565b611da0613895565b5f5460ff1680611db260c08210613c1a565b611dbe61136a82613c30565b611dc88582613fad565b611dd0613c42565b93611ddb8451612a8f565b955f5b8551811015611e0a5780611e04611dfa6113b46001948a612a59565b6106e3838c612a59565b01611dde565b50848688611e16610538565b63ffffffff88168152906020820152611e2e82612a47565b52611e3881612a47565b50600b546001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692911690823b15610bc657611e95925f9283604051809681958294630130fc2760e51b845260048401613c8f565b03925af18015610bc15761203f575b50611eae5f613312565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc6575f6040518092633aea0b9d60e11b8252818381611f01888b8d60048501613de6565b03925af18015610bc15761202b575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc65760405163136ca0f960e11b815260ff86166004820152905f908290602490829084905af18015610bc157612017575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc65760405163136ca0f960e11b815260ff9590951660048601525f908590602490829084905af1938415610bc1575f6116209281927fa34835bc2b673ec37fcf1591a91295b163fc2e181e4ea4e733beb27de1ceac4c97612009575060405195869586613e0e565b806110ca8461163393610517565b806110ca5f61202593610517565b85611f71565b806110ca5f61203993610517565b85611f10565b806110ca5f61204d93610517565b85611ea4565b92939161207561208392600f60f81b865260e0602087015260e0860190611907565b908482036040860152611907565b92606083015260018060a01b031660808201525f60a082015260c0818303910152602080835192838152019201905f5b8181106120c05750505090565b82518452602093840193909201916001016120b3565b346107b9575f3660031901126107b45760c854158061216e575b15612131576120fd61414f565b612105614204565b9061089a604051612117602082610517565b5f8082523660208301376040519384933091469186612053565b60405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606490fd5b5060c954156120f0565b81601f820112156106495780359061218f82610558565b9261219d6040519485610517565b82845260208085019360061b8301019181831161064457602001925b8284106121c7575050505090565b60408483031261124857602060409182516121e1816104fc565b6121ea87610c74565b8152828701356121f9816105c8565b838201528152019301926121b9565b346107b95760a03660031901126107b457600435612225816105c8565b60243590604435906001600160401b0382116107af5760209261224f611d4b933690600401612178565b6064359160843593613121565b346107b95760203660031901126107b457602061227a600435614c90565b6040516001600160c01b039091168152f35b346107b9575f3660031901126107b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346107b9575f3660031901126107b4576096546040516001600160a01b039091168152602090f35b346107b9575f3660031901126107b457602060ff5f5416604051908152f35b346107b9575f3660031901126107b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346107b9575f3660031901126107b45760206040517f2bd82124057f0913bc3b772ce7b83e8057c1ad1f3510fc83778be20f10ec5de68152f35b346107b95760203660031901126107b4576107ad6004356123b5816105c8565b6123bd613895565b613f4f565b346107b9575f3660031901126107b4576020600a54604051908152f35b346107b95760203660031901126107b45760206004356123fe816105c8565b600b546040516001600160a01b0392831691909216148152f35b60206040818301928281528451809452019201905f5b81811061243b5750505090565b825163ffffffff1684526020938401939092019160010161242e565b346107b95760403660031901126107b457600435612474816107e8565b602435906001600160401b0382116107af5736602383011215610649578160040135916124a083610558565b926124ae6040519485610517565b8084526024602085019160051b8301019136831161064457602401905b8282106124eb5761089a6124df8686614299565b60405191829182612418565b81358152602091820191016124cb565b346107b95760803660031901126107b457600435612518816105c8565b602435612524816105c8565b6044356001600160401b0381116107af57612543903690600401610df3565b90606435916001600160401b0383116107af576125a76125bf9161256e610ed99536906004016116a4565b959094612579613a0f565b61258a61068f600180603354161490565b600b546001600160a01b03166001600160a01b0390911614612c0c565b9282016125b481846132cf565b879592949195614320565b926125c981613312565b8061265057505050916125dd928194614751565b51905f5b81518110156107ad578061264a61260061078861077a60019587612ac1565b63ffffffff6126416108ac61263761262561261b888c612a59565b5163ffffffff1690565b9460ff165f52600160205260405f2090565b5463ffffffff1690565b91161115613435565b016125e1565b80612662600192989695979498613312565b03612680576107ad956126749161331c565b97935095915050614431565b63354bb8ab60e01b5f5260045ffd5b346107b9575f3660031901126107b45760206040517f4d404e3276e7ac2163d8ee476afa6a41d1f68fb71f2d8b6546b24e55ce01b72a8152f35b346107b9575f3660031901126107b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346107b9575f3660031901126107b457600b546040516001600160a01b039091168152602090f35b61054790929192606081019361ffff6040809263ffffffff8151168552826020820151166020860152015116910152565b346107b95760203660031901126107b45760ff612781610c64565b612789612b93565b50165f52600160205261089a60405f2061ffff604051916127a9836104dc565b5463ffffffff81168352818160201c16602084015260301c16604082015260405191829182612735565b346107b9575f3660031901126107b4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346107b95760203660031901126107b457600435612834816105c8565b61283c613895565b6001600160a01b03811615612854576107ad90613f07565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346107b9575f3660031901126107b4576020611d4b615568565b346107b95760203660031901126107b4576004357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc65760206004916040519283809263755b36bd60e11b82525afa908115610bc1575f91612955575b506001600160a01b03163303612946576107ad9061347d565b63794821ff60e01b5f5260045ffd5b61296e915060203d602011610d9257610d848183610517565b5f61292d565b346107b95760203660031901126107b457600435612991816105c8565b60018060a01b03165f526003602052602060ff600160405f200154166111a560405180926119cc565b60405162461bcd60e51b815260206004820152603560248201527f436f6e747261637420646f6573206e6f7420686176652066616c6c6261636b206044820152746e6f7220726563656976652066756e6374696f6e7360581b6064820152608490fd5b15612a2457565b63840a48d560e01b5f5260045ffd5b634e487b7160e01b5f52603260045260245ffd5b805115612a545760200190565b612a33565b8051821015612a545760209160051b010190565b60408051909190612a7e8382610517565b6001815291601f1901366020840137565b90612a9982610558565b612aa66040519182610517565b8281528092612ab7601f1991610558565b0190602036910137565b908151811015612a54570160200190565b15612ad957565b63aba4733960e01b5f5260045ffd5b60405162461bcd60e51b815260206004820152602560248201527f54617267657420636f6e747261637420646f6573206e6f7420636f6e7461696e60448201526420636f646560d81b6064820152608490fd5b519081151582036105d957565b908160209103126107b4576109bf90612b3b565b6040513d5f823e3d90fd5b15612b6e57565b631d77d47760e21b5f5260045ffd5b15612b8457565b63c61dca5d60e01b5f5260045ffd5b60405190612ba0826104dc565b5f6040838281528260208201520152565b8054821015612a54575f5260205f2001905f90565b90604051612bd3816104dc565b604081935463ffffffff8116835263ffffffff8160201c166020840152811c910152565b908160209103126107b457516109bf816105c8565b15612c1357565b6366e565df60e01b5f5260045ffd5b60405190612c2f826104fc565b5f6020838281520152565b9190612c4d61068f600480603354161490565b612c6b612c5b5f5460ff1690565b612c66368585610919565b613e7c565b50612c7882845114612e53565b5f917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165b818410612cb3575050505050565b612cd7610788612cc986858798999a9697612e69565b356001600160f81b03191690565b91612ce28688612a59565b51918251813b15610bc6576040516379a0849160e11b815260ff8616600482015290602082602481865afa918215610bc157612d2d9263ffffffff915f91612e35575b501614612e8a565b612d378351612a8f565b955f985f995b85518b1015612dc35788612dbb600192612da6610f638f612d986107476107418f938f6106cd82612d6d92612a59565b6001600160a01b0381165f908152600360205260409020909a9054612d928383612a59565b52612a59565b60ff600192161c1660011490565b838060a01b0316838060a01b03831611612eb6565b9a0199612d3d565b509594809298939950612dd991976001956136bc565b43612def8260ff165f52600560205260405f2090565b557f46077d55330763f16269fd75e5761663f4192d2791747c0189b16ad31db07db460ff60405192169180612e2943829190602083019252565b0390a201929193612ca5565b612e4d915060203d81116116895761167b8183610517565b5f612d25565b15612e5a57565b63aaad13f760e01b5f5260045ffd5b90821015612a54570190565b908160209103126107b457516109bf816107e8565b15612e9157565b638e5aeee760e01b5f5260045ffd5b15612ea757565b63d053aa2160e01b5f5260045ffd5b15612ebd57565b63ba50f91160e01b5f5260045ffd5b15612ed357565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b92919260408051612f408282610517565b601681527520ab29a932b3b4b9ba393ca1b7b7b93234b730ba37b960511b6020820152612f6f82519283610517565b600682526576302e302e3160d01b6020830152612f9c60ff60325460081c16612f9781613ea7565b613ea7565b8051906001600160401b0382116104f757612fc182612fbc60ca54614117565b614e7c565b602090601f831160011461303357610dee946130116123bd989561300986610b8d976105479e9d9b97610dc1975f92613028575b50508160011b915f199060031b1c19161790565b60ca55614f1b565b61301a5f60c855565b6130235f60c955565b613f07565b015190505f80612ff5565b60ca5f52601f19831691907f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee1925f5b8181106130b657506123bd98956001866105479d9c9a96610dc196610dee9b96610b8d9a613011971061309e575b505050811b0160ca55614f1b565b01515f1960f88460031b161c191690555f8080613090565b92936020600181928786015181550195019301613062565b6109bf9060405160208101917f2bd82124057f0913bc3b772ce7b83e8057c1ad1f3510fc83778be20f10ec5de6835260018060a01b0316604082015260408152613119606082610517565b5190206140f1565b919493909260405192602084019460e08501917f4d404e3276e7ac2163d8ee476afa6a41d1f68fb71f2d8b6546b24e55ce01b72a875260018060a01b03166040860152606085015260c060808501528651809152602061010085019701905f5b8181106131ae575050506109bf949561311992849260a084015260c083015203601f198101835282610517565b8251805160ff168a526020908101516001600160a01b0316818b015260409099019890920191600101613181565b359060028210156105d957565b919082604091031261124857604051613201816104fc565b6020808294803584520135910152565b9080601f83011215610649576040519161322c604084610517565b82906040810192831161064457905b8282106132485750505090565b813581526020918201910161323b565b8082039291610100841261124857604051613272816104dc565b6080819561328084866131e9565b835261328f84604087016131e9565b6020840152607f190112611248576132c660409260c08451956132b1876104fc565b6132be8360808301613211565b875201613211565b60208401520152565b9091610140828403126107b4576132e5826131dc565b926020830135906001600160401b0382116107af57604061330b826109bf9487016109a4565b9401613258565b60021115610a3057565b9190610180838203126107b457613332836131dc565b9260208101356001600160401b0381116107af57826133529183016109a4565b926133608360408401613258565b926101408301356001600160401b0381116107af5781613381918501612178565b92610160810135906001600160401b0382116107af57019060608282031261124857604051916133b0836104dc565b80356001600160401b0381116133e4576040926133ce9183016109a4565b8352602081013560208401520135604082015290565b60405162461bcd60e51b815260206004820152602360248201527f414249206465636f64696e673a20696e76616c696420737472756374206f66666044820152621cd95d60ea1b6064820152608490fd5b1561343c57565b63c6b9e76760e01b5f5260045ffd5b90604051613458816104dc565b604061ffff82945463ffffffff81168452818160201c16602085015260301c16910152565b61348e603354198219811614612b7d565b806033556040519081527f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c60203392a2565b906134ca826108fe565b6134d76040519182610517565b8281528092612ab7601f19916108fe565b634e487b7160e01b5f52601160045260245ffd5b5f19811461350a5760010190565b6134e8565b5f81805b61358957506135259061ffff166134c0565b5f5f5b825182108061357e575b15613577576001811b8416613550575b61354b906134fc565b613528565b90600161354b9160ff60f81b8460f81b165f1a61356d8287612ac1565b5301919050613542565b5050905090565b506101008110613532565b5f19810181811161350a5761ffff9116911661ffff811461350a576001019080613513565b6020818303126107b4578051906001600160401b0382116107af57019080601f830112156106495781516135e181610558565b926135ef6040519485610517565b81845260208085019260051b82010192831161064457602001905b8282106136175750505090565b6020809161362484612b3b565b81520191019061360a565b93929190606085016060865281518091526020608087019201905f5b81811061369d575050508481036020860152602080835192838152019201905f5b818110613687575050509060406105479294019060ff169052565b825184526020938401939092019160010161366c565b82516001600160a01b031684526020938401939092019160010161364b565b909291926136c8612a6d565b9060f885901b6001600160f81b0319165f1a6136e383612a47565b537f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031694853b15610bc65761373a955f9283604051809981958294636c3fb4bf60e01b84528a6004850161362f565b03925af1938415610bc1575f9461379b575b505f5b8251811015613794578061376e61376860019388612a59565b51151590565b613779575b0161374f565b61378f8361378a6106cd8488612a59565b614068565b613773565b5050509050565b6137b89194503d805f833e6137b08183610517565b8101906135ae565b925f61374c565b156137c657565b63bbba60cb60e01b5f5260045ffd5b907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b15610bc6575f60405180936378219b3f60e11b8252856004830152604060248301528183816138356044820188611907565b03925af1908115610bc1577fec2963ab21c1e50e1e582aa542af2e4bf7bf38e6e1403c27b42e1c5d6e621eaa9261388092613885575b50604051918291602083526020830190611907565b0390a2565b5f61388f91610517565b5f61386b565b6096546001600160a01b031633036138a957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b5f196033556040515f1981527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2565b806033556040519081527fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d60203392a2565b600754604080516001600160a01b038084168252841660208201529192917f315457d8a8fe60f04af17c16e2f5a5e1db612b31648e58030360759ef8f3528c9190a16001600160a01b03166001600160a01b03199190911617600755565b600854604080516001600160a01b038084168252841660208201529192917f8f30ab09f43a6c157d7fce7e0a13c003042c1c95e8a72e7a146a21c0caa24dc99190a16001600160a01b03166001600160a01b03199190911617600855565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303613a4157565b6323d871a560e01b5f5260045ffd5b90613a5b82516134c0565b5f5b8351811015613a94576001906001600160f81b0319613a7c8287612a59565b5160f81b165f1a613a8d8285612ac1565b5301613a5d565b509150565b15613aa057565b6368b6a87560e11b5f5260045ffd5b6001600160a01b0390911681526040602082018190526109bf92910190611907565b6040906109bf939281528160208201520190611907565b634e487b7160e01b5f52601260045260245ffd5b5f5160206158f25f395f51905f5290613b13612c22565b505f919006602060c0835b613c13575f935f5160206158f25f395f51905f5260038186818180090908604051613b498582610517565b84368237848185604051613b5d8282610517565b813682378381528360208201528360408201528560608201527f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f5260808201525f5160206158f25f395f51905f5260a082015260056107cf195a01fa8015613c1857613bc790615642565b5191613c13575f5160206158f25f395f51905f5282800914613bfe57505f5160206158f25f395f51905f5260015f94089293613b1e565b92935050613c0a610538565b92835282015290565b613ae8565bfe5b15613c2157565b633cb89c9760e01b5f5260045ffd5b60ff60019116019060ff821161350a57565b60408051909190613c538382610517565b6001815291601f1901825f5b828110613c6b57505050565b602090604051613c7a816104fc565b5f815260608382015282828501015201613c5f565b90604082019060018060a01b031682526040602083015282518091526060820191602060608360051b8301019401925f915b838310613cd057505050505090565b9091929394605f1982820301835285516020606081604085019363ffffffff81511686520151936040838201528451809452019201905f905b808210613d285750505060208060019297019301930191939290613cc1565b82516001600160a01b0316845260209384019390920191600190910190613d09565b15613d5157565b630bd441b960e21b5f5260045ffd5b90602080835192838152019201905f5b818110613d7d5750505090565b825180516001600160a01b031685526020908101516001600160601b03168186015260409094019390920191600101613d70565b906109bf94936001600160601b0360809460ff63ffffffff941685521660208401521660408201528160608201520190613d60565b6001600160601b036109bf949360ff6060941683521660208201528160408201520190613d60565b9395949060c0936001600160601b0363ffffffff94613e5088613e679561ffff6040809263ffffffff8151168552826020820151166020860152015116910152565b16606087015260e0608087015260e0860190613d60565b95613e7181613312565b60a085015216910152565b906001613e8a60ff93614e04565b928392161b1115613e985790565b63ca95733360e01b5f5260045ffd5b15613eae57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b609680546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b600b54604080516001600160a01b038084168252841660208201529192917f9770f3cadfdcbb6f93af935e86047111590c3768271d237e4a2bc0b874bed6939190a16001600160a01b03166001600160a01b03199190911617600b55565b60ff7f3ee6fe8d54610244c3e9d3c066ae4aee997884aa28f10616ae821925401318ac911691825f52600160205260405f2061400063ffffffff835116829063ffffffff1663ffffffff19825416179055565b6020820151815465ffff0000000067ffff000000000000604086015160301b169260201b169067ffffffff00000000191617179055604051809161388082606081019261ffff6040809263ffffffff8151168552826020820151166020860152015116910152565b9060018060a01b0382165f52600360205260405f2060ff6001820154166003811015610a30576001036140e2576140d190546140a860ff5f541684613e7c565b6001600160c01b03908116916140bd90614c90565b1681166001600160c01b0390811691161490565b6140d9575050565b6105479161505c565b6325ec6c1f60e01b5f5260045ffd5b6042906140fc615568565b906040519161190160f01b8352600283015260228201522090565b90600182811c92168015614145575b602083101461413157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691614126565b604051905f8260ca549161416283614117565b80835292600181169081156141e55750600114614186575b61054792500383610517565b5060ca5f90815290917f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee15b8183106141c95750509060206105479282010161417a565b60209193508060019154838589010152019101909184926141b1565b6020925061054794915060ff191682840152151560051b82010161417a565b604051905f8260cb549161421783614117565b80835292600181169081156141e5575060011461423a5761054792500383610517565b5060cb5f90815290917fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb5b81831061427d5750509060206105479282010161417a565b6020919350806001915483858901015201910190918492614265565b91906142a58151612a8f565b905f5b81518110156142e357806142ca6142c160019385612a59565b51876002615151565b63ffffffff6142d98387612a59565b91169052016142a8565b5090925050565b908160209103126107b4575190565b905f905b6002821061430a57505050565b60208060019285518152019301910190916142fd565b907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690614354612c22565b5061436161118a846130ce565b91803b15610bc6576040935f610164926143f56020966143e1888a519a8b998a986301e2d35b60e11b8a5260018060a01b031660048a01526143b160248a01825160208091805184520151910152565b80830151805160648b01526020015160848a015201516143d560a4890182516142f9565b015160e48701906142f9565b805161012486015260200151610144850152565b5af1908115610bc1575f91614408575090565b6109bf915060203d60201161442a575b6144228183610517565b8101906142ea565b503d614418565b94918093916144526144589461444a8851855114612e53565b87838a61525b565b86614a7c565b5f5b8251811015614563578061449261448d61447c61078861077a60019689612ac1565b60ff165f52600160205260405f2090565b61344b565b6144a061261b838651612a59565b63ffffffff6144b66108ac845163ffffffff1690565b9116116144c5575b500161445a565b61451b906144d961078861077a8589612ac1565b6144f76144ea856040890151612a59565b516001600160601b031690565b896145096144ea8760208b0151612a59565b91614514878c612a59565b519361533c565b61455d614526612a6d565b61453361077a8488612ac1565b5f1a61453e82612a47565b5361378a602061454e858a612a59565b5101516001600160a01b031690565b5f6144be565b5050505050565b60405190614577826104dc565b60606040838281528260208201520152565b1561459057565b6313ca465760e01b5f5260045ffd5b156145a657565b630c6816cd60e01b5f5260045ffd5b9190820180921161350a57565b156145c957565b631968677d60e11b5f5260045ffd5b600160209183518155019101516003811015610a305760ff80198354169116179055565b9080601f8301121561064957815161461381610558565b926146216040519485610517565b81845260208085019260051b82010192831161064457602001905b8282106146495750505090565b6020809183516146588161124d565b81520191019061463c565b9190916040818403126107b45780516001600160401b0381116107af578361468c9183016145fc565b9260208201516001600160401b0381116107af576109bf92016145fc565b6109bf939260609260018060a01b0316825260208201528160408201520190611907565b6020818303126107b4578051906001600160401b0382116107af57019080601f8301121561064957815161470181610558565b9261470f6040519485610517565b81845260208085019260051b82010192831161064457602001905b8282106147375750505090565b602080918351614746816107e8565b81520191019061472a565b6147f061475c61456a565b946147ea614771610747610f3b5f5460ff1690565b61477a86614c90565b906147848661548b565b6001600160c01b031690614799821515614589565b60018060c01b03166147b36147ae8284161590565b61459f565b6001600160a01b0386165f9081526009602052604090206147e3906147dc9054600a54906145b5565b42116145c2565b1785614cd4565b836137d5565b6001614818816148108460018060a01b03165f52600360205260405f2090565b015460ff1690565b614821816119c2565b03614a17575b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc6575f6040518092631fd93ca960e11b82528183816148798a8960048401613aaf565b03925af18015610bc157614a03575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc657835f9184836148e09560405196879586948593632550477760e01b8552600485016146aa565b03925af18015610bc1575f915f916149df575b50604085015260208401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc657825f91614952938360405180968195829462bff04d60e01b845260048401613ad1565b03925af1908115610bc1575f916149bd575b5082525f5b81518110156149b857806149b261498e61448d61447c61078861077a60019789612ac1565b63ffffffff6126416108ac6149a761261b878b51612a59565b935163ffffffff1690565b01614969565b505090565b6149d991503d805f833e6149d18183610517565b8101906146ce565b5f614964565b90506149fd91503d805f833e6149f58183610517565b810190614663565b5f6148f3565b806110ca5f614a1193610517565b5f614888565b614a48614a22610538565b838152600160208201526001600160a01b0383165f9081526003602052604090206145d8565b816001600160a01b0382167fe8e68cef1c3a761ed7be7e8463a375f27f7bc335e51824223cacce636ec5c3fe5f80a3614827565b614a8761475c61456a565b6001614aa7816148108460018060a01b03165f52600360205260405f2090565b614ab0816119c2565b03614c43575b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc6575f6040518092631fd93ca960e11b8252818381614b088a8960048401613aaf565b03925af18015610bc157614c2f575b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b15610bc657835f918483614b6f9560405196879586948593632550477760e01b8552600485016146aa565b03925af18015610bc1575f915f91614c13575b50604085015260208401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b15610bc657614be1925f928360405180968195829462bff04d60e01b845260048401613ad1565b03925af1908115610bc1575f91614bf9575b50815290565b614c0d91503d805f833e6149d18183610517565b5f614bf3565b9050614c2991503d805f833e6149f58183610517565b5f614b82565b806110ca5f614c3d93610517565b5f614b17565b614c4e614a22610538565b816001600160a01b0382167fe8e68cef1c3a761ed7be7e8463a375f27f7bc335e51824223cacce636ec5c3fe5f80a3614ab6565b5f1981019190821161350a57565b805f52600260205260405f20549081155f14614cac5750505f90565b5f52600260205260405f20905f19810190811161350a57614ccc91612bb1565b505460401c90565b90614ce7825f52600260205260405f2090565b5480614d345750614d03610547925f52600260205260405f2090565b614d2f614d0e610549565b4363ffffffff168152925b5f60208501526001600160c01b03166040840152565b6155cf565b91614d5f63ffffffff93614d59614d53845f52600260205260405f2090565b91614c82565b90612bb1565b5090614d6f825463ffffffff1690565b43851694168403614d9a57506105479250906001600160401b0382549181199060401b169116179055565b815467ffffffff000000001916602085901b67ffffffff000000001617909155610547929190614d2f90614dd6905f52600260205260405f2090565b91614d19614de2610549565b63ffffffff9095168552565b15614df557565b631019106960e31b5f5260045ffd5b90610100825111614e6d57815115614e6857602082015160019060f81c81901b5b8351821015614e6357600190614e4e614e4461078861077a8689612ac1565b60ff600191161b90565b90614e5a818311614dee565b17910190614e25565b925050565b5f9150565b637da54e4760e11b5f5260045ffd5b601f8111614e88575050565b60ca5f5260205f20906020601f840160051c83019310614ec2575b601f0160051c01905b818110614eb7575050565b5f8155600101614eac565b9091508190614ea3565b601f8211614ed957505050565b5f5260205f20906020601f840160051c83019310614f11575b601f0160051c01905b818110614f06575050565b5f8155600101614efb565b9091508190614ef2565b9081516001600160401b0381116104f757614f4281614f3b60cb54614117565b60cb614ecc565b602092601f8211600114614f7657614f71929382915f926130285750508160011b915f199060031b1c19161790565b60cb55565b60cb5f52601f198216937fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb915f5b868110614fda5750836001959610614fc2575b505050811b0160cb55565b01515f1960f88460031b161c191690555f8080614fb7565b91926020600181928685015181550194019201614fa4565b602080825282516001600160a01b039081168284015281840151166040808401919091529092015160608083015280516080830181905260a09092019201905f5b8181106150405750505090565b825163ffffffff16845260209384019390920191600101615033565b600b54825192936001600160a01b03918216937f000000000000000000000000000000000000000000000000000000000000000090921692909161509f90612a8f565b925f5b86518110156150cd57806150b860019289612ac1565b5160f81c6150c68288612a59565b52016150a2565b509291945092615101906150f16150e2610549565b6001600160a01b039096168652565b6001600160a01b03166020850152565b6040830152803b15610bc657604051636e3492b560e01b8152915f9183918290849082906151329060048301614ff2565b03925af18015610bc1576151435750565b806110ca5f61054793610517565b9190815f528260205260405f2054925f5b8481106151fa5760405162461bcd60e51b815260206004820152605c60248201527f5265676973747279436f6f7264696e61746f722e67657451756f72756d42697460448201527f6d6170496e6465784174426c6f636b4e756d6265723a206e6f206269746d617060648201527f2075706461746520666f756e6420666f72206f70657261746f72496400000000608482015260a490fd5b80850385811161350a576108ac61521091614c82565b61523961522e826152298887905f5260205260405f2090565b612bb1565b505463ffffffff1690565b63ffffffff808616911611156152525750600101615162565b94505050505090565b919290602082019283515f52600460205260ff60405f2054166152d65760408301805142116152c757610547956152bf9386515f5260046020526152a960405f20600160ff19825416179055565b6007546001600160a01b03169651925193613121565b905191615658565b630819bdcd60e01b5f5260045ffd5b636fbefec360e11b5f5260045ffd5b156152ec57565b6356168b4160e11b5f5260045ffd5b908160209103126107b457516109bf8161124d565b1561531757565b634c44995d60e01b5f5260045ffd5b1561532d57565b63b187e86960e01b5f5260045ffd5b6020858101516001600160a01b039081165f8181526003909352604090922054929795969394929361538f9361538293919261537b92911614156152e5565b5160ff1690565b60ff808816911614612e8a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031694853b15610bc657604051635401ed2760e01b8152600481019290925260ff16602482015293602090859060449082905afa928315610bc157610547945f94615441575b508261543992615434615420936001600160601b0361542c61542082998b61578f565b6001600160601b031690565b911611615310565b6157b2565b911610615326565b61542091945092615439926154346154786001600160601b039660203d602011615484575b6154708183610517565b8101906152fb565b969350509250926153fd565b503d615466565b600b546001600160a01b0316803b15610bc657604051632e8da82960e01b81526001600160a01b03929092166004830152602090829060249082905afa908115610bc1575f91615549575b50156154de57565b60405162461bcd60e51b815260206004820152603c60248201527f5265636c61696d536c617368696e675265676973747279436f6f7264696e617460448201527f6f723a206f70657261746f72206e6f742077686974656c6973746564000000006064820152608490fd5b615562915060203d602011610bba57610bac8183610517565b5f6154d6565b6155706157d0565b61557861581b565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526155c960c082610517565b51902090565b8054680100000000000000008110156104f7576155f191600182018155612bb1565b61562f57815160208084015160409485015163ffffffff909316911b67ffffffff00000000161767ffffffffffffffff199190931b16919091179055565b634e487b7160e01b5f525f60045260245ffd5b1561564957565b63d51edae360e01b5f5260045ffd5b9190916156658284615841565b9390926005851015610a305761568e94159384615756575b5083156156a3575b50505015151590565b61569457565b638baa579f60e01b5f5260045ffd5b5f9350906156ce6156dc8594936040519283916020830195630b135d3f60e11b875260248401613ad1565b03601f198101835282610517565b51915afa3d1561574f573d6156f0816108fe565b906156fe6040519283610517565b81523d5f602083013e5b81615741575b8161571d575b505f8080615685565b905061573a630b135d3f60e11b91602080825183010191016142ea565b145f615714565b90506020815110159061570e565b6060615708565b6001600160a01b0384811691161493505f61567d565b906001600160601b03809116911602906001600160601b03821691820361350a57565b6157ad6001600160601b039161ffff6020612710950151169061576c565b160490565b6157ad6001600160601b039161ffff6040612710950151169061576c565b6157d861414f565b80519081156157e8576020012090565b505060c85480156157f65790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b615823614204565b8051908115615833576020012090565b505060c95480156157f65790565b9060418151145f1461586d5761586991602082015190606060408401519301515f1a90615876565b9091565b50505f90600290565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084116158e6576020935f9360ff60809460405194855216868401526040830152606082015282805260015afa15610bc1575f516001600160a01b038116156158de57905f90565b505f90600190565b505050505f9060039056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a26469706673582212205a6c3a08d12dc38c88bb1ff521ffbdbb07f4c645df64318227e1da7aca39944464736f6c634300081c0033";

type ReclaimSlashingRegistryCoordinatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReclaimSlashingRegistryCoordinatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReclaimSlashingRegistryCoordinator__factory extends ContractFactory {
  constructor(...args: ReclaimSlashingRegistryCoordinatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakeRegistry: string,
    _blsApkRegistry: string,
    _indexRegistry: string,
    _socketRegistry: string,
    _allocationManager: string,
    _pauserRegistry: string,
    _version: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ReclaimSlashingRegistryCoordinator> {
    return super.deploy(
      _stakeRegistry,
      _blsApkRegistry,
      _indexRegistry,
      _socketRegistry,
      _allocationManager,
      _pauserRegistry,
      _version,
      overrides || {}
    ) as Promise<ReclaimSlashingRegistryCoordinator>;
  }
  override getDeployTransaction(
    _stakeRegistry: string,
    _blsApkRegistry: string,
    _indexRegistry: string,
    _socketRegistry: string,
    _allocationManager: string,
    _pauserRegistry: string,
    _version: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakeRegistry,
      _blsApkRegistry,
      _indexRegistry,
      _socketRegistry,
      _allocationManager,
      _pauserRegistry,
      _version,
      overrides || {}
    );
  }
  override attach(address: string): ReclaimSlashingRegistryCoordinator {
    return super.attach(address) as ReclaimSlashingRegistryCoordinator;
  }
  override connect(
    signer: Signer
  ): ReclaimSlashingRegistryCoordinator__factory {
    return super.connect(signer) as ReclaimSlashingRegistryCoordinator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReclaimSlashingRegistryCoordinatorInterface {
    return new utils.Interface(
      _abi
    ) as ReclaimSlashingRegistryCoordinatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReclaimSlashingRegistryCoordinator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReclaimSlashingRegistryCoordinator;
  }
}
